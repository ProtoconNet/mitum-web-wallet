{"version":3,"sources":["../../mitum-js-util/lib/util.js","../../mitum-js-util/lib/hint.js","../../mitum-js-util/lib/seal.js","../../mitum-js-util/lib/sign.js","../../mitum-js-util/lib/constant.js","../../mitum-js-util/index.js","../../mitum-js-util/lib/operation.js","lib/Account.js","text/mode.js","lib/History.js","store/actions/index.js","store/reducers/LoginReducer.js","lib/Url.js","store/reducers/OperationReducer.js","store/reducers/QueueReducer.js","lib/Queue.js","store/reducers/NetworkReducer.js","store/reducers/PageReducer.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","lib/Validation.js","components/modals/AlertModal.js","views/Login.js","components/buttons/SelectButton.js","components/modals/PublicKeyModal.js","components/modals/PendingModal.js","lib/Sleep.js","views/Wallet.js","views/KeyGen.js","components/infos/Keys.js","components/infos/SubInfo.js","components/adders/ThresholdAdder.js","components/adders/KeyAdder.js","views/AddressGen.js","views/ResKeyGen.js","mitum_wallet_manual.pdf","views/Help.js","components/modals/OperationConfirm.js","components/infos/Balances.js","components/adders/AmountAdder.js","components/operations/CreateAccount.js","components/adders/ExtraAdder.js","components/operations/UpdateKey.js","components/operations/Transfer.js","views/Operation.js","lib/Parse.js","views/Sign.js","components/Navigation.js","views/Logout.js","views/NetworkSetter.js","components/Footer.js","components/modals/LogoutConfirm.js","views/Response.js","views/UpdateKeyLoad.js","components/SubNavigation.js","views/ImportQr.js","App.js","reportWebVitals.js","index.js","../../mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","ISOToUTC","iso","rtime","t","indexOf","z","Error","_time","substring","dotIdx","decimal","idx","lastIndexOf","startIdx","module","exports","_hint","type","VERSION","parseHinted","hinted","parsed","hintless","hint","getTypeFromHint","getTimeStamp","Date","dateToUTC","date","toISOString","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","MBS_CREATE_DOCUMENTS_SINGLE_FILE","MBS_CREATE_DOCUMENTS_OP_FACT","MBS_CREATE_DOCUMENTS_OP","MBS_TRANSFER_ITEM_SINGLE_DOCUMENT","MBS_TRANSFER_DOCUMENTS_OP_FACT","MBS_TRANSFER_DOCUMENTS_OP","MBS_SIGN_ITEM_SINGLE_DOCUMENT","MBS_SIGN_DOCUMENTS_OP_FACT","MBS_SIGN_DOCUMENTS_OP","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","BLOCKSIGN_CREATE_DOCUMENTS","BLOCKSIGN_SIGN_DOCUMENTS","BLOCKSIGN_TRANSFER_DOCUMENTS","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","fileHash","did","signcode","title","size","signers","signcodes","CreateDocumentsItem","owner","SignDocumentsItem","TransferDocumentsItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","BlockSignFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","_VERSION","toKeypair","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","BlockSignItem","bkeys","bamounts","item","breceiver","bfh","bdid","bscode","btitle","bsize","bsigners","bscodes","filehash","documentid","bowner","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","Account","priv","pub","data","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","sort","y","localeCompare","publicKey","btc","process","ether","stellar","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","OPER_DEFAULT","PAGE_LOGIN","PAGE_OPER","PAGE_QR","PAGE_NON","SHOW_PRIVATE","SHOW_RESTORE","TYPE_CREATE_ACCOUNT","operation","create_account","TYPE_UPDATE_KEY","update_key","TYPE_TRANSFER","transfer","History","history","me","inState","in_state","confirmedAt","confirmed_at","setItems","account","LOGIN","LOGOUT","SET_HISTORY","CLEAR_HISTORY","SET_OPERATION","SET_RESPONSE","ENQUEUE_OPERATION","DEQUEUE_OPERATION","CLEAR_QUEUE","SET_NETWORK","CLEAR_NETWORK","SET_NETWORK_ID","CLEAR_NETWORK_ID","SET_PAGE","CLEAR_PAGE","clearPage","login","restoreKey","logout","clearHistory","setOperation","json","setResponse","isBroadcast","isStateIn","res","status","initialState","isLogin","isLoadHistory","download","Object","prototype","hasOwnProperty","call","file","File","alert","URL","createObjectURL","mode","filename","queue","shift","isEmpty","network","networkAccount","networkBroadcast","networkSearchFact","networkId","pageBefore","rootReducer","combineReducers","state","action","actions","enque","deque","clear","id","page","store","createStore","Home","props","isRedirect","setState","to","className","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","name","autoComplete","autoCorrect","autoCapitalize","autoSave","autoFocus","textTransform","onChange","placeholder","useCopy","copy","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","trim","RestoreKeyLoginBox","isOperation","isPublicKeyValid","pubk","test","keyHint","isAddressValid","addressHint","isNum","isThresholdValid","thres","thresNum","isWeightValid","isWeightsValidToThres","weights","total","isCurrencyValid","currencies","isDuplicate","isAmountValid","list","AlertModal","isOpen","onClose","Login","isPriv","isActive","isAlertShow","alertTitle","alertMsg","isShowLoad","a","axios","get","_addr","_priv","pk","isPrivateKeyValid","pubKey","openAlert","getAccountHistory","then","setHistory","catch","getAccountInformation","pubKeys","signIn","radio","document","querySelector","onStartLogin","checked","closeAlert","renderForm","withRouter","connect","dispatch","histories","splitHistories","_i","j","_j","_z","confirmation","direction","SelectButton","PublicKeyModal","k","PendingModal","broadcastedAt","job","Sleep","ms","Promise","resolve","setTimeout","titleStyle","flexDirection","alignItems","justifyContent","width","margin","padding","content","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isPubModalOpen","isPendModalOpen","isQueueUpdate","redirect","isResult","getFactInState","request","deleteJob","finally","isDetailVisible","isPrivVisible","isResVisible","checkInState","refresh","pathname","ref","openPubModal","bal","onSelect","hist","openPendModal","closePubModal","closePendModal","KeyGen","privKey","getPrivateKey","getKey","ThresholdAdder","onThresChange","KeyAdder","onKeyChange","onWeightChange","onAdd","isAddDisabled","useThres","AddressGen","isAlertOpen","generator","formatKey","createKeys","createdRef","onChangePub","onChangeWeight","addKey","onChangeThres","getAddress","ResKeyGen","pdfjs","GlobalWorkerOptions","workerSrc","version","Help","goToPrevPage","pageNumber","goToNextPage","scrollToPdf","pdfRef","isShowExp","numPages","href","pdfFile","rel","onLoadSuccess","onDocumentLoadSuccess","OperationConfirm","wrapperRef","isExport","post","broadcast","setResult","response","pngUrl","getElementById","toDataURL","replace","downloadLink","createElement","body","appendChild","click","removeChild","level","includeMargin","downloadQr","onExport","onSend","buttonView","Balances","labeled","AmountAdder","onCurrencyChange","onAmountChange","CreateAccount","scrollToInput","titleRef","isModalOpen","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","created","setJson","onChangeCurrency","onChangeAmount","addAmount","closeModal","ExtraAdder","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","location","renderOperation","getOperationFromType","preStyle","overflow","whiteSpace","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","toQr","files","reader","FileReader","onload","result","readAsText","signOperation","openJSON","jsonView","importJSON","toQrPage","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","clearQueue","NetworkSetter","setNetwork","setNetworkId","clearNetwork","clearNetworkId","onNetworkChange","onNetworkIdChange","Footer","LogoutConfirm","onLogout","keyHash","Response","isSignOut","addJob","clearJson","renderResponse","UpdateKeyLoad","counter","getResult","_hash","_res","reason","hs","rs","broad","getResponse","SubNavigation","isChecked","htmlFor","onCheck","onCheckOut","ImportQr","qrRef","success","setPage","openImageDialog","delay","onError","handleError","onScan","handleScan","legacyMode","importFile","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","bs58check","eccrypto","ec","compare","BaseKey","w","karr","sortedkeys","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","sig","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"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","file":"static/js/main.3e6df58e.chunk.js","sourcesContent":["/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nconst Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst { Uint64BE } = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if (this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2) ? 1 : Math.ceil((Math.log(this.num) / Math.log(2)) / 8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if (this.byteSize() > 4) {\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4 - this.byteSize());\n\n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n\n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf) {\n        const _buf = Buffer.from(buf);\n        for (var i = 0; i < _buf.length / 2; i++) {\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if (hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx + 1);\n\n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    return ISOToUTC(date.toISOString());\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {string} iso - iso string to change\n * @return {string} - UTC-format date string\n */\nconst ISOToUTC = (iso) => {\n    const t = iso.indexOf('T');\n    let z = iso.indexOf('Z');\n    let rtime;\n\n    if(z < 0) {\n        z = iso.indexOf('+');\n    }\n\n    if(z < 0) {\n        throw new Error(\"Invalid ISO type for ISOtoUTC\");\n    }\n\n    let _time = iso.substring(t + 1, z);\n    if(_time.length > 12) {\n        _time = _time.substring(0, 12);\n    }\n\n    const dotIdx = _time.indexOf('.');\n    if (dotIdx < 0) {\n        rtime = _time;\n    }\n    else {\n        const decimal = _time.substring(9, _time.length);\n        const idx = decimal.lastIndexOf('0');\n        if (idx < 0 || idx != decimal.length - 1) {\n            rtime = _time;\n        }\n        else {\n            let startIdx = decimal.length - 1;\n            for (let i = decimal.length - 1; i > -1; i--) {\n                if (decimal[i] == '0') {\n                    startIdx = i;\n                }\n                else {\n                    break;\n                }\n            }\n\n            if(startIdx == 0) {\n                rtime = _time.substring(0, dotIdx);\n            }\n            else {\n                rtime = _time.substring(0, dotIdx) + '.' + decimal.substring(0, startIdx);    \n            }\n        }\n    }\n\n    return iso.substring(0, t) + ' ' + rtime + ' +0000 UTC';\n}\n\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for (var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\";\nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";\n\n// blocksign hint\nexports.MBS_CREATE_DOCUMENTS_SINGLE_FILE = \"mitum-blocksign-create-documents-single-file\"\nexports.MBS_CREATE_DOCUMENTS_OP_FACT = \"mitum-blocksign-create-documents-operation-fact\"\nexports.MBS_CREATE_DOCUMENTS_OP = \"mitum-blocksign-create-documents-operation\"\nexports.MBS_TRANSFER_ITEM_SINGLE_DOCUMENT = \"mitum-blocksign-transfer-item-single-document\"\nexports.MBS_TRANSFER_DOCUMENTS_OP_FACT = \"mitum-blocksign-transfer-documents-operation-fact\"\nexports.MBS_TRANSFER_DOCUMENTS_OP = \"mitum-blocksign-transfer-documents-operation\"\nexports.MBS_SIGN_ITEM_SINGLE_DOCUMENT = \"mitum-blocksign-sign-item-single-document\"\nexports.MBS_SIGN_DOCUMENTS_OP_FACT = \"mitum-blocksign-sign-documents-operation-fact\"\nexports.MBS_SIGN_DOCUMENTS_OP = \"mitum-blocksign-sign-documents-operation\"","/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for (var i = 0; i < ks.length; i++) {\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for (var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n\n        this.BLOCKSIGN_CREATE_DOCUMENTS = \"CREATE-DOCUMENTS\";\n        this.BLOCKSIGN_SIGN_DOCUMENTS = \"SIGN_DOCUMENTS\";\n        this.BLOCKSIGN_TRANSFER_DOCUMENTS = \"TRANSFER_DOCUMENTS\";\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight) {\n        if (key.indexOf(':') === -1) {\n            throw '[ERROR] Invalid key';\n        }\n        if (typeof (weight) !== 'number') {\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid) {\n        if (typeof (big) !== 'number') {\n            throw '[ERROR] Invalid amount';\n        }\n        if (cid.length < 1) {\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold) {\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts) {\n        return _toAmounts(amts);\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    createCreateDocumentsItem(fileHash, did, signcode, title, size, cid, signers, signcodes) {\n        return new Xoper.CreateDocumentsItem(\n            Xhint.MBS_CREATE_DOCUMENTS_SINGLE_FILE,\n            fileHash,\n            did,\n            signcode,\n            title,\n            size,\n            cid,\n            signers,\n            signcodes\n        )\n    }\n\n    createSignDocumentsItem(owner, did, cid) {\n        return new Xoper.SignDocumentsItem(\n            Xhint.MBS_SIGN_ITEM_SINGLE_DOCUMENT,\n            owner,\n            did,\n            cid\n        )\n    }\n\n    createTransferDocumentsItem(owner, receiver, did, cid) {\n        return new Xoper.TransferDocumentsItem(\n            Xhint.MBS_TRANSFER_ITEM_SINGLE_DOCUMENT,\n            owner,\n            receiver,\n            did,\n            cid\n        )\n    }\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items) {\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys) {\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items) {\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    createBlockSignFact(type, sender, items) {\n        let _type;\n        switch(type) {\n            case this.BLOCKSIGN_CREATE_DOCUMENTS:\n                _type = Xhint.MBS_CREATE_DOCUMENTS_OP_FACT;\n                break;\n            case this.BLOCKSIGN_SIGN_DOCUMENTS:\n                _type = Xhint.MBS_SIGN_DOCUMENTS_OP_FACT;\n                break;\n            case this.BLOCKSIGN_TRANSFER_DOCUMENTS:\n                _type = Xhint.MBS_TRANSFER_DOCUMENTS_OP_FACT;\n                break;\n            default:\n                throw '[ERROR] Invalid block-sign fact type';\n        }\n        \n        return new Xoper.BlockSignFact(\n            _type,\n            sender,\n            items\n        )\n    }\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo) {\n        let _type;\n\n        if (fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if (fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if (fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else if (fact instanceof Xoper.BlockSignFact) {\n\n            switch (fact.type) {\n                case Xhint.MBS_CREATE_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_CREATE_DOCUMENTS_OP;\n                    break;\n                case Xhint.MBS_SIGN_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_SIGN_DOCUMENTS_OP;\n                    break;\n                case Xhint.MBS_TRANSFER_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_TRANSFER_DOCUMENTS_OP;\n                    break;\n                default:\n                    throw '[ERROR] Invalid fact object';\n            }\n\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers) {\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for (var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n\n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for (var i = 0; i < opers.length; i++) {\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if (error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for (var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof (f_oper) === typeof (\"\") ? JSON.parse(fs.readFileSync(f_oper))\n            : (typeof (f_oper) === typeof ({}) ? f_oper : undefined);\n        if (!before) {\n            return undefined;\n        }\n\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }\n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch (Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch (e) {\n        console.log(\"Fail to create new fact sign\");\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n\n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n\n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\nclass BlockSignItem {\n\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n    }\n\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\nclass CreateDocumentsItem extends BlockSignItem {\n    constructor(type, fileHash, did, signcode, title, size, cid, signers, signcodes) {\n        super(type);\n        this.fileHash = fileHash;\n        this.did = new Xutil.BigInteger(did);\n        this.signcode = signcode;\n        this.title = title;\n        this.size = new Xutil.BigInteger(size);\n        this.cid = cid;\n        this.signers = signers;\n        this.signcodes = signcodes;\n    }\n\n    buffer() {\n        const bfh = Buffer.from(this.fileHash);\n        const bdid = this.did.tight();\n        const bscode = Buffer.from(this.signcode);\n        const btitle = Buffer.from(this.title);\n        const bsize = this.size.tight();\n        const bcid = Buffer.from(this.cid);\n\n        let bsigners = Buffer.alloc(0);\n        for(let i = 0; i < this.signers.length; i++) {\n            bsigners = Buffer.concat([bsigners, Buffer.from(this.signers[i])]);\n        }\n\n        let bscodes = Buffer.alloc(0);\n        for(let i = 0; i < this.signcodes.length; i++) {\n            bscodes = Buffer.concat([bscodes, Buffer.from(this.signcodes[i])]);\n        }\n\n        return Buffer.concat([bfh, bdid, bscode, btitle, bsize, bcid, bsigners, bscodes]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.filehash = this.fileHash;\n        item.documentid = \"\" + this.did.value;\n        item.signcode = this.signcode;\n        item.title = this.title;\n        item.size = \"\" + this.size.value;\n        item.signers = this.signers;\n        item.signcodes = this.signcodes;\n        item.currency = this.cid;\n        return item;\n    }\n}\n\nclass SignDocumentsItem extends BlockSignItem {\n    constructor(type, owner, did, cid) {\n        super(type);\n        this.owner = new Address(owner);\n        this.did = new Xutil.BigInteger(did);\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bdid = this.did.tight();\n        const bowner = Buffer.from(this.owner.hinted());\n        const bcid = Buffer.from(this.cid);\n        return Buffer.concat([bdid, bowner, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.documentid = \"\" + this.did.value;\n        item.owner = this.owner.hinted();\n        item.currency = this.cid;\n        return item;\n    }\n}\n\nclass TransferDocumentsItem extends BlockSignItem {\n    constructor(type, owner, receiver, did, cid) {\n        super(type);\n        this.owner = new Address(owner);\n        this.receiver = new Address(receiver);\n        this.did = new Xutil.BigInteger(did);\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bdid = this.did.tight();\n        const bowner = Buffer.from(this.owner.hinted());\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bcid = Buffer.from(this.cid);\n        return Buffer.concat([bdid, bowner, breceiver, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.documentid = \"\" + this.did.value;\n        item.owner = this.owner.hinted();\n        item.receiver = this.receiver.hinted();\n        item.currency = this.cid;\n        return item;\n    }\n}\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {\n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\nclass BlockSignFact extends OperationFact {\n    constructor(type, sender, items) {\n        super(type);\n        this.sender = new Address(sender);\n        this.items = items;\n        this.type = type;\n\n        this._generateHash();\n    }\n\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n}\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if (this.fact_signs.length < 1) {\n            throw '[ERROR] Empty fact sign!'\n        }\n        \n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n\n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */\n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for (var i = 0; i < this.fact_signs.length; i++) {\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateDocumentsItem,\n    SignDocumentsItem,\n    TransferDocumentsItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    BlockSignFact,\n    Operation,\n};\n","import { key } from '../text/hint.json';\n\nclass Account {\n    constructor(addr=null, priv=null, pub=null, data=null) {\n        if(!addr || !priv || !pub || !data) {\n            throw new Error('Wrong parameter with Account constructor');\n        }\n\n\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n\n        this.balances.sort((x, y) => x.currency.localeCompare(y.currency));\n        this.publicKeys.sort((x, y) => x.key.localeCompare(y.key));\n\n        this.publicKey = pub;\n\n        const idx = priv.indexOf(':');\n        const hint = priv.substring(idx + 1);\n        switch (hint) {\n            case `${key.btc.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.btc.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.ether.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.ether.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.stellar.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n        }\n    }\n}\n\nexport default Account;","import { operation } from './hint.json';\n\nexport const OPER_CREATE_ACCOUNT = 'OPER-CREATE-ACCOUNT';\nexport const OPER_UPDATE_KEY = 'OPER-UPDATE-KEY';\nexport const OPER_TRANSFER = 'OPER-TRANSFER';\nexport const OPER_DEFAULT = 'OPER-DEFAULT';\n\nexport const PAGE_HOME = 'PAGE-HOME'\nexport const PAGE_LOGIN = 'PAGE-LOGIN';\nexport const PAGE_WALLET = 'PAGE-WALLET';\nexport const PAGE_OPER = 'PAGE-OPER';\nexport const PAGE_SIGN = 'PAGE-SIGN';\nexport const PAGE_LOD = 'PAGE-LOD';\nexport const PAGE_RES = 'PAGE-RES';\nexport const PAGE_GEN = 'PAGE-GEN';\n\nexport const PAGE_QR = \"PAGE-QR\";\nexport const PAGE_NON = \"PAGE-NON\";\n\nexport const SHOW_PRIVATE = 'show-private';\nexport const SHOW_RESTORE = 'show-restore';\n\nexport const TYPE_CREATE_ACCOUNT = operation.create_account + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_UPDATE_KEY = operation.update_key + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_TRANSFER = operation.transfer + '-' + process.env.REACT_APP_VERSION;","import { TYPE_CREATE_ACCOUNT, TYPE_TRANSFER } from \"../text/mode\";\nimport { address } from '../text/hint.json';\n\nconst hintedAccount = (account) => {\n    return  account + ':' + address + '-' + process.env.REACT_APP_VERSION\n};\n\nclass History {\n    constructor(history, me) {\n        this.me = me;\n        this.inState = history.in_state;\n        this.confirmedAt = history.confirmed_at;\n        \n        this.operation = history.operation;\n        this.type = history.operation._hint;\n        this.factHash = history.operation.fact.hash;\n\n        this.setItems();\n    }\n\n    setItems(){\n        if(!(this.type === TYPE_CREATE_ACCOUNT || this.type === TYPE_TRANSFER)) {\n            this.items = undefined;\n            return;\n        }\n\n        const items = this.operation.fact.items.map(\n            x => ({\n                receiver: this.type === TYPE_CREATE_ACCOUNT ? hintedAccount(x.keys.hash) : x.receiver,\n                amounts: x.amounts.map(\n                    y => ({\n                        currency: y.currency,\n                        amount: y.amount\n                    })\n                )\n            })\n        );\n\n        this.sender = this.operation.fact.sender;\n        if(this.sender === this.me){\n            this.items = items;\n        }\n        else{\n            this.items = [];\n            for( let i = 0; i < items.length; i++ ){\n                if(items[i].receiver === this.me) {\n                    this.items.push(items[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default History;","import Account from '../../lib/Account';\nimport History from '../../lib/History';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_HISTORY = 'SET_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n\nexport const SET_OPERATION = 'SET_OPERATION';\nexport const SET_RESPONSE = 'SET_RESPONSE';\n\nexport const ENQUEUE_OPERATION = 'ENQUEUE_OPERATION';\nexport const DEQUEUE_OPERATION = 'DEQUEUE_OPERATION';\nexport const CLEAR_QUEUE = 'CLEAR_QUEUE';\n\nexport const SET_NETWORK = 'SET_NETWORK';\nexport const CLEAR_NETWORK = 'CLEAR_NETWORK';\nexport const SET_NETWORK_ID = 'SET_NETWORK_ID';\nexport const CLEAR_NETWORK_ID = 'CLEAR_NETWORK_ID';\n\nexport const SET_PAGE = 'SET_PAGE';\nexport const CLEAR_PAGE = 'CLEAR_PAGE';\n \nexport function setPage() {\n    return {\n        type: SET_PAGE,\n    };\n}\n\nexport function clearPage() {\n    return {\n        type: CLEAR_PAGE\n    }\n}\n\nexport function login(address, privateKey, publicKey, data) {\n    const account = new Account(address, privateKey, publicKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKey: account.publicKey,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined,\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function setHistory(data, me) {\n    if(!data) {\n        return {\n            type: SET_HISTORY,\n            history: [],\n        }\n    }\n\n    const histories = data._embedded.map(x => new History(x._embedded, me));\n    const splitHistories = [];\n\n    for(let i = 0; i < histories.length; i++){\n        const _i = histories[i];\n        if(!_i.items){\n            continue;\n        }\n        for(let j = 0; j < _i.items.length; j++){\n            const _j = _i.items[j];\n            for(let z = 0; z < _j.amounts.length; z++) {\n                const _z = _j.amounts[z];\n                splitHistories.push({\n                    hash: _i.factHash,\n                    confirmation: _i.inState ? 'SUCCESS' : 'FAIL',\n                    direction: me === _i.sender ? 'SEND' : 'RECEIVE',\n                    confirmedAt: _i.confirmedAt,\n                    target: me === _i.sender ? _j.receiver : _i.sender,\n                    currency: _z.currency,\n                    amount: _z.amount\n                })\n            }\n        }\n    }\n\n    return {\n        type: SET_HISTORY,\n        history: splitHistories,\n    }\n}\n\nexport function clearHistory() {\n    return {\n        type: CLEAR_HISTORY\n    }\n}\n\nexport function setOperation(operation, json) {\n    return {\n        type: SET_OPERATION,\n        operation,\n        json,\n    }\n}\n\nexport function setResponse(isBroadcast, isStateIn, res, status, data) {\n    return {\n        type: SET_RESPONSE,\n        isBroadcast,\n        isStateIn,\n        res,\n        status,\n        data,\n    }\n}\n\nexport function enqueueOperation(item) {\n    return {\n        type: ENQUEUE_OPERATION,\n        item,\n    }\n}\n\nexport function dequeueOperation() {\n    return {\n        type: DEQUEUE_OPERATION\n    }\n}\n\nexport function clearQueue() {\n    return {\n        type: CLEAR_QUEUE\n    }\n}\n\nexport function setNetworkId(id) {\n    return {\n        type: SET_NETWORK_ID,\n        id,\n    }\n}\n\nexport function setNetwork(network) {\n    return {\n        type: SET_NETWORK,\n        network,\n    }\n}\n\nexport function clearNetworkId() {\n    return {\n        type: CLEAR_NETWORK_ID,\n    }\n}\n\nexport function clearNetwork() {\n    return {\n        type: CLEAR_NETWORK\n    }\n}\n\n","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined,\n    history: undefined,\n    isLoadHistory: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        case actions.SET_HISTORY:\n            return {\n                ...state,\n                history: action.history,\n                isLoadHistory: true\n            }\n        case actions.CLEAR_HISTORY:\n            return {\n                ...state,\n                history: undefined,\n                isLoadHistory: false\n            }\n        default:\n            return state;\n    }\n}","function download(json) {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('JSON 파일 다운로드 url을 얻을 수 없습니다. :(');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nexport default download;","import * as actions from '../actions';\nimport * as mode from '../../text/mode'; \nimport download from '../../lib/Url';\n\nconst initialState = {\n    operation: mode.OPER_DEFAULT,\n    json: null,\n    data: [],\n    download: undefined,\n    filename: \"\",\n    isBroadcast: false,\n    isStateIn: false,\n    res: undefined,\n    status: 400\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_OPERATION:\n            if(action.operation === mode.OPER_DEFAULT) {\n                return initialState;\n            }            \n\n            return {\n                ...state,\n                operation: action.operation,\n                json: action.json,\n                download: download(action.json),\n                filename: action.json.hash\n            }\n        case actions.SET_RESPONSE:\n            return {\n                ...state,\n                isBroadcast: action.isBroadcast,\n                isStateIn: action.isStateIn,\n                res: action.res,\n                status: action.status,\n                data: action.data,\n            }\n        default:\n            return state;\n    }\n}","import * as actions from '../actions';\nimport Queue from '../../lib/Queue';\n\nconst initialState = {\n    queue: new Queue()\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.ENQUEUE_OPERATION:\n            state.queue.enque(action.item);\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.DEQUEUE_OPERATION:\n            state.queue.deque();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.CLEAR_QUEUE:\n            state.queue.clear();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        default:\n            return state;\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    enque(item) {\n        this.queue.push(item);\n    }\n\n    deque() {\n        this.queue.shift();\n    }\n\n    isEmpty() {\n        if(this.queue) {\n            return false;\n        }\n        return true;\n    }\n\n    clear() {\n        this.queue = [];\n    }\n\n    get length() {\n        return this.queue.length;\n    }\n\n    get target() {\n        if(this.isEmpty()) {\n            return null\n        }\n        return this.queue[0];\n    }\n}\n\nexport default Queue;","import * as actions from '../actions';\n\nconst initialState = {\n    network: process.env.REACT_APP_API_URL,\n    networkAccount: process.env.REACT_APP_API_ACCOUNT,\n    networkBroadcast: process.env.REACT_APP_API_BROADCAST,\n    networkSearchFact: process.env.REACT_APP_API_SEARCH_FACT,\n    networkId: process.env.REACT_APP_NETWORK_ID,\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_NETWORK:\n            return {\n                ...state,\n                network: action.network,\n                networkAccount: action.network + '/account/',\n                networkBroadcast: action.network + '/builder/send',\n                networkSearchFact: action.network + '/operation/'\n            };\n        case actions.CLEAR_NETWORK:\n            return {\n                ...state,\n                network: process.env.REACT_APP_API_URL,\n                networkAccount: process.env.REACT_APP_API_ACCOUNT,\n                networkBroadcast: process.env.REACT_APP_API_BROADCAST,\n                networkSearchFact: process.env.REACT_APP_API_SEARCH_FACT,\n            }\n        case actions.SET_NETWORK_ID:\n            return {\n                ...state,\n                networkId: action.id\n            }\n        case actions.CLEAR_NETWORK_ID:\n            return {\n                ...state,\n                networkId: process.env.REACT_APP_NETWORK_ID\n            }\n        default:\n            return state;\n    }\n}","import { PAGE_NON, PAGE_QR } from '../../text/mode';\nimport * as actions from '../actions';\n\nconst initialState = {\n    pageBefore: PAGE_NON\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_PAGE:\n            return {\n                ...state,\n                pageBefore: PAGE_QR\n            };\n        case actions.CLEAR_PAGE:\n            return {\n                ...state,\n                pageBefore: PAGE_NON\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\nimport { reducer as operationReducer } from './OperationReducer';\nimport { reducer as queueReducer } from './QueueReducer';\nimport { reducer as networkReducer } from './NetworkReducer';\nimport { reducer as pageReducer } from './PageReducer';\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    operation: operationReducer,\n    queue: queueReducer,\n    network: networkReducer,\n    page: pageReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"home-container\">\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"block\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\nexport default SmallButton;","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\n\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text/plain\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    autoCorrect=\"off\"\n                    autoCapitalize=\"off\"\n                    autoSave=\"off\"\n                    autoFocus=\"off\"\n                    style={{\n                        textTransform: \"none\"\n                    }}\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <button className=\"confirm-button\"\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                onClick={this.props.onClick}\n                disabled={this.props.disabled ? true : false}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"private key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => {\n                        this.props.onLogin(this.state.account.trim(), this.state.privateKey.trim());\n                    }}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import { key as keyHint } from '../text/hint.json';\nimport { address as addressHint } from '../text/hint.json';\n\nexport const isOperation = (json) => {\n\n    if (!json) { return false; }\n\n    if(!Object.prototype.hasOwnProperty.call(json, '_hint') || !json._hint) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'hash') || !json.hash) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'memo')) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact') || !json.fact) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact_signs')) {\n        return false;\n    }\n\n    // const signatures = json.fact_signs.map(x => x.signatures);\n    // if (signatures.length < 1) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isStateValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'location') || !state.location) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state.location, 'state') || !state.location.state) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isResponseValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'res') || !state.res) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'status') || !state.status) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'operation') || !state.operation) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'data')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAccountValid = (account) => {\n\n    if (!account) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'address') || !account.address) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'accountType') || !account.accountType) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'publicKeys') || !account.publicKeys) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'balances') || !account.balances) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'privateKey') || !account.privateKey) {\n        return false;\n    }\n\n    // if (!Object.prototype.hasOwnProperty.call(account, 'restoreKey') || !account.restoreKey) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isPrivateKeyValid = (pk) => {\n\n    if (typeof (pk) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = pk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n    const key = pk.substring(0, idx);\n    const hint = pk.substring(idx + 1);\n\n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isPublicKeyValid = (pubk) => {\n\n    if (typeof (pubk) !== typeof ('string')) {\n        return false;\n    }\n\n    const idx = pubk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const key = pubk.substring(0, idx);\n    const hint = pubk.substring(idx + 1);\n    \n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.pub}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isAddressValid = (addr) => {\n\n    if (typeof (addr) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = addr.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const hint = addr.substring(idx + 1);\n    const address = addr.substring(1, idx);\n    if (hint !== `${addressHint}-${process.env.REACT_APP_VERSION}`) {\n        return false;\n    }\n\n    if(!/[a-zA-Z0-9]+/.test(address)) {\n        return false;\n    }\n\n    return true;\n}\n\nconst isNum = (num) => {\n    if (!num) {\n        return false;\n    }\n\n    if (/[^0-9]/.test(num)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]*/.test(num)) {\n        return false;\n    }\n\n    if (num.indexOf('.') > -1) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isThresholdValid = (thres) => {\n    if (!isNum(thres)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]{0,2}/.test(thres)) {\n        return false;\n    }\n\n    const thresNum = parseInt(thres);\n    if (thresNum < 1 || thresNum > 100) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isWeightValid = (weight) => {\n    return isNum(weight);\n}\n\nexport const isWeightsValidToThres = (weights, thres) => {\n    \n    if (!isThresholdValid(thres)) {\n        return false;\n    }\n\n    let total = 0;\n    for (let i = 0; i < weights.length; i++) {\n        if (!isWeightValid(weights[i])) {\n            return false;\n        }\n        total += parseInt(weights[i]);\n    }\n\n    if (total < parseInt(thres)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isCurrencyValid = (currency, currencies) => {\n\n    if(!currency || !currencies || currencies.length < 1) {\n        return false;\n    }\n\n    if(typeof (currency) !== typeof ('string')) {\n        return false;\n    }\n\n    if(!/[A-Z]{3,3}/.test(currency)) {\n        return false;\n    }\n\n    return isDuplicate(currency, currencies);\n}\n\nexport const isAmountValid = (amount) => {\n    return isNum(amount);\n}\n\nexport const isDuplicate = (target, list) => {\n\n    if(!target || !list) {\n        return false;\n    }\n\n    for(let i = 0; i < list.length; i++) {\n        if(target.indexOf(list[i]) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}","import React from 'react';\nimport './AlertModal.scss';\n\nclass AlertModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, title, msg } = this.props;\n        return (\n            <div className={isOpen ? 'alert-openModal alert-modal' : 'alert-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {title}\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='alert-msg'>{msg}</p>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AlertModal;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { clearHistory, login, setHistory } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\nimport { SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\nimport { isAddressValid, isPrivateKeyValid } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.isLogin) {\n            this.onLogin(this.props.account.address, this.props.account.privateKey);\n        }\n\n        this.state = {\n            mode: SHOW_PRIVATE,\n            isPriv: true,\n            isActive: false,\n\n            isAlertShow: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            isShowLoad: false,\n            isRedirect: false,\n        }\n    }\n\n    async getAccountInformation(account) {\n        return await axios.get(this.props.networkAccount + account);\n    }\n\n    async getAccountHistory(account) {\n        return await axios.get(`${this.props.networkAccount}${account}/operations?reverse=1`);\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertShow: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertShow: false\n        });\n    }\n\n    onLogin(_addr, _priv) {\n        const addr = _addr.trim();\n        const priv = _priv.trim();\n\n        if (!isAddressValid(addr) || !isPrivateKeyValid(priv)) {\n            this.openAlert('지갑 열기 실패 :(', '주소 혹은 키 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        let pubKey;\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            this.openAlert('지갑 열기 실패 :(', '유효하지 않은 개인키입니다.');\n            return;\n        }\n\n        this.getAccountHistory(addr)\n            .then(\n                res => {\n                    this.props.setHistory(res.data, addr);\n                }\n            )\n            .catch(\n                e => {\n                    this.props.setHistory(null, addr);\n                }\n            )\n\n        this.getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, pubKey, res.data);\n                            return;\n                        }\n                    }\n                    this.openAlert('지갑 열기 실패 :(', `계정 [${addr}]의 멤버에 해당 키가 존재하지 않습니다.`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    this.openAlert('지갑 열기 실패 :(', '유효하지 않은 주소 혹은 네트워크 문제로 계정 조회에 실패하였습니다.');\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case SHOW_PRIVATE:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n            case SHOW_RESTORE:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    async onStartLogin(addr, priv) {\n        this.setState({\n            isShowLoad: true\n        });\n\n        this.onLogin(addr, priv)\n\n        if (!(this.props.isLogin && this.props.isLoadHistory)) {\n            this.setState({\n                isShowLoad: false\n            });\n        }\n    }\n\n    render() {\n        if (this.props.isLogin && this.props.isLoadHistory) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />\n        }\n\n        return (\n            <div className=\"login-container\">\n                <div id='login-main'\n                    style={{\n                        display: this.state.isShowLoad ? 'none' : 'flex'\n                    }}>\n                    <h1>OPEN WALLET</h1>\n                    <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_PRIVATE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Private Key</div>\n                        </label>\n\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_RESTORE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Restore Key</div>\n                        </label>\n                    </div>\n                    <AlertModal isOpen={this.state.isAlertShow} onClose={() => this.closeAlert()}\n                        title={this.state.alertTitle} msg={this.state.alertMsg} />\n                    {this.renderForm()}\n                </div>\n                <div id='login-load'\n                    style={{\n                        display: this.state.isShowLoad ? 'flex' : 'none'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    isLoadHistory: state.login.isLoadHistory,\n    networkAccount: state.network.networkAccount,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, publicKey, data) => dispatch(login(address, privateKey, publicKey, data)),\n    setHistory: (data, me) => dispatch(setHistory(data, me)),\n    clearHistory: () => dispatch(clearHistory())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PublicKeyModal.scss\";\n\nconst key = (k) => {\n    return (\n        <li key={k}\n            onClick={() => {\n                copy(k);\n                alert('copied');\n            }}>{k}</li>\n    );\n}\n\nclass PublicKeyModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, account } = this.props;\n        return (\n            <div className={isOpen ? 'pub-openModal pub-modal' : 'pub-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Public Key List\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {account.publicKeys.map(x => key(x.key))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    account: state.login.account\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PublicKeyModal));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PendingModal.scss\";\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER } from '../../text/mode';\n\nconst job = (x) => {\n    return (\n        <li key={x.hash}\n            onClick={() => { copy(x.hash); alert('copied'); }}>\n            <p>{x.broadcastedAt}</p>\n            <p>{x.operation === OPER_CREATE_ACCOUNT\n                ? 'CREATE-ACCOUNT'\n                : (\n                    x.operation === OPER_TRANSFER\n                        ? 'TRANSFER'\n                        : 'UPDATE-KEY'\n                )\n            }</p>\n            <p>{x.hash}</p>\n        </li>\n    );\n}\n\nclass PendingModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, queue } = this.props;\n        return (\n            <div className={isOpen ? 'pend-openModal pend-modal' : 'pend-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Operation Facts in Pending...\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {queue.queue.map(x => job(x))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    queue: state.queue.queue\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PendingModal));","function Sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Sleep;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { dequeueOperation, login } from '../store/actions';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport PublicKeyModal from '../components/modals/PublicKeyModal';\nimport PendingModal from '../components/modals/PendingModal';\nimport axios from 'axios';\n\nimport { isAccountValid } from '../lib/Validation';\n\nimport Sleep from '../lib/Sleep';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY, PAGE_LOGIN, PAGE_OPER, SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <p className=\"currency\">{bal.currency}</p>\n            <p className=\"amount\">{bal.amount}</p>\n        </li>\n    );\n}\n\nconst history = (hist) => {\n    return (\n        <li key={hist.hash + hist.currency} onClick={() => {\n            copy(hist.hash);\n            alert('fact hash copied!');\n        }}>\n            <p id={hist.confirmation}>{hist.confirmation}</p>\n            <p id={hist.direction}>{hist.direction}</p>\n            <p id='confirmed-at'>{hist.confirmedAt}</p>\n            <p id='target'>{hist.target}</p>\n            <p id='currency'>{hist.currency}</p>\n            <p id='amount'>{hist.amount}</p>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '0',\n    padding: '0'\n}\n\nconst title = (content) => {\n    return (\n        <div id='container' style={titleStyle}>\n            <div id='line'></div>\n            <p id='body'>{content}</p>\n            <div id='line'></div>\n        </div>\n    )\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isPubModalOpen: false,\n            isPendModalOpen: false,\n            isQueueUpdate: 1,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PAGE_LOGIN,\n            operation: undefined\n        }\n    }\n\n    async getFactInState(hash) {\n        return await axios.get(this.props.networkSearchFact + hash);\n    }\n\n    async checkInState() {\n        while (!this.props.queue.isEmpty()) {\n            const target = this.props.queue.target;\n\n            if (!target) {\n                break;\n            }\n\n            var isResult = false;\n            this.getFactInState(target.hash)\n                .then(\n                    res => {\n                        if (res.request.status === 200) {\n                            this.props.deleteJob();\n                            this.setState({ isQueueUpdate: this.state.isQueueUpdate + 1 });\n                        }\n                    }\n                )\n                .catch(\n                    e => {\n                        console.log(e);\n                    }\n                )\n                .finally(() => {\n                    isResult = true;\n                });\n\n            while (!isResult) {\n                await Sleep(500);\n            }\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === OPER_CREATE_ACCOUNT\n            || oper === OPER_UPDATE_KEY\n            || oper === OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: PAGE_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n        this.checkInState();\n\n        setTimeout(() => {\n            this.refresh();\n        }, 5000);\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    closePubModal() {\n        this.setState({ isPubModalOpen: false });\n    }\n\n    openPubModal() {\n        this.setState({ isPubModalOpen: true });\n    }\n\n    closePendModal() {\n        this.setState({ isPendModalOpen: false });\n    }\n\n    openPendModal() {\n        this.setState({ isPendModalOpen: true });\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: PAGE_LOGIN\n        });\n    }\n\n    render() {\n        \n        if (!this.props.account || !isAccountValid(this.props.account)) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (this.state.isRedirect) {\n            if (this.state.redirect === PAGE_OPER) {\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            }\n            else if (this.state.redirect === PAGE_LOGIN) {\n                return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className=\"wallet-container\" >\n                <div className=\"wallet-ref\" ref={this.walletRef} ></div>\n                <div id='wallet-refresh'><p onClick={() => this.refresh()}>↻</p></div>\n                <div className=\"wallet-info\">\n                    {title(\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\"))}\n                    <p id='address' onClick={() => this.openPubModal()}>{this.props.account.address}</p>\n                    <section className=\"wallet-amount\">\n                        {title('BALANCE')}\n                        <ul>\n                            {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-history\">\n                    {title('HISTORY')}\n                    <ul>\n                        {this.props.history.length > 0 ? this.props.history.map(x => history(x)) : false}\n                    </ul>\n                    <p id='pend' onClick={() => this.openPendModal()}>\n                        {this.state.isQueueUpdate ? `${this.props.queue.length} 개의 작업을 처리 중입니다.` : false}\n                    </p>\n                </div>\n                <PublicKeyModal onClose={() => this.closePubModal()} isOpen={this.state.isPubModalOpen} />\n                <PendingModal onClose={() => this.closePendModal()} isOpen={this.state.isPendModalOpen} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    queue: state.queue.queue,\n    networkSearchFact: state.network.networkSearchFact\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    deleteJob: () => dispatch(dequeueOperation())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privKey: \"\",\n            pubKey: \"\",\n        }\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        this.setState({\n            privKey: keypair.getPrivateKey(),\n            pubKey: keypair.getPublicKey()\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport { key } from './SubInfo';\nimport './Keys.scss';\n\nfunction Keys({ keys, title }) {\n    return (\n        <section className='key-container'>\n            <p id='head'>{title}</p>\n            <div className='label'>\n                <p id='key'>KEY</p>\n                <p id='weight'>WEIGHT</p>\n            </div>\n            <ul>\n                {keys ? keys.map(x => key(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Keys;","export const balance = x => {\n    return (\n        <li key={x.currency}>\n            <p id='currency'>{x.currency}</p>\n            <p id='amount'>{x.amount}</p>\n        </li>\n    );\n}\n\nexport const key = x => {\n    return (\n        <li key={x.key}>\n            <p id='key'>{x.key}</p>\n            <p id='weight'>{x.weight}</p>\n        </li>\n    );\n}","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ThresholdAdder.scss';\n\nfunction ThresholdAdder({ thres, onThresChange }) {\n\n    return (\n        <section className='threshold-adder-container'>\n            <div className=\"threshold-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ThresholdAdder;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './KeyAdder.scss';\n\nfunction KeyAdder(props) {\n\n    const { onKeyChange, onWeightChange, onAdd, isAddDisabled, pub, weight, useThres } = props;\n\n    return (\n        <section className='key-adder-container'>\n            <div className=\"key-adder\">\n                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                    value={pub}\n                    onChange={onKeyChange} />\n                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                    value={weight}\n                    onChange={onWeightChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n            {useThres\n                ? (\n                    <div className=\"thres-adder\">\n                        <p>THRESHOLD:</p>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={props.thres}\n                            onChange={props.onThresChange} />\n                    </div>\n                )\n                : false\n            }\n        </section>\n    );\n}\n\nexport default KeyAdder;","import React from \"react\";\nimport './AddressGen.scss';\n\nimport Keys from \"../components/infos/Keys\";\nimport ThresholdAdder from \"../components/adders/ThresholdAdder\";\nimport KeyAdder from \"../components/adders/KeyAdder\";\nimport AlertModal from \"../components/modals/AlertModal\";\n\nimport { isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from \"../lib/Validation\";\n\nimport { Generator } from 'mitumc';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nimport copy from 'copy-to-clipboard';\nimport ConfirmButton from \"../components/buttons/ConfirmButton\";\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nclass AddressGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            address: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    getAddress() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('계정 주소를 계산할 수 없습니다. :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        const generator = new Generator(this.props.networkId);\n        const _keys = this.state.keys.map(k => generator.formatKey(k.key, parseInt(k.weight)));\n        const keys = generator.createKeys(_keys, parseInt(this.state.threshold));\n\n        this.setState({\n            address: keys.address\n        })\n    }\n\n    clear() {\n        this.setState({\n            keys: [],\n            publicKey: \"\",\n            weight: \"\",\n            threshold: \"\",\n            address: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"address-gen-container\">\n                <h1>GET ADDRESS WITH KEYS</h1>\n                <div className=\"address-gen-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"address-gen-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} />\n                        <section className='address-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ThresholdAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                thres={this.state.threshold} />\n                        </section>\n                    </div>\n                </div>\n                <div className=\"address-gen-buttons\">\n                    <ConfirmButton\n                        disabled={\n                            this.state.keys.length !== 0 || this.state.address\n                                || this.state.threshold || this.state.publicKey\n                                || this.state.weight\n                                ? false : true}\n                        onClick={() => this.clear()}>CLEAR</ConfirmButton>\n                    <ConfirmButton\n                        disabled={this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                        onClick={() => this.getAddress()}>GET :D</ConfirmButton>\n                </div>\n                <div className=\"address-gen-account\">\n                    <p id=\"header\">ADDRESS</p>\n                    <p id=\"body\" onClick={() => onCopy(this.state.address)}>{this.state.address ? this.state.address : \"-\"}</p>\n                </div>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(AddressGen));","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","export default __webpack_public_path__ + \"static/media/mitum_wallet_manual.f34e6447.pdf\";","import React, { createRef } from 'react';\nimport Sleep from '../lib/Sleep';\nimport './Help.scss';\n\nimport pdfFile from '../mitum_wallet_manual.pdf';\nimport { pdfjs, Document, Page } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Help extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.pdfRef = createRef();\n\n        this.state = {\n            isShowExp: false,\n\n            numPages: null,\n            pageNumber: 1,\n        }\n    }\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({ numPages });\n    }\n\n    goToPrevPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n    goToNextPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n\n    async componentDidMount() {\n\n        await Sleep(1000);\n        this.setState({\n            isShowExp: true,\n        });\n        this.scrollToPdf();\n    }\n\n    scrollToPdf = () => {\n        if (this.pdfRef.current && this.state.isShowExp) {\n            this.pdfRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToPdf();\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n        return (\n            <div className=\"help-container\">\n                <div id='help-start'\n                    style={{\n                        display: this.state.isShowExp ? 'none' : 'flex'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n                <div ref={this.pdfRef} />\n                <div id='help-document'\n                    style={{\n                        display: this.state.isShowExp ? 'flex' : 'none'\n                    }}>\n                    <a id='link' target=\"_blank\"\n                        download='manual.pdf'\n                        href={pdfFile}\n                        rel=\"noreferrer\">\n                        DOWNLOAD MANUAL\n                    </a>\n                    <Document\n                        file={pdfFile}\n                        onLoadSuccess={({ numPages }) => this.onDocumentLoadSuccess({ numPages })}>\n                        <Page pageNumber={pageNumber} />\n                    </Document>\n                    <p id='switch'>\n                        <span id='left'\n                            onClick={() =>\n                                this.state.pageNumber > 1\n                                    ? this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber - 1\n                                    })\n                                    : null}>\n                            &lt;\n                        </span>\n                        <span>{pageNumber} / {numPages}</span>\n                        <span id='right'\n                            onClick={() =>\n                                this.state.pageNumber < numPages\n                                    ?\n                                    this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber + 1\n                                    })\n                                    : null}>\n                            &gt;\n                        </span>\n                    </p>\n                    <p id='exp'>가이드의 내용이 잘 보이지 않는 경우 상단의 DOWNLOAD MANUAL을 통해 파일을 직접 다운로드 하여 주시기 바랍니다.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React, { createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../../store/actions';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport QRCode from 'qrcode.react';\nimport \"./OperationConfirm.scss\";\nimport { isOperation } from '../../lib/Validation';\n\nimport { OPER_CREATE_ACCOUNT, OPER_UPDATE_KEY, OPER_TRANSFER } from '../../text/mode';\nimport hint from '../../text/hint.json';\n\nimport {encode} from 'base-64'\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.wrapperRef = createRef();\n\n        this.state = {\n            isRedirect: false,\n            isExport: false,\n        }\n    }\n\n    async broadcast(operation) {\n        if (!isOperation(operation)) {\n            return undefined;\n        }\n\n        return await axios.post(this.props.networkBroadcast, operation);\n    }\n\n    onSend(json) {\n        this.broadcast(json).then(\n            res => {\n                if (res.request.status === 200) {\n                    let data = undefined;\n                    switch (this.props.operation) {\n                        case OPER_CREATE_ACCOUNT:\n                            data = json.fact.items.map(x => x.keys.hash + ':' + hint.address + '-' + process.env.REACT_APP_VERSION);\n                            break;\n                        case OPER_UPDATE_KEY:\n                            data = json.fact.hash;\n                            break;\n                        case OPER_TRANSFER:\n                        default:\n                            data = undefined;\n                    }\n                    this.props.setResult(true, false, res.data, 200, data);\n                }\n                else {\n                    this.props.setResult(false, false, res.data, res.request.status, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        ).catch(\n            e => {\n\n                try {\n                    this.props.setResult(false, false, e.response.data, e.response.data.status, undefined);\n                }\n                catch (error) {\n                    this.props.setResult(false, false, {\n                        title: '404 Network Error'\n                    }, 404, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        );\n    }\n\n    onExport() {\n        this.setState({\n            isExport: true\n        });\n    }\n\n    downloadQr() {\n        const { filename } = this.props;\n        const canvas = document.getElementById(\"modal-qrcode\");\n        const pngUrl = canvas\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = `${filename}.png`;\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n\n        this.onClose();\n    }\n\n    buttonView() {\n        const { json, filename, download } = this.props;\n\n        return (\n            this.state.isExport\n                ? (\n                    <span>\n                        <QRCode\n                            style={{\n                                display: \"none\"\n                            }}\n                            id=\"modal-qrcode\"\n                            value={\n                                encode(encode(JSON.stringify(json)))\n                            }\n                            size={500}\n                            level={\"L\"}\n                            includeMargin={true}\n                        />\n                        <a className=\"oper-modal-button\" id=\"yes\" target=\"_blank\" rel=\"noreferrer\"\n                            onClick={() => this.downloadQr()}>QR CODE</a>\n                        <a className=\"oper-modal-button\" id=\"yes\" target=\"_blank\" download={`${filename}.json`}\n                            href={download} rel=\"noreferrer\"\n                            onClick={() => this.onClose()}>\n                            {\"JSON 파일 다운로드!:[\"}\n                        </a>\n                    </span>\n                )\n                :\n                (\n                    <span>\n                        <p className=\"oper-modal-button\" id=\"no\" onClick={() => this.onClose()}>{\"취소!:(\"}</p>\n                        <a className=\"oper-modal-button\" id=\"no\" onClick={() => this.onExport()}>{\"내보내기 :[\"}</a>\n                        <p className=\"oper-modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"전송!:)\"}</p>\n                    </span>\n                )\n        );\n    }\n\n    onClose() {\n        const { onClose } = this.props;\n\n        this.setState({\n            isExport: false\n        });\n        onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n\n        if (this.state.isRedirect) {\n            const { operation } = this.props;\n            switch (operation) {\n                case OPER_CREATE_ACCOUNT:\n                case OPER_TRANSFER:\n                    return <Redirect to='/response' />;\n                case OPER_UPDATE_KEY:\n                    return <Redirect to='/loading' />;\n                default:\n                    alert('처리할 수 없는 타입의 작업입니다 :(\\n지갑 페이지로 이동합니다.');\n                    return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className={isOpen ? 'oper-openModal oper-modal' : 'oper-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {\n                                this.state.isExport\n                                    ? \"작업 파일 다운로드\"\n                                    : \"이 작업을 전송하겠습니까?\"\n                            }\n                            <button className=\"close\" onClick={() => this.onClose()}> &times; </button>\n                        </header>\n                        <main>\n                            {\n                                this.state.isExport\n                                    ? <p id='oper-exp'>파일 형식을 선택하세요.</p>\n                                    : <p id='oper-exp'>전송 버튼을 누른 후에는 작업을 되돌릴 수 없습니다.<br />작업 내용이 정확한가요?</p>\n                            }\n                            {this.buttonView()}\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    download: state.operation.download,\n    filename: state.operation.filename,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    networkBroadcast: state.network.networkBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OperationConfirm));","import React from 'react';\nimport { balance } from './SubInfo';\nimport './Balances.scss';\n\nfunction Balances({ balances, title, labeled }) {\n    return (\n        <section className='balance-container'>\n            <p id='head'>{title}</p>\n            {labeled ? (\n                <div className='label'>\n                    <p id='currency'>CURRENCY ID</p>\n                    <p id='amount'>AMOUNT</p>\n                </div>\n            ) : false}\n            <ul className={labeled ? 'wide' : 'slim'}>\n                {balances ? balances.map(x => balance(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Balances;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './AmountAdder.scss';\n\nfunction AmountAdder(props) {\n\n    const { onCurrencyChange, onAmountChange, currency, amount, isAddDisabled, onAdd } = props;\n\n    return (\n        <section className='amount-adder-container'>\n            <div className=\"amount-adder\">\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                    onChange={onCurrencyChange}\n                    value={currency} />\n                <InputBox\n                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                    value={amount}\n                    onChange={onAmountChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n        </section>\n    );\n}\n\nexport default AmountAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../../store/actions';\n\nimport './CreateAccount.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport Keys from '../infos/Keys';\nimport Balances from '../infos/Balances';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport AmountAdder from '../adders/AmountAdder';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_CREATE_ACCOUNT } from '../../text/mode';\nimport { isAmountValid, isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\nimport AlertModal from '../modals/AlertModal';\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            isModalOpen: false,\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n            const account = this.props.account;\n\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const createAccountsFact = generator.createCreateAccountsFact(\n                account.address,\n                [generator.createCreateAccountsItem(\n                    keys, amounts\n                )]\n            );\n\n            const createAccounts = generator.createOperation(createAccountsFact, \"\");\n            createAccounts.addSign(account.privateKey);\n\n            const created = createAccounts.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && (this.state.keys.length > 0 || this.state.amounts.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"ca-container\">\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <Balances title=\"CURRENT BALANCE LIST\" labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} labeled={true} />\n                        <KeyAdder\n                            onKeyChange={(e) => this.onChangePub(e)}\n                            onWeightChange={(e) => this.onChangeWeight(e)}\n                            onThresChange={(e) => this.onChangeThres(e)}\n                            onAdd={() => this.addKey()}\n                            isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                            pub={this.state.publicKey} weight={this.state.weight} thres={this.state.threshold}\n                            useThres={true} />\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <Balances title=\"AMOUNT LIST\" balances={this.state.amounts} labeled={true} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_CREATE_ACCOUNT, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateAccount));","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ExtraAdder.scss';\n\nfunction ExtraAdder({ thres, currency, onCurrencyChange, onThresChange }) {\n\n    return (\n        <section className='extra-adder-container'>\n            <div className=\"thres-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n            <div className=\"currency-adder\">\n                <p>CURRENCY ID:</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                    value={currency}\n                    onChange={onCurrencyChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ExtraAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './UpdateKey.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\nimport Keys from '../infos/Keys';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport ExtraAdder from '../adders/ExtraAdder';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { setOperation } from '../../store/actions';\n\nimport { OPER_UPDATE_KEY } from '../../text/mode';\nimport AlertModal from '../modals/AlertModal';\nimport { isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false });\n    }\n\n    onClick() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n\n            const account = this.props.account;\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold.trim())\n            );\n\n            const keyUpdaterFact = generator.createKeyUpdaterFact(\n                account.address, this.state.currency.trim(), keys\n            );\n\n            const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n            keyUpdater.addSign(account.privateKey);\n\n            const created = keyUpdater.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"uk-container\">\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <Keys title='CURRENT KEY LIST' keys={account.publicKeys} />\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <Keys title='NEW KEY LIST' keys={this.state.keys} />\n                        <section className='uk-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ExtraAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                                thres={this.state.threshold} currency={this.state.currency} />\n                        </section>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_UPDATE_KEY, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKey));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Transfer.scss';\n\nimport InputBox from '../InputBox';\nimport AmountAdder from '../adders/AmountAdder';\nimport Balances from '../infos/Balances';\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_TRANSFER } from '../../text/mode';\nimport { setOperation } from '../../store/actions';\nimport AlertModal from '../modals/AlertModal';\nimport { isAddressValid, isAmountValid, isCurrencyValid, isDuplicate } from '../../lib/Validation';\n\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isAddressValid(this.state.address.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', 'receiver address 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n\n            const account = this.props.account;\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const transfersFact = generator.createTransfersFact(\n                account.address,\n                [generator.createTransfersItem(\n                    this.state.address.trim(), amounts\n                )]\n            );\n\n            const transfers = generator.createOperation(transfersFact, \"\");\n            transfers.addSign(account.privateKey);\n\n            const created = transfers.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"tf-container\">\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <Balances title='CURRENT BALANCE LIST' labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"tf-amounts\">\n                        <Balances title='AMOUNT LIST' labeled={true} balances={this.state.amounts} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                        <div className='tf-address-adder'>\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </div>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_TRANSFER, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Transfer));","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/operations/CreateAccount';\nimport UpdateKey from '../components/operations/UpdateKey';\nimport Transfer from '../components/operations/Transfer';\nimport { connect } from 'react-redux';\n\nimport { isStateValid } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!isStateValid(this.props)\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n\n            this.state = {\n                isRedirect: true,\n                operation: undefined\n            };\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    renderOperation() {\n        switch (this.state.operation) {\n            case OPER_CREATE_ACCOUNT:\n                return <CreateAccount account={this.props.account} />;\n            case OPER_UPDATE_KEY:\n                return <UpdateKey account={this.props.account} />;\n            case OPER_TRANSFER:\n                return <Transfer account={this.props.account} />;\n            default:\n                return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n    }\n\n    render() {\n        if (!this.props.isLogin) {\n            return <Redirect to='/login' />;\n        }\n        if (this.state.isRedirect) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n        \n        return (\n            <div className=\"oper-container\">\n                {this.renderOperation()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY, TYPE_CREATE_ACCOUNT, TYPE_TRANSFER, TYPE_UPDATE_KEY } from \"../text/mode\";\n\nconst getOperationFromType = (type) => {\n    switch (type) {\n        case TYPE_CREATE_ACCOUNT:\n            return OPER_CREATE_ACCOUNT;\n        case TYPE_UPDATE_KEY:\n            return OPER_UPDATE_KEY;\n        case TYPE_TRANSFER:\n            return OPER_TRANSFER;\n        default:\n            return OPER_DEFAULT;\n    }\n}\n\nexport default getOperationFromType;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { clearPage, setOperation } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\n\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nimport { PAGE_QR } from '../text/mode';\nimport { isDuplicate, isOperation } from '../lib/Validation';\nimport { OPER_DEFAULT } from '../text/mode';\nimport AlertModal from '../components/modals/AlertModal';\nimport SmallButton from '../components/buttons/SmallButton';\nimport getOperationFromType from '../lib/Parse';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\n\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n\n        if(this.props.pageBefore !== PAGE_QR) {\n            this.props.setJson(OPER_DEFAULT, null);\n        }\n        this.props.clearPage();\n\n        this.state = {\n            isRedirect: false,\n\n            isModalOpen: false,\n            isJsonOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            toQr: false,\n        }\n    }\n\n    toQrPage() {\n        this.setState({\n            toQr: true\n        })\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {!(this.props.operation === OPER_DEFAULT)\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                            {JSON.stringify(this.props.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const json = this.props.json;\n            try {\n                const parsed = JSON.parse(reader.result);\n                if (!isOperation(parsed)) {\n                    this.openAlert('파일을 불러올 수 없습니다 :(', '[memo, hash, _hint, fact, fact_signs]를 포함한 JSON 파일을 사용해 주세요.');\n                }\n                else {\n                    const operation = getOperationFromType(parsed._hint);\n                    this.props.setJson(operation, parsed);\n                }\n            }\n            catch (e) {\n                if (json) {\n                    const operation = getOperationFromType(json._hint);\n                    this.props.setJson(operation, json);\n                }\n                this.openAlert('파일을 불러올 수 없습니다 :(', 'JSON 형식의 파일을 사용해 주세요.');\n            }\n        };\n        reader.readAsText(file, \"utf-8\");\n\n    }\n\n    onClickSend() {\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n        let target = this.props.json;\n\n        if (!isOperation(target)) {\n            return;\n        }\n\n        if (isDuplicate(this.props.account.publicKey, this.props.json.fact_signs.map(x => x.signer))) {\n            this.openAlert('서명 추가 실패 :(', '이미 서명 된 작업입니다.');\n            return;\n        }\n\n        const signer = new Signer(this.props.networkId, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.openAlert('서명 추가 완료 :D', '작업에 서명을 추가하였습니다.');\n        }\n        catch (e) {\n            const operation = getOperationFromType(target._hint);\n            this.props.setJson(operation, target);\n            this.openAlert('서명 추가 실패 :(', '서명을 추가하는 도중 오류가 발생하였습니다.');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n\n        if (this.state.toQr) {\n            return <Redirect to='/qr-reader' />;\n        }\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"sign-container\">\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.props.json && Object.prototype.hasOwnProperty.call(this.props.json, 'fact')\n                                        ? this.props.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.props.json ? this.props.json._hint : 'NONE'}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <p id='body'>{this.props.json ? (\n                                this.props.json.fact_signs.map(x => x).length !== 0\n                                    ? (\n                                        this.props.json.fact_signs.map(x => x).length === 1\n                                            ? `${this.props.json.fact_signs.map(x => x).length} signature`\n                                            : `${this.props.json.fact_signs.map(x => x).length} signatures`\n                                    )\n                                    : 'No signature'\n                            ) : 'No signature'}</p>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.props.json\n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                        ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                        <SmallButton \n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.toQrPage()}>import from qr code</SmallButton>\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n\n    operation: state.operation.operation,\n    json: state.operation.json,\n\n    networkId: state.network.networkId,\n\n    pageBefore: state.page.pageBefore,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n    clearPage: () => dispatch(clearPage()),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sign));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" to='/sign'>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                <Link className=\"main\" to=\"/get-address\">\n                    <p>GET ADDRESS</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n                <Link className=\"setting\" to=\"/network\">\n                    <p>SETTING</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout, clearHistory, clearQueue } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n        this.props.clearHistory();\n        this.props.clearQueue();\n    }\n    \n    render() {\n        if(!this.props.isLogin) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n    clearHistory: () => dispatch(clearHistory()),\n    clearQueue: () => dispatch(clearQueue())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport SmallButton from '../components/buttons/SmallButton';\nimport InputBox from '../components/InputBox';\nimport AlertModal from '../components/modals/AlertModal';\nimport { clearNetwork, clearNetworkId, setNetwork, setNetworkId } from '../store/actions';\nimport './NetworkSetter.scss';\n\nclass NetworkSetter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            network: this.props.network,\n            networkId: this.props.networkId,\n        }\n    }\n\n    setNetwork() {\n        this.props.setNetwork(this.state.network);\n        this.openAlert(\"네트워크 주소 변경 성공! :D\", `현재 네트워크 주소: ${this.state.network}`);\n    }\n\n    setNetworkId() {\n        this.props.setNetworkId(this.state.networkId);\n        this.openAlert(\"네트워크 ID 변경 성공! :D\", `현재 네트워크 ID: ${this.state.networkId}`);\n    }\n\n    clearNetwork() {\n        this.props.clearNetwork();\n        this.openAlert(\"네트워크 주소 변경 성공! :D\", `현재 네트워크 주소: ${process.env.REACT_APP_API_URL}`);\n    }\n\n    clearNetworkId() {\n        this.props.clearNetworkId();\n        this.openAlert(\"네트워크 ID 변경 성공! :D\", `현재 네트워크 ID: ${process.env.REACT_APP_NETWORK_ID}`);\n    }\n\n    onNetworkChange(e) {\n        this.setState({\n            network: e.target.value\n        });\n    }\n\n    onNetworkIdChange(e) {\n        this.setState({\n            networkId: e.target.value\n        });\n    }\n\n    openAlert(title, msg){\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n\n            network: this.props.network,\n            networkId: this.props.networkId\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"network-container\">\n                <h1>SETTING</h1>\n                <div className=\"network-setter setter\">\n                    <h2>SET NETWORK</h2>\n                    <section id=\"network-adder\">\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"network address\"\n                            value={this.state.network}\n                            onChange={(e) => this.onNetworkChange(e)} />\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.setNetwork()}>SET</SmallButton>\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.clearNetwork()}>RESET</SmallButton>\n                    </section>\n                </div>\n                <div className=\"network-id-setter setter\">\n                    <h2>SET NETWORK ID</h2>\n                    <section id=\"network-id-adder\">\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"network id\"\n                            value={this.state.networkId}\n                            onChange={(e) => this.onNetworkIdChange(e)} />\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.setNetworkId()}>SET</SmallButton>\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.clearNetworkId()}>RESET</SmallButton>\n                    </section>\n                </div>\n                <div className=\"network-version-info\">\n                    <h2>CURRENT VERSION</h2>\n                    <p>{`(FIXED) ${process.env.REACT_APP_VERSION}`}</p>\n                </div>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    network: state.network.network,\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setNetwork: (network) => dispatch(setNetwork(network)),\n    setNetworkId: (networkId) => dispatch(setNetworkId(networkId)),\n    clearNetwork: () => dispatch(clearNetwork()),\n    clearNetworkId: () => dispatch(clearNetworkId()),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NetworkSetter));","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <p>{`SDK VERSION ${process.env.REACT_APP_VERSION}`}</p>\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './LogoutConfirm.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions';\n\nclass LogoutConfirm extends React.Component {\n\n    onLogout() {\n        this.props.signOut();\n        this.props.onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            <div className={isOpen ? 'logout-openModal logout-modal' : 'logout-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Wallet Closed\n                            <button className=\"close\" onClick={() => this.onLogout()}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='logout-exp'>지갑이 닫힙니다. 변경된 비밀키로 지갑을 다시 열어주세요.</p>\n                            <p id='logout-exp'>* 작업 실패 시에는 기존 비밀키를 사용해야 합니다.</p>\n                            <span>\n                                <p className=\"logout-modal-button\" id=\"confirm\" onClick={() => this.onLogout()}>확인</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(LogoutConfirm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { enqueueOperation, setOperation, setResponse } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\nimport LogoutConfirm from '../components/modals/LogoutConfirm';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst address = (keyHash) => {\n    return (\n        <li key={keyHash}>\n            <p onClick={() => onCopy(keyHash)}>{keyHash}</p>\n        </li>\n    )\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isSignOut = this.props.operation === OPER_UPDATE_KEY;\n\n        if (!isSignOut && this.props.isBroadcast) {\n            this.props.addJob({\n                operation: this.props.operation,\n                hash: this.props.json.fact.hash,\n                broadcastedAt: new Date().toISOString(),\n            });\n        }\n\n        this.state = {\n            isRedirect: false,\n            isModalOpen: isSignOut,\n            isSignOut,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    renderResponse() {\n        const { res, status, operation, data } = this.props;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        {\n                            operation === OPER_UPDATE_KEY\n                                ? <h1>KEY UPDATE SUCCESS~ :D</h1>\n                                : <h1>BROADCAST SUCCESS~ :D</h1>\n                        }\n                        <div>\n                            {operation === OPER_CREATE_ACCOUNT\n                                ? (\n                                    <section>\n                                        <h2>CREATED ADDRESS LIST</h2>\n                                        <ul>\n                                            {data.map(x => address(x))}\n                                        </ul>\n                                        <p>지갑 생성 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                ) : false\n                            }\n                            {operation === OPER_TRANSFER\n                                ? (\n                                    <section>\n                                        <p>송금 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                )\n                                : false\n                            }\n                        </div>\n                    </section>\n                )\n            case 400:\n            case 404:\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>{Object.prototype.hasOwnProperty.call(res, 'title') ? res.title : \"응답을 받지 못했습니다.\"}</p>\n                    </section>\n                );\n        }\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            this.props.clearJson();\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"res-container\">\n                {this.renderResponse()}\n                <LogoutConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isStateIn: state.operation.isStateIn,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearJson: () => dispatch(setOperation(OPER_DEFAULT, {})),\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n    addJob: (hash) => dispatch(enqueueOperation(hash))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Response));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './UpdateKeyLoad.scss';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../store/actions';\n\nclass UpdateKeyLoad extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: !this.props.isBroadcast,\n            counter: 0,\n        }\n    }\n\n    getResponse() {\n        if (this.state.counter < 15) {\n            const { data, res, isBroadcast } = this.props;\n\n            const getResult = async (_hash, _res, isBroadcast) => {\n                if(!isBroadcast) {\n                    this.setState({\n                        isRedirect: true\n                    })\n\n                    return;\n                }\n\n                return await axios.get(this.props.networkSearchFact + _hash)\n                    .then(\n                        response => {\n                            if (response.data._embedded.in_state) {\n                                this.props.setResult(true, true, _res, 200, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                            else {\n                                this.props.setResult(true, false, {\n                                    title: response.data._embedded.reason.msg\n                                }, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                })\n                            }\n                        }\n                    )\n                    .catch(\n                        e => {\n                            \n                            if (e.response.status === 404 || e.response.status === 400) {\n                                this.setState({\n                                    counter: this.state.counter + 1\n                                })\n                            }\n                            else {\n                                this.props.setResult(true, false, e.response.data, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                        }\n                    )\n            }\n\n            setTimeout((hs, rs, broad) => {\n                getResult(hs, rs, broad);\n            }, 5000, data, res, isBroadcast);\n\n            return () => this.getResponse();\n        }\n        else {\n            this.props.setResult(true, false, {\n                title: \"Too long time to stay response. Maybe mitum failed to process your operation. :(\"\n            }, 400, this.props.data);\n            this.setState({\n                isRedirect: true,\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to='/response' />;\n        }\n\n        return (\n            <div className=\"load-container\">\n                <section className=\"load-detail\">\n                    <h1>Loading...</h1>\n                    <p>{\"키 업데이트 성공 여부를 조회 중입니다. 잠시만 기다려주세요.\"}</p>\n                    <p>{`REQUEST COUNT: ${this.state.counter}`}</p>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isBroadcast: state.operation.isBroadcast,\n    networkSearchFact: state.network.networkSearchFact\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKeyLoad));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './SubNavigation.scss';\n\nvar isClose = false;\n\nclass SubNavigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0,\n            isChecked: false\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    onCheckOut() {\n        this.setState({\n            isChecked: false\n        });\n    }\n\n    onCheck() {\n        this.setState({\n            isChecked: !this.state.isChecked\n        })\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 20) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"sub-nav\">\n                {this.state.rand ? this.check() : false}\n                <input className='burger-check' id=\"burger-check\" type=\"checkbox\" checked={this.state.isChecked} />\n                <label className=\"burger-icon\" htmlFor=\"burger-check\"\n                    onClick={() => this.onCheck()}>\n                    <span className=\"burger-sticks\"></span>\n                </label>\n                <Link className=\"sub-nav-title\" to=\"/\"\n                    onClick={() => this.onCheckOut()}>\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <div className='sub-nav-menu'>\n                    <div className='menu'>\n                        <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>OPEN WALLET</p>\n                        </Link>\n                        {isLogin\n                            ? (\n                                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to='/sign'\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>SIGN OPERATION</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/key-generate\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GENERATE KEYPAIR</p>\n                        </Link>\n                        <Link className=\"main\" to=\"/get-address\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GET ADDRESS</p>\n                        </Link>\n                        {account && account.restoreKey\n                            ? (\n                                <Link className=\"main\" to=\"/res-key-generate\"\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>GENERATE RESTORE KEY</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/help\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>HELP</p>\n                        </Link>\n                        <Link className=\"main\" to=\"/network\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>SETTING</p>\n                        </Link>\n                        {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(SubNavigation);","import React, { Component, createRef } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport SelectButton from '../components/buttons/SelectButton';\nimport getOperationFromType from '../lib/Parse';\nimport { clearPage, setOperation, setPage } from '../store/actions';\n\nimport QrReader from 'react-qr-reader';\n\nimport './ImportQr.scss';\nimport { decode } from 'base-64';\nimport { isOperation } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\n\nclass ImportQr extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.props.clearPage();\n        this.qrRef = createRef();\n\n        this.state = {\n            data: \"Not Detected\",\n            result: \"-\",\n            isRedirect: false,\n            isAlertOpen: false,\n            alertTitle: \"\",\n            alertMsg: \"\",\n\n            success: false,\n        };\n    }\n\n    handleScan(result) {\n        if (result) {\n            try {\n                JSON.parse(decode(decode(result)));\n            }\n            catch (error) {\n                this.setState({\n                    data: \"Invalid Operation; Maybe this QR Code is not for mitum web wallet.\",\n                    result: result\n\n                });\n                this.openAlert(\"불러오기 실패.. :(\", \"유효하지 않은 QR 코드입니다.\");\n                return;\n            }\n\n            const data = decode(decode(result));\n            const parsed = JSON.parse(data);\n\n            if (!isOperation(parsed)) {\n                this.setState({\n                    data: \"Invalid Operation; Maybe this QR Code is not for mitum web wallet.\",\n                    result: result\n                });\n\n                this.openAlert(\"불러오기 실패.. :(\", \"유효하지 않은 QR 코드입니다.\");\n                return;\n            }\n            else {\n                const operation = getOperationFromType(parsed._hint);\n                this.props.setJson(operation, parsed);\n                this.props.setPage();\n\n                this.setState({\n                    success: true\n                });\n                this.openAlert(\"불러오기 성공! :)\", \"서명 페이지로 이동합니다.\");\n                return;\n            }\n        }\n\n        this.setState({\n            result: result\n        });\n    }\n\n    handleError(error) {\n        console.log(error);\n    }\n\n    importFile() {\n        this.setState({\n            data: \"Not Detected\"\n        })\n        this.qrRef.current.openImageDialog();\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        if (this.state.success) {\n            this.setState({\n                isAlertOpen: false,\n                isRedirect: true\n            })\n        }\n        else {\n            this.setState({\n                isAlertOpen: false,\n            })\n        }\n    }\n\n    render() {\n\n        if (this.state.isRedirect) {\n            return <Redirect to=\"/sign\" />\n        }\n\n        return (\n            <div className=\"qr-container\">\n                <QrReader\n                    className=\"qr-reader\"\n                    delay={300}\n                    onError={(e) => this.handleError(e)}\n                    onScan={(res) => this.handleScan(res)}\n                />\n                <QrReader\n                    ref={this.qrRef}\n                    style={{\n                        display: \"none\"\n                    }}\n                    className=\"qr-reader\"\n                    delay={300}\n                    onError={(e) => this.handleError(e)}\n                    onScan={(res) => this.handleScan(res)}\n                    legacyMode\n                />\n                <SelectButton id=\"import-button\" size=\"wide\" onClick={() => this.importFile()}>\n                    import from file\n                </SelectButton>\n                <p>{this.state.result}</p>\n                <p>{this.state.data}</p>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setPage: () => dispatch(setPage()),\n    clearPage: () => dispatch(clearPage()),\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(ImportQr));","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport AddressGen from './views/AddressGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport NetworkSetter from './views/NetworkSetter';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\nimport UpdateKeyLoad from './views/UpdateKeyLoad';\nimport SubNavigation from './components/SubNavigation';\n\nimport ImportQr from './views/ImportQr';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <SubNavigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/get-address\" component={AddressGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/network\" component={NetworkSetter} />\n          <Route path=\"/response\" component={Response} />\n          <Route path='/loading' component={UpdateKeyLoad} />\n          <Route path='/qr-reader' component={ImportQr} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/*\n    mitum-js-util SDK for mitum-currency and mitum-data-blocksign\n    Copyright (C) 2021 ProtoconNet\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst VERSION = require('./constant').VERSION;\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type) {\n        if (type == 'unknown') {\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else {\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w) {\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold) {\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    get address() {\n        return bs58.encode(this.hash) + ':' + Xhint.MC_ADDRESS + '-' + VERSION;\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n        \n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n\n        const _keys = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch (type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    getPrivateKey() {\n        return this.privKey.hinted();\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', { canonical: true }).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length - 1));\n\n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n\n        const sig = ec.sign(_msg, sk, 'hex', { canonical: true }).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4 + rlen);\n        const slen = sig[5 + rlen];\n        const s = sig.slice(6 + rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen + 4, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n\n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n\n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if (_type == 'btc') {\n        return _btckp();\n    }\n    else if (_type == 'ether') {\n        return _ethkp();\n    }\n    else if (_type == 'stellar') {\n        return _stlkp();\n    }\n    else {\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if (_type == '') {\n        if (_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch (type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}