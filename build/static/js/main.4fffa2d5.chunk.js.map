{"version":3,"sources":["../../mitum-js-util/lib/util.js","../../mitum-js-util/lib/hint.js","../../mitum-js-util/lib/seal.js","../../mitum-js-util/lib/sign.js","../../mitum-js-util/lib/constant.js","../../mitum-js-util/lib/operation.js","../../mitum-js-util/index.js","lib/Account.js","text/mode.js","lib/History.js","store/actions/index.js","store/reducers/LoginReducer.js","lib/Url.js","store/reducers/OperationReducer.js","store/reducers/QueueReducer.js","lib/Queue.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","lib/Validation.js","components/modals/AlertModal.js","views/Login.js","components/buttons/SelectButton.js","components/modals/PublicKeyModal.js","components/modals/PendingModal.js","lib/Sleep.js","views/Wallet.js","views/KeyGen.js","views/ResKeyGen.js","mitum_wallet_manual.pdf","views/Help.js","components/modals/OperationConfirm.js","components/infos/Keys.js","components/infos/SubInfo.js","components/infos/Balances.js","components/adders/KeyAdder.js","components/adders/AmountAdder.js","components/operations/CreateAccount.js","components/adders/ExtraAdder.js","components/operations/UpdateKey.js","components/operations/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","components/Footer.js","components/modals/LogoutConfirm.js","views/Response.js","views/UpdateKeyLoad.js","components/SubNavigation.js","App.js","reportWebVitals.js","index.js","../../mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","ISOToUTC","iso","rtime","t","indexOf","z","_time","substring","dotIdx","decimal","idx","lastIndexOf","startIdx","module","exports","_hint","type","VERSION","parseHinted","hinted","parsed","hintless","hint","getTypeFromHint","getTimeStamp","Date","dateToUTC","date","toISOString","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","MBS_CREATE_DOCUMENTS_SINGLE_FILE","MBS_CREATE_DOCUMENTS_OP_FACT","MBS_CREATE_DOCUMENTS_OP","MBS_TRANSFER_ITEM_SINGLE_DOCUMENT","MBS_TRANSFER_DOCUMENTS_OP_FACT","MBS_TRANSFER_DOCUMENTS_OP","MBS_SIGN_ITEM_SINGLE_DOCUMENT","MBS_SIGN_DOCUMENTS_OP_FACT","MBS_SIGN_DOCUMENTS_OP","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","BLOCKSIGN_CREATE_DOCUMENTS","BLOCKSIGN_SIGN_DOCUMENTS","BLOCKSIGN_TRANSFER_DOCUMENTS","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","fileHash","signers","CreateDocumentsItem","owner","did","SignDocumentsItem","TransferDocumentsItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","BlockSignFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","_VERSION","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","BlockSignItem","bkeys","bamounts","item","breceiver","bfh","filehash","bdid","bowner","documentid","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","toKeypair","Account","priv","pub","data","Error","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","sort","y","localeCompare","publicKey","btc","process","ether","stellar","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","OPER_DEFAULT","PAGE_LOGIN","PAGE_OPER","SHOW_PRIVATE","SHOW_RESTORE","TYPE_CREATE_ACCOUNT","operation","create_account","TYPE_UPDATE_KEY","update_key","TYPE_TRANSFER","transfer","History","history","me","inState","in_state","confirmedAt","confirmed_at","setItems","account","LOGIN","LOGOUT","SET_HISTORY","CLEAR_HISTORY","SET_OPERATION","SET_RESPONSE","ENQUEUE_OPERATION","DEQUEUE_OPERATION","CLEAR_QUEUE","login","restoreKey","logout","clearHistory","setOperation","json","setResponse","isBroadcast","isStateIn","res","status","initialState","isLogin","isLoadHistory","download","Object","prototype","hasOwnProperty","call","file","File","alert","URL","createObjectURL","mode","filename","queue","shift","isEmpty","rootReducer","combineReducers","state","action","actions","enque","deque","clear","store","createStore","Home","props","isRedirect","setState","to","className","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","size","name","autoComplete","autoCorrect","autoCapitalize","autoSave","autoFocus","onChange","placeholder","useCopy","copy","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","trim","RestoreKeyLoginBox","isOperation","isPublicKeyValid","pubk","test","keyHint","isAddressValid","addressHint","isNum","isThresholdValid","thres","thresNum","isWeightValid","isWeightsValidToThres","weights","total","isCurrencyValid","currencies","isDuplicate","isAmountValid","list","AlertModal","isOpen","onClose","title","id","getAccountInformation","a","axios","get","getAccountHistory","Login","isPriv","isActive","isAlertShow","alertTitle","alertMsg","isShowLoad","_addr","_priv","pk","isPrivateKeyValid","pubKey","openAlert","then","setHistory","catch","pubKeys","signIn","radio","document","querySelector","onStartLogin","checked","closeAlert","renderForm","withRouter","connect","dispatch","histories","splitHistories","_i","j","_j","_z","confirmation","direction","SelectButton","PublicKeyModal","k","PendingModal","broadcastedAt","job","Sleep","ms","Promise","resolve","setTimeout","titleStyle","flexDirection","alignItems","justifyContent","width","margin","padding","content","getFactInState","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isPubModalOpen","isPendModalOpen","isQueueUpdate","redirect","isResult","request","deleteJob","finally","isDetailVisible","isPrivVisible","isResVisible","checkInState","refresh","pathname","ref","openPubModal","bal","onSelect","hist","openPendModal","closePubModal","closePendModal","KEY_ETHER","KEY_STELLAR","KeyGen","privKey","version","getKey","ResKeyGen","pdfjs","GlobalWorkerOptions","workerSrc","Help","goToPrevPage","pageNumber","goToNextPage","scrollToPdf","pdfRef","isShowExp","numPages","href","pdfFile","rel","onLoadSuccess","onDocumentLoadSuccess","broadcast","post","OperationConfirm","setResult","response","onSend","Balances","labeled","KeyAdder","onKeyChange","onWeightChange","onAdd","isAddDisabled","useThres","onThresChange","AmountAdder","onCurrencyChange","onAmountChange","CreateAccount","scrollToInput","createdRef","titleRef","isModalOpen","isAlertOpen","generator","createKeys","formatKey","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","created","setJson","onChangePub","onChangeWeight","onChangeThres","addKey","onChangeCurrency","onChangeAmount","addAmount","closeModal","ExtraAdder","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","location","renderOperation","preStyle","overflow","whiteSpace","getOperationFromType","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","files","reader","FileReader","onload","result","readAsText","signOperation","openJSON","jsonView","importJSON","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","clearQueue","Footer","LogoutConfirm","onLogout","keyHash","Response","isSignOut","addJob","clearJson","renderResponse","UpdateKeyLoad","counter","getResult","_hash","_res","reason","hs","rs","broad","getResponse","SubNavigation","isChecked","for","onCheck","onCheckOut","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","BaseKey","w","karr","sortedkeys","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","sig","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"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","file":"static/js/main.4fffa2d5.chunk.js","sourcesContent":["const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst { Uint64BE } = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if (this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2) ? 1 : Math.ceil((Math.log(this.num) / Math.log(2)) / 8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if (this.byteSize() > 4) {\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4 - this.byteSize());\n\n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n\n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf) {\n        const _buf = Buffer.from(buf);\n        for (var i = 0; i < _buf.length / 2; i++) {\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if (hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx + 1);\n\n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    return ISOToUTC(date.toISOString());\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {string} iso - iso string to change\n * @return {string} - UTC-format date string\n */\nconst ISOToUTC = (iso) => {\n    const t = iso.indexOf('T');\n    const z = iso.indexOf('Z');\n    let rtime;\n\n    const _time = iso.substring(t + 1, z);\n    const dotIdx = _time.indexOf('.');\n    if (dotIdx < 0) {\n        rtime = iso.substring(t + 1, z);\n    }\n    else {\n        let decimal = _time.substring(9, _time.length);\n        const idx = decimal.lastIndexOf('0');\n        if (idx < 0 || idx != decimal.length - 1) {\n            rtime = iso.substring(t + 1, z);\n        }\n        else {\n            let startIdx = decimal.length - 1;\n            for (let i = decimal.length - 1; i > 0; i--) {\n                if (decimal[i] == '0') {\n                    startIdx = i;\n                }\n                else {\n                    break;\n                }\n            }\n            decimal = decimal.substring(0, startIdx);\n\n            rtime = _time.substring(0, dotIdx) + '.' + decimal;\n        }\n    }\n\n    return iso.substring(0, t)\n        .concat(\n            ' ',\n            rtime,\n            ' ',\n            '+0000',\n            ' UTC'\n        );\n}\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for (var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\";\nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";\n\n// blocksign hint\nexports.MBS_CREATE_DOCUMENTS_SINGLE_FILE = \"mitum-blocksign-create-documents-single-file\"\nexports.MBS_CREATE_DOCUMENTS_OP_FACT = \"mitum-blocksign-create-documents-operation-fact\"\nexports.MBS_CREATE_DOCUMENTS_OP = \"mitum-blocksign-create-documents-operation\"\nexports.MBS_TRANSFER_ITEM_SINGLE_DOCUMENT = \"mitum-blocksign-transfer-item-single-document\"\nexports.MBS_TRANSFER_DOCUMENTS_OP_FACT = \"mitum-blocksign-transfer-documents-operation-fact\"\nexports.MBS_TRANSFER_DOCUMENTS_OP = \"mitum-blocksign-transfer-documents-operation\"\nexports.MBS_SIGN_ITEM_SINGLE_DOCUMENT = \"mitum-blocksign-sign-item-single-document\"\nexports.MBS_SIGN_DOCUMENTS_OP_FACT = \"mitum-blocksign-sign-documents-operation-fact\"\nexports.MBS_SIGN_DOCUMENTS_OP = \"mitum-blocksign-sign-documents-operation\"","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for (var i = 0; i < ks.length; i++) {\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for (var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n\n        this.BLOCKSIGN_CREATE_DOCUMENTS = \"CREATE-DOCUMENTS\";\n        this.BLOCKSIGN_SIGN_DOCUMENTS = \"SIGN_DOCUMENTS\";\n        this.BLOCKSIGN_TRANSFER_DOCUMENTS = \"TRANSFER_DOCUMENTS\";\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight) {\n        if (key.indexOf(':') === -1) {\n            throw '[ERROR] Invalid key';\n        }\n        if (typeof (weight) !== 'number') {\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid) {\n        if (typeof (big) !== 'number') {\n            throw '[ERROR] Invalid amount';\n        }\n        if (cid.length < 1) {\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold) {\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts) {\n        return _toAmounts(amts);\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    createCreateDocumentsItem(fileHash, signers, cid) {\n        return new Xoper.CreateDocumentsItem(\n            Xhint.MBS_CREATE_DOCUMENTS_SINGLE_FILE,\n            fileHash,\n            signers,\n            cid\n        )\n    }\n\n    createSignDocumentsItem(owner, did, cid) {\n        return new Xoper.SignDocumentsItem(\n            Xhint.MBS_SIGN_ITEM_SINGLE_DOCUMENT,\n            owner,\n            did,\n            cid\n        )\n    }\n\n    createTransferDocumentsItem(owner, receiver, did, cid) {\n        return new Xoper.TransferDocumentsItem(\n            Xhint.MBS_TRANSFER_ITEM_SINGLE_DOCUMENT,\n            owner,\n            receiver,\n            did,\n            cid\n        )\n    }\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items) {\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys) {\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items) {\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    createBlockSignFact(type, sender, items) {\n        let _type;\n        switch(type) {\n            case this.BLOCKSIGN_CREATE_DOCUMENTS:\n                _type = Xhint.MBS_CREATE_DOCUMENTS_OP_FACT;\n                break;\n            case this.BLOCKSIGN_SIGN_DOCUMENTS:\n                _type = Xhint.MBS_SIGN_DOCUMENTS_OP_FACT;\n                break;\n            case this.BLOCKSIGN_TRANSFER_DOCUMENTS:\n                _type = Xhint.MBS_TRANSFER_DOCUMENTS_OP_FACT;\n                break;\n            default:\n                throw '[ERROR] Invalid block-sign fact type';\n        }\n        \n        return new Xoper.BlockSignFact(\n            _type,\n            sender,\n            items\n        )\n    }\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo) {\n        let _type;\n\n        if (fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if (fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if (fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else if (fact instanceof Xoper.BlockSignFact) {\n\n            switch (fact.type) {\n                case Xhint.MBS_CREATE_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_CREATE_DOCUMENTS_OP;\n                    break;\n                case Xhint.MBS_SIGN_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_SIGN_DOCUMENTS_OP;\n                    break;\n                case Xhint.MBS_TRANSFER_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_TRANSFER_DOCUMENTS_OP;\n                    break;\n                default:\n                    throw '[ERROR] Invalid fact object';\n            }\n\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers) {\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for (var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n\n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for (var i = 0; i < opers.length; i++) {\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if (error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for (var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof (f_oper) === typeof (\"\") ? JSON.parse(fs.readFileSync(f_oper))\n            : (typeof (f_oper) === typeof ({}) ? f_oper : undefined);\n        if (!before) {\n            return undefined;\n        }\n\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }\n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch (Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch (e) {\n        console.log(\"Fail to create new fact sign\");\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n\n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n\n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\nclass BlockSignItem {\n\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n    }\n\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\nclass CreateDocumentsItem extends BlockSignItem {\n    constructor(type, fileHash, signers, cid) {\n        super(type);\n        this.fileHash = fileHash;\n        this.signers = signers;\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bfh = Buffer.from(this.fileHash);\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bfh, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.filehash = this.fileHash;\n        item.signers = this.signers;\n        item.currency = this.cid;\n        return item;\n    }\n}\n\nclass SignDocumentsItem extends BlockSignItem {\n    constructor(type, owner, did, cid) {\n        super(type);\n        this.owner = new Address(owner);\n        this.did = new Xutil.BigInteger(did);\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bdid = this.did.tight();\n        const bowner = Buffer.from(this.owner.hinted());\n        const bcid = Buffer.from(this.cid);\n        return Buffer.concat([bdid, bowner, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.documentid = \"\" + this.did.value;\n        item.owner = this.owner.hinted();\n        item.currency = this.cid;\n        return item;\n    }\n}\n\nclass TransferDocumentsItem extends BlockSignItem {\n    constructor(type, owner, receiver, did, cid) {\n        super(type);\n        this.owner = new Address(owner);\n        this.receiver = new Address(receiver);\n        this.did = new Xutil.BigInteger(did);\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bdid = this.did.tight();\n        const bowner = Buffer.from(this.owner.hinted());\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bcid = Buffer.from(this.cid);\n        return Buffer.concat([bdid, bowner, breceiver, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.documentid = \"\" + this.did.value;\n        item.owner = this.owner.hinted();\n        item.receiver = this.receiver.hinted();\n        item.currency = this.cid;\n        return item;\n    }\n}\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {\n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\nclass BlockSignFact extends OperationFact {\n    constructor(type, sender, items) {\n        super(type);\n        this.sender = new Address(sender);\n        this.items = items;\n        this.type = type;\n\n        this._generateHash();\n    }\n\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n}\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if (this.fact_signs.length < 1) {\n            throw '[ERROR] Empty fact sign!'\n        }\n        \n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n\n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */\n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for (var i = 0; i < this.fact_signs.length; i++) {\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateDocumentsItem,\n    SignDocumentsItem,\n    TransferDocumentsItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    BlockSignFact,\n    Operation,\n};\n","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","import { key } from '../text/hint.json';\n\nclass Account {\n    constructor(addr=null, priv=null, pub=null, data=null) {\n        if(!addr || !priv || !pub || !data) {\n            throw new Error('Wrong parameter with Account constructor');\n        }\n\n\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n\n        this.balances.sort((x, y) => x.currency.localeCompare(y.currency));\n        this.publicKeys.sort((x, y) => x.key.localeCompare(y.key));\n\n        this.publicKey = pub;\n\n        const idx = priv.indexOf(':');\n        const hint = priv.substring(idx + 1);\n        switch (hint) {\n            case `${key.btc.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.btc.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.ether.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.ether.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.stellar.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n        }\n    }\n}\n\nexport default Account;","import { operation } from './hint.json';\n\nexport const OPER_CREATE_ACCOUNT = 'OPER-CREATE-ACCOUNT';\nexport const OPER_UPDATE_KEY = 'OPER-UPDATE-KEY';\nexport const OPER_TRANSFER = 'OPER-TRANSFER';\nexport const OPER_DEFAULT = 'OPER-DEFAULT';\n\nexport const PAGE_HOME = 'PAGE-HOMEs'\nexport const PAGE_LOGIN = 'PAGE-LOGIN';\nexport const PAGE_WALLET = 'PAGE-WALLET';\nexport const PAGE_OPER = 'PAGE-OPER';\nexport const PAGE_SIGN = 'PAGE-SIGN';\nexport const PAGE_LOD = 'PAGE-LOD';\nexport const PAGE_RES = 'PAGE-RES';\nexport const PAGE_GEN = 'PAGE-GEN';\n\nexport const SHOW_PRIVATE = 'show-private';\nexport const SHOW_RESTORE = 'show-restore';\n\nexport const TYPE_CREATE_ACCOUNT = operation.create_account + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_UPDATE_KEY = operation.update_key + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_TRANSFER = operation.transfer + '-' + process.env.REACT_APP_VERSION;","import { TYPE_CREATE_ACCOUNT, TYPE_TRANSFER } from \"../text/mode\";\nimport { address } from '../text/hint.json';\n\nconst hintedAccount = (account) => {\n    return  account + ':' + address + '-' + process.env.REACT_APP_VERSION\n};\n\nclass History {\n    constructor(history, me) {\n        this.me = me;\n        this.inState = history.in_state;\n        this.confirmedAt = history.confirmed_at;\n        \n        this.operation = history.operation;\n        this.type = history.operation._hint;\n        this.factHash = history.operation.fact.hash;\n\n        this.setItems();\n    }\n\n    setItems(){\n        if(!(this.type === TYPE_CREATE_ACCOUNT || this.type === TYPE_TRANSFER)) {\n            this.items = undefined;\n            return;\n        }\n\n        const items = this.operation.fact.items.map(\n            x => ({\n                receiver: this.type === TYPE_CREATE_ACCOUNT ? hintedAccount(x.keys.hash) : x.receiver,\n                amounts: x.amounts.map(\n                    y => ({\n                        currency: y.currency,\n                        amount: y.amount\n                    })\n                )\n            })\n        );\n\n        this.sender = this.operation.fact.sender;\n        if(this.sender === this.me){\n            this.items = items;\n        }\n        else{\n            this.items = [];\n            for( let i = 0; i < items.length; i++ ){\n                if(items[i].receiver === this.me) {\n                    this.items.push(items[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default History;","import Account from '../../lib/Account';\nimport History from '../../lib/History';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_HISTORY = 'SET_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n\nexport const SET_OPERATION = 'SET_OPERATION';\nexport const SET_RESPONSE = 'SET_RESPONSE';\n\nexport const ENQUEUE_OPERATION = 'ENQUEUE_OPERATION';\nexport const DEQUEUE_OPERATION = 'DEQUEUE_OPERATION';\nexport const CLEAR_QUEUE = 'CLEAR_QUEUE';\n\nexport function login(address, privateKey, publicKey, data) {\n    const account = new Account(address, privateKey, publicKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKey: account.publicKey,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined,\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function setHistory(data, me) {\n    if(!data) {\n        return {\n            type: SET_HISTORY,\n            history: [],\n        }\n    }\n\n    const histories = data._embedded.map(x => new History(x._embedded, me));\n    const splitHistories = [];\n\n    for(let i = 0; i < histories.length; i++){\n        const _i = histories[i];\n        if(!_i.items){\n            continue;\n        }\n        for(let j = 0; j < _i.items.length; j++){\n            const _j = _i.items[j];\n            for(let z = 0; z < _j.amounts.length; z++) {\n                const _z = _j.amounts[z];\n                splitHistories.push({\n                    hash: _i.factHash,\n                    confirmation: _i.inState ? 'SUCCESS' : 'FAIL',\n                    direction: me === _i.sender ? 'SEND' : 'RECEIVE',\n                    confirmedAt: _i.confirmedAt,\n                    target: me === _i.sender ? _j.receiver : _i.sender,\n                    currency: _z.currency,\n                    amount: _z.amount\n                })\n            }\n        }\n    }\n\n    return {\n        type: SET_HISTORY,\n        history: splitHistories,\n    }\n}\n\nexport function clearHistory() {\n    return {\n        type: CLEAR_HISTORY\n    }\n}\n\nexport function setOperation(operation, json) {\n    return {\n        type: SET_OPERATION,\n        operation,\n        json,\n    }\n}\n\nexport function setResponse(isBroadcast, isStateIn, res, status, data) {\n    return {\n        type: SET_RESPONSE,\n        isBroadcast,\n        isStateIn,\n        res,\n        status,\n        data,\n    }\n}\n\nexport function enqueueOperation(item) {\n    return {\n        type: ENQUEUE_OPERATION,\n        item,\n    }\n}\n\nexport function dequeueOperation() {\n    return {\n        type: DEQUEUE_OPERATION\n    }\n}\n\nexport function clearQueue() {\n    return {\n        type: CLEAR_QUEUE\n    }\n}","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined,\n    history: undefined,\n    isLoadHistory: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        case actions.SET_HISTORY:\n            return {\n                ...state,\n                history: action.history,\n                isLoadHistory: true\n            }\n        case actions.CLEAR_HISTORY:\n            return {\n                ...state,\n                history: undefined,\n                isLoadHistory: false\n            }\n        default:\n            return state;\n    }\n}","function download(json) {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('JSON 파일 다운로드 url을 얻을 수 없습니다. :(');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nexport default download;","import * as actions from '../actions';\nimport * as mode from '../../text/mode'; \nimport download from '../../lib/Url';\n\nconst initialState = {\n    operation: mode.OPER_DEFAULT,\n    json: null,\n    data: [],\n    download: undefined,\n    filename: \"\",\n    isBroadcast: false,\n    isStateIn: false,\n    res: undefined,\n    status: 400\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_OPERATION:\n            if(action.operation === mode.OPER_DEFAULT) {\n                return initialState;\n            }            \n\n            return {\n                ...state,\n                operation: action.operation,\n                json: action.json,\n                download: download(action.json),\n                filename: action.json.hash\n            }\n        case actions.SET_RESPONSE:\n            return {\n                ...state,\n                isBroadcast: action.isBroadcast,\n                isStateIn: action.isStateIn,\n                res: action.res,\n                status: action.status,\n                data: action.data,\n            }\n        default:\n            return state;\n    }\n}","import * as actions from '../actions';\nimport Queue from '../../lib/Queue';\n\nconst initialState = {\n    queue: new Queue()\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.ENQUEUE_OPERATION:\n            state.queue.enque(action.item);\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.DEQUEUE_OPERATION:\n            state.queue.deque();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.CLEAR_QUEUE:\n            state.queue.clear();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        default:\n            return state;\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    enque(item) {\n        this.queue.push(item);\n    }\n\n    deque() {\n        this.queue.shift();\n    }\n\n    isEmpty() {\n        if(this.queue) {\n            return false;\n        }\n        return true;\n    }\n\n    clear() {\n        this.queue = [];\n    }\n\n    get length() {\n        return this.queue.length;\n    }\n\n    get target() {\n        if(this.isEmpty()) {\n            return null\n        }\n        return this.queue[0];\n    }\n}\n\nexport default Queue;","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\nimport { reducer as operationReducer } from './OperationReducer';\nimport { reducer as queueReducer} from './QueueReducer';\n\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    operation: operationReducer,\n    queue: queueReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"home-container\">\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"inherit\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\nexport default SmallButton;","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\n\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text/plain\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    autoCorrect=\"off\"\n                    autoCapitalize=\"off\"\n                    autoSave=\"off\"\n                    autoFocus=\"off\"\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <button className=\"confirm-button\"\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                onClick={this.props.onClick}\n                disabled={this.props.disabled ? true : false}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"private key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => {\n                        this.props.onLogin(this.state.account.trim(), this.state.privateKey.trim());\n                    }}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import { key as keyHint } from '../text/hint.json';\nimport { address as addressHint } from '../text/hint.json';\n\nexport const isOperation = (json) => {\n\n    if (!json) { return false; }\n\n    if(!Object.prototype.hasOwnProperty.call(json, '_hint') || !json._hint) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'hash') || !json.hash) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'memo')) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact') || !json.fact) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact_signs')) {\n        return false;\n    }\n\n    // const signatures = json.fact_signs.map(x => x.signatures);\n    // if (signatures.length < 1) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isStateValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'location') || !state.location) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state.location, 'state') || !state.location.state) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isResponseValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'res') || !state.res) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'status') || !state.status) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'operation') || !state.operation) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'data')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAccountValid = (account) => {\n\n    if (!account) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'address') || !account.address) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'accountType') || !account.accountType) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'publicKeys') || !account.publicKeys) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'balances') || !account.balances) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'privateKey') || !account.privateKey) {\n        return false;\n    }\n\n    // if (!Object.prototype.hasOwnProperty.call(account, 'restoreKey') || !account.restoreKey) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isPrivateKeyValid = (pk) => {\n\n    if (typeof (pk) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = pk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n    const key = pk.substring(0, idx);\n    const hint = pk.substring(idx + 1);\n\n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isPublicKeyValid = (pubk) => {\n\n    if (typeof (pubk) !== typeof ('string')) {\n        return false;\n    }\n\n    const idx = pubk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const key = pubk.substring(0, idx);\n    const hint = pubk.substring(idx + 1);\n    \n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.pub}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isAddressValid = (addr) => {\n\n    if (typeof (addr) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = addr.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const hint = addr.substring(idx + 1);\n    const address = addr.substring(1, idx);\n    if (hint !== `${addressHint}-${process.env.REACT_APP_VERSION}`) {\n        return false;\n    }\n\n    if(!/[a-zA-Z0-9]+/.test(address)) {\n        return false;\n    }\n\n    return true;\n}\n\nconst isNum = (num) => {\n    if (!num) {\n        return false;\n    }\n\n    if (/[^0-9]/.test(num)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]*/.test(num)) {\n        return false;\n    }\n\n    if (num.indexOf('.') > -1) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isThresholdValid = (thres) => {\n    if (!isNum(thres)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]{0,2}/.test(thres)) {\n        return false;\n    }\n\n    const thresNum = parseInt(thres);\n    if (thresNum < 1 || thresNum > 100) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isWeightValid = (weight) => {\n    return isNum(weight);\n}\n\nexport const isWeightsValidToThres = (weights, thres) => {\n    \n    if (!isThresholdValid(thres)) {\n        return false;\n    }\n\n    let total = 0;\n    for (let i = 0; i < weights.length; i++) {\n        if (!isWeightValid(weights[i])) {\n            return false;\n        }\n        total += parseInt(weights[i]);\n    }\n\n    if (total < parseInt(thres)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isCurrencyValid = (currency, currencies) => {\n\n    if(!currency || !currencies || currencies.length < 1) {\n        return false;\n    }\n\n    if(typeof (currency) !== typeof ('string')) {\n        return false;\n    }\n\n    if(!/[A-Z]{3,3}/.test(currency)) {\n        return false;\n    }\n\n    return isDuplicate(currency, currencies);\n}\n\nexport const isAmountValid = (amount) => {\n    return isNum(amount);\n}\n\nexport const isDuplicate = (target, list) => {\n\n    if(!target || !list) {\n        return false;\n    }\n\n    for(let i = 0; i < list.length; i++) {\n        if(target.indexOf(list[i]) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}","import React from 'react';\nimport './AlertModal.scss';\n\nclass AlertModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, title, msg } = this.props;\n        return (\n            <div className={isOpen ? 'alert-openModal alert-modal' : 'alert-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {title}\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='alert-msg'>{msg}</p>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AlertModal;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { clearHistory, login, setHistory } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\nimport { SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\nimport { isAddressValid, isPrivateKeyValid } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\n\nconst getAccountInformation = async (account) => {\n    return await axios.get(process.env.REACT_APP_API_ACCOUNT + account);\n}\n\nconst getAccountHistory = async (account) => {\n    return await axios.get(`${process.env.REACT_APP_API_ACCOUNT}${account}/operations?reverse=1`);\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.isLogin) {\n            this.onLogin(this.props.account.address, this.props.account.privateKey);\n        }\n\n        this.state = {\n            mode: SHOW_PRIVATE,\n            isPriv: true,\n            isActive: false,\n\n            isAlertShow: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            isShowLoad: false,\n            isRedirect: false,\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertShow: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertShow: false\n        });\n    }\n\n    onLogin(_addr, _priv) {\n        const addr = _addr.trim();\n        const priv = _priv.trim();\n        \n        if (!isAddressValid(addr) || !isPrivateKeyValid(priv)) {\n            this.openAlert('지갑 열기 실패 :(', '주소 혹은 키 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        let pubKey;\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            this.openAlert('지갑 열기 실패 :(', '유효하지 않은 개인키입니다.');\n            return;\n        }\n\n        getAccountHistory(addr)\n            .then(\n                res => {\n                    this.props.setHistory(res.data, addr);\n                }\n            )\n            .catch(\n                e => {\n                    this.props.setHistory(null, addr);\n                }\n            )\n\n        getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, pubKey, res.data);\n                            return;\n                        }\n                    }\n                    this.openAlert('지갑 열기 실패 :(', `계정 [${addr}]의 멤버에 해당 키가 존재하지 않습니다.`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    this.openAlert('지갑 열기 실패 :(', '유효하지 않은 주소 혹은 네트워크 문제로 계정 조회에 실패하였습니다.');\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case SHOW_PRIVATE:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n            case SHOW_RESTORE:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    async onStartLogin(addr, priv) {\n        this.setState({\n            isShowLoad: true\n        });\n\n        this.onLogin(addr, priv)\n        \n        if (!(this.props.isLogin && this.props.isLoadHistory)) {\n            this.setState({\n                isShowLoad: false\n            });\n        }\n    }\n\n    render() {\n        if(this.props.isLogin && this.props.isLoadHistory) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />\n        }\n\n        return (\n            <div className=\"login-container\">\n                <div id='login-main'\n                    style={{\n                        display: this.state.isShowLoad ? 'none' : 'flex'\n                    }}>\n                    <h1>OPEN WALLET</h1>\n                    <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_PRIVATE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Private Key</div>\n                        </label>\n\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_RESTORE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Restore Key</div>\n                        </label>\n                    </div>\n                    <AlertModal isOpen={this.state.isAlertShow} onClose={() => this.closeAlert()}\n                        title={this.state.alertTitle} msg={this.state.alertMsg} />\n                    {this.renderForm()}\n                </div>\n                <div id='login-load'\n                    style={{\n                        display: this.state.isShowLoad ? 'flex' : 'none'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    isLoadHistory: state.login.isLoadHistory\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, publicKey, data) => dispatch(login(address, privateKey, publicKey, data)),\n    setHistory: (data, me) => dispatch(setHistory(data, me)),\n    clearHistory: () => dispatch(clearHistory())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PublicKeyModal.scss\";\n\nconst key = (k) => {\n    return (\n        <li key={k}\n            onClick={() => {\n                copy(k);\n                alert('copied');\n            }}>{k}</li>\n    );\n}\n\nclass PublicKeyModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, account } = this.props;\n        return (\n            <div className={isOpen ? 'pub-openModal pub-modal' : 'pub-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Public Key List\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {account.publicKeys.map(x => key(x.key))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    account: state.login.account\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PublicKeyModal));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PendingModal.scss\";\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER } from '../../text/mode';\n\nconst job = (x) => {\n    return (\n        <li key={x.hash}\n            onClick={() => { copy(x.hash); alert('copied'); }}>\n            <p>{x.broadcastedAt}</p>\n            <p>{x.operation === OPER_CREATE_ACCOUNT\n                ? 'CREATE-ACCOUNT'\n                : (\n                    x.operation === OPER_TRANSFER\n                        ? 'TRANSFER'\n                        : 'UPDATE-KEY'\n                )\n            }</p>\n            <p>{x.hash}</p>\n        </li>\n    );\n}\n\nclass PendingModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, queue } = this.props;\n        return (\n            <div className={isOpen ? 'pend-openModal pend-modal' : 'pend-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Operation Facts in Pending...\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {queue.queue.map(x => job(x))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    queue: state.queue.queue\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PendingModal));","function Sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Sleep;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { dequeueOperation, login } from '../store/actions';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport PublicKeyModal from '../components/modals/PublicKeyModal';\nimport PendingModal from '../components/modals/PendingModal';\nimport axios from 'axios';\n\nimport { isAccountValid } from '../lib/Validation';\n\nimport Sleep from '../lib/Sleep';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY, PAGE_LOGIN, PAGE_OPER, SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <p className=\"currency\">{bal.currency}</p>\n            <p className=\"amount\">{bal.amount}</p>\n        </li>\n    );\n}\n\nconst history = (hist) => {\n    return (\n        <li key={hist.hash + hist.target} onClick={() => {\n            copy(hist.hash);\n            alert('fact hash copied!');\n        }}>\n            <p id={hist.confirmation}>{hist.confirmation}</p>\n            <p id={hist.direction}>{hist.direction}</p>\n            <p id='confirmed-at'>{hist.confirmedAt}</p>\n            <p id='target'>{hist.target}</p>\n            <p id='currency'>{hist.currency}</p>\n            <p id='amount'>{hist.amount}</p>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '0',\n    padding: '0'\n}\n\nconst title = (content) => {\n    return (\n        <div id='container' style={titleStyle}>\n            <div id='line'></div>\n            <p id='body'>{content}</p>\n            <div id='line'></div>\n        </div>\n    )\n}\n\nconst getFactInState = async (hash) => {\n    return await axios.get(process.env.REACT_APP_API_SEARCH_FACT + hash);\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isPubModalOpen: false,\n            isPendModalOpen: false,\n            isQueueUpdate: 1,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PAGE_LOGIN,\n            operation: undefined\n        }\n    }\n\n    async checkInState() {\n        while (!this.props.queue.isEmpty()) {\n            const target = this.props.queue.target;\n\n            if (!target) {\n                break;\n            }\n\n            var isResult = false;\n            getFactInState(target.hash)\n                .then(\n                    res => {\n                        if (res.request.status === 200) {\n                            this.props.deleteJob();\n                            this.setState({ isQueueUpdate: this.state.isQueueUpdate + 1 });\n                        }\n                    }\n                )\n                .catch(\n                    e => {\n                        console.log(e);\n                    }\n                )\n                .finally(() => {\n                    isResult = true;\n                });\n\n            while (!isResult) {\n                await Sleep(500);\n            }\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === OPER_CREATE_ACCOUNT\n            || oper === OPER_UPDATE_KEY\n            || oper === OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: PAGE_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n        this.checkInState();\n\n        setTimeout(() => {\n            this.refresh();\n        }, 5000);\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    closePubModal() {\n        this.setState({ isPubModalOpen: false });\n    }\n\n    openPubModal() {\n        this.setState({ isPubModalOpen: true });\n    }\n\n    closePendModal() {\n        this.setState({ isPendModalOpen: false });\n    }\n\n    openPendModal() {\n        this.setState({ isPendModalOpen: true });\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: PAGE_LOGIN\n        });\n    }\n\n    render() {\n        \n        if (!this.props.account || !isAccountValid(this.props.account)) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (this.state.isRedirect) {\n            if (this.state.redirect === PAGE_OPER) {\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            }\n            else if (this.state.redirect === PAGE_LOGIN) {\n                return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className=\"wallet-container\" >\n                <div className=\"wallet-ref\" ref={this.walletRef} ></div>\n                <div id='wallet-refresh'><p onClick={() => this.refresh()}>↻</p></div>\n                <div className=\"wallet-info\">\n                    {title(\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\"))}\n                    <p id='address' onClick={() => this.openPubModal()}>{this.props.account.address}</p>\n                    <section className=\"wallet-amount\">\n                        {title('BALANCE')}\n                        <ul>\n                            {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-history\">\n                    {title('HISTORY')}\n                    <ul>\n                        {this.props.history.length > 0 ? this.props.history.map(x => history(x)) : false}\n                    </ul>\n                    <p id='pend' onClick={() => this.openPendModal()}>\n                        {this.state.isQueueUpdate ? `${this.props.queue.length} 개의 작업을 처리 중입니다.` : false}\n                    </p>\n                </div>\n                <PublicKeyModal onClose={() => this.closePubModal()} isOpen={this.state.isPubModalOpen} />\n                <PendingModal onClose={() => this.closePendModal()} isOpen={this.state.isPendModalOpen} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    queue: state.queue.queue\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    deleteJob: () => dispatch(dequeueOperation())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { version, key } from \"../text/hint.json\";\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privKey: \"\",\n            pubKey: \"\",\n        }\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        let privateKey = keypair.privKey.key + ':';\n        let publicKey = keypair.pubKey + ':';\n\n        switch (_type) {\n            case KEY_BTC:\n                privateKey += key.btc.priv;\n                publicKey += key.btc.pub;\n                break;\n            case KEY_ETHER:\n                privateKey += key.ether.priv;\n                publicKey += key.ether.pub;\n                break;\n            case KEY_STELLAR:\n                privateKey += key.stellar.priv;\n                publicKey += key.stellar.pub;\n                break;\n            default: throw new Error(\"Invalid key type\");\n        }\n\n        privateKey += '-' + version;\n        publicKey += '-' + version;\n\n        this.setState({\n            privKey: privateKey,\n            pubKey: publicKey\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","export default __webpack_public_path__ + \"static/media/mitum_wallet_manual.f34e6447.pdf\";","import React, { createRef } from 'react';\nimport Sleep from '../lib/Sleep';\nimport './Help.scss';\n\nimport pdfFile from '../mitum_wallet_manual.pdf';\nimport { pdfjs, Document, Page } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Help extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.pdfRef = createRef();\n\n        this.state = {\n            isShowExp: false,\n\n            numPages: null,\n            pageNumber: 1,\n        }\n    }\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({ numPages });\n    }\n\n    goToPrevPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n    goToNextPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n\n    async componentDidMount() {\n\n        await Sleep(1000);\n        this.setState({\n            isShowExp: true,\n        });\n        this.scrollToPdf();\n    }\n\n    scrollToPdf = () => {\n        if (this.pdfRef.current && this.state.isShowExp) {\n            this.pdfRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToPdf();\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n        return (\n            <div className=\"help-container\">\n                <div id='help-start'\n                    style={{\n                        display: this.state.isShowExp ? 'none' : 'flex'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n                <div ref={this.pdfRef} />\n                <div id='help-document'\n                    style={{\n                        display: this.state.isShowExp ? 'flex' : 'none'\n                    }}>\n                    <a id='link' target=\"_blank\"\n                        download='manual.pdf'\n                        href={pdfFile}\n                        rel=\"noreferrer\">\n                        DOWNLOAD MANUAL\n                    </a>\n                    <Document\n                        file={pdfFile}\n                        onLoadSuccess={({ numPages }) => this.onDocumentLoadSuccess({ numPages })}>\n                        <Page pageNumber={pageNumber} />\n                    </Document>\n                    <p id='switch'>\n                        <span id='left'\n                            onClick={() =>\n                                this.state.pageNumber > 1\n                                    ? this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber - 1\n                                    })\n                                    : null}>\n                            &lt;\n                        </span>\n                        <span>{pageNumber} / {numPages}</span>\n                        <span id='right'\n                            onClick={() =>\n                                this.state.pageNumber < numPages\n                                    ?\n                                    this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber + 1\n                                    })\n                                    : null}>\n                            &gt;\n                        </span>\n                    </p>\n                    <p id='exp'>가이드의 내용이 잘 보이지 않는 경우 상단의 DOWNLOAD MANUAL을 통해 파일을 직접 다운로드 하여 주시기 바랍니다.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../../store/actions';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport \"./OperationConfirm.scss\";\nimport { isOperation } from '../../lib/Validation';\n\nimport { OPER_CREATE_ACCOUNT, OPER_UPDATE_KEY, OPER_TRANSFER } from '../../text/mode';\nimport hint from '../../text/hint.json';\n\nconst broadcast = async (operation) => {\n    if (!isOperation(operation)) {\n        return undefined;\n    }\n\n    return await axios.post(process.env.REACT_APP_API_BROADCAST, operation);\n}\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false,\n        }\n    }\n\n    onSend(json) {\n        broadcast(json).then(\n            res => {\n                if (res.request.status === 200) {\n                    let data = undefined;\n                    switch (this.props.operation) {\n                        case OPER_CREATE_ACCOUNT:\n                            data = json.fact.items.map(x => x.keys.hash + ':' + hint.address + '-' + process.env.REACT_APP_VERSION);\n                            break;\n                        case OPER_UPDATE_KEY:\n                            data = json.fact.hash;\n                            break;\n                        case OPER_TRANSFER:\n                        default:\n                            data = undefined;\n                    }\n                    this.props.setResult(true, false, res.data, 200, data);\n                }\n                else {\n                    this.props.setResult(false, false, res.data, res.request.status, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        ).catch(\n            e => {\n\n                try {\n                    this.props.setResult(false, false, e.response.data, e.response.data.status, undefined);\n                }\n                catch (error) {\n                    this.props.setResult(false, false, {\n                        title: '404 Network Error'\n                    }, 404, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        );\n    }\n\n    render() {\n        const { isOpen, onClose, json, filename, download } = this.props;\n\n        if (this.state.isRedirect) {\n            const { operation } = this.props;\n            switch (operation) {\n                case OPER_CREATE_ACCOUNT:\n                case OPER_TRANSFER:\n                    return <Redirect to='/response' />;\n                case OPER_UPDATE_KEY:\n                    return <Redirect to='/loading' />;\n                default:\n                    alert('처리할 수 없는 타입의 작업입니다 :(\\n지갑 페이지로 이동합니다.');\n                    return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className={isOpen ? 'oper-openModal oper-modal' : 'oper-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            이 작업을 전송하겠습니까?\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='oper-exp'>전송 버튼을 누른 후에는 작업을 되돌릴 수 없습니다.</p>\n                            <p id='oper-exp'>작업 내용이 정확한가요?</p>\n                            <span>\n                                <p className=\"oper-modal-button\" id=\"no\" onClick={onClose}>{\"취소!:(\"}</p>\n                                <a className=\"oper-modal-button\" id=\"no\" target=\"_blank\" download={`${filename}.json`}\n                                    href={download} rel=\"noreferrer\">\n                                    {\"JSON 파일 다운로드!:[\"}\n                                </a>\n                                <p className=\"oper-modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"전송!:)\"}</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    download: state.operation.download,\n    filename: state.operation.filename,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OperationConfirm));","import React from 'react';\nimport { key } from './SubInfo';\nimport './Keys.scss';\n\nfunction Keys({ keys, title }) {\n    return (\n        <section className='key-container'>\n            <p id='head'>{title}</p>\n            <div className='label'>\n                <p id='key'>KEY</p>\n                <p id='weight'>WEIGHT</p>\n            </div>\n            <ul>\n                {keys ? keys.map(x => key(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Keys;","export const balance = x => {\n    return (\n        <li key={x.currency}>\n            <p id='currency'>{x.currency}</p>\n            <p id='amount'>{x.amount}</p>\n        </li>\n    );\n}\n\nexport const key = x => {\n    return (\n        <li key={x.key}>\n            <p id='key'>{x.key}</p>\n            <p id='weight'>{x.weight}</p>\n        </li>\n    );\n}","import React from 'react';\nimport { balance } from './SubInfo';\nimport './Balances.scss';\n\nfunction Balances({ balances, title, labeled }) {\n    return (\n        <section className='balance-container'>\n            <p id='head'>{title}</p>\n            {labeled ? (\n                <div className='label'>\n                    <p id='currency'>CURRENCY ID</p>\n                    <p id='amount'>AMOUNT</p>\n                </div>\n            ) : false}\n            <ul className={labeled ? 'wide' : 'slim'}>\n                {balances ? balances.map(x => balance(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Balances;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './KeyAdder.scss';\n\nfunction KeyAdder(props) {\n\n    const { onKeyChange, onWeightChange, onAdd, isAddDisabled, pub, weight, useThres } = props;\n\n    return (\n        <section className='key-adder-container'>\n            <div className=\"key-adder\">\n                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                    value={pub}\n                    onChange={onKeyChange} />\n                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                    value={weight}\n                    onChange={onWeightChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n            {useThres\n                ? (\n                    <div className=\"thres-adder\">\n                        <p>THRESHOLD:</p>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={props.thres}\n                            onChange={props.onThresChange} />\n                    </div>\n                )\n                : false\n            }\n        </section>\n    );\n}\n\nexport default KeyAdder;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './AmountAdder.scss';\n\nfunction AmountAdder(props) {\n\n    const { onCurrencyChange, onAmountChange, currency, amount, isAddDisabled, onAdd } = props;\n\n    return (\n        <section className='amount-adder-container'>\n            <div className=\"amount-adder\">\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                    onChange={onCurrencyChange}\n                    value={currency} />\n                <InputBox\n                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                    value={amount}\n                    onChange={onAmountChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n        </section>\n    );\n}\n\nexport default AmountAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../../store/actions';\n\nimport './CreateAccount.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport Keys from '../infos/Keys';\nimport Balances from '../infos/Balances';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport AmountAdder from '../adders/AmountAdder';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_CREATE_ACCOUNT } from '../../text/mode';\nimport { isAmountValid, isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\nimport AlertModal from '../modals/AlertModal';\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            isModalOpen: false,\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n            const account = this.props.account;\n\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const createAccountsFact = generator.createCreateAccountsFact(\n                account.address,\n                [generator.createCreateAccountsItem(\n                    keys, amounts\n                )]\n            );\n\n            const createAccounts = generator.createOperation(createAccountsFact, \"\");\n            createAccounts.addSign(account.privateKey);\n\n            const created = createAccounts.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && (this.state.keys.length > 0 || this.state.amounts.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"ca-container\">\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <Balances title=\"CURRENT BALANCE LIST\" labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} labeled={true} />\n                        <KeyAdder\n                            onKeyChange={(e) => this.onChangePub(e)}\n                            onWeightChange={(e) => this.onChangeWeight(e)}\n                            onThresChange={(e) => this.onChangeThres(e)}\n                            onAdd={() => this.addKey()}\n                            isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                            pub={this.state.publicKey} weight={this.state.weight} thres={this.state.threshold}\n                            useThres={true} />\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <Balances title=\"AMOUNT LIST\" balances={this.state.amounts} labeled={true} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_CREATE_ACCOUNT, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(CreateAccount));","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ExtraAdder.scss';\n\nfunction ExtraAdder({ thres, currency, onCurrencyChange, onThresChange }) {\n\n    return (\n        <section className='extra-adder-container'>\n            <div className=\"thres-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n            <div className=\"currency-adder\">\n                <p>CURRENCY ID:</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                    value={currency}\n                    onChange={onCurrencyChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ExtraAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './UpdateKey.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\nimport Keys from '../infos/Keys';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport ExtraAdder from '../adders/ExtraAdder';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { setOperation } from '../../store/actions';\n\nimport { OPER_UPDATE_KEY } from '../../text/mode';\nimport AlertModal from '../modals/AlertModal';\nimport { isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false });\n    }\n\n    onClick() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n            const account = this.props.account;\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold.trim())\n            );\n\n            const keyUpdaterFact = generator.createKeyUpdaterFact(\n                account.address, this.state.currency.trim(), keys\n            );\n\n            const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n            keyUpdater.addSign(account.privateKey);\n\n            const created = keyUpdater.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"uk-container\">\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <Keys title='CURRENT KEY LIST' keys={account.publicKeys} />\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <Keys title='NEW KEY LIST' keys={this.state.keys} />\n                        <section className='uk-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ExtraAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                                thres={this.state.threshold} currency={this.state.currency} />\n                        </section>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_UPDATE_KEY, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(UpdateKey));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Transfer.scss';\n\nimport InputBox from '../InputBox';\nimport AmountAdder from '../adders/AmountAdder';\nimport Balances from '../infos/Balances';\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_TRANSFER } from '../../text/mode';\nimport { setOperation } from '../../store/actions';\nimport AlertModal from '../modals/AlertModal';\nimport { isAddressValid, isAmountValid, isCurrencyValid, isDuplicate } from '../../lib/Validation';\n\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isAddressValid(this.state.address.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', 'receiver address 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n            const account = this.props.account;\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const transfersFact = generator.createTransfersFact(\n                account.address,\n                [generator.createTransfersItem(\n                    this.state.address.trim(), amounts\n                )]\n            );\n\n            const transfers = generator.createOperation(transfersFact, \"\");\n            transfers.addSign(account.privateKey);\n\n            const created = transfers.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"tf-container\">\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <Balances title='CURRENT BALANCE LIST' labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"tf-amounts\">\n                        <Balances title='AMOUNT LIST' labeled={true} balances={this.state.amounts} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                        <div className='tf-address-adder'>\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </div>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_TRANSFER, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(Transfer));","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/operations/CreateAccount';\nimport UpdateKey from '../components/operations/UpdateKey';\nimport Transfer from '../components/operations/Transfer';\nimport { connect } from 'react-redux';\n\nimport { isStateValid } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!isStateValid(this.props)\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n\n            this.state = {\n                isRedirect: true,\n                operation: undefined\n            };\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    renderOperation() {\n        switch (this.state.operation) {\n            case OPER_CREATE_ACCOUNT:\n                return <CreateAccount account={this.props.account} />;\n            case OPER_UPDATE_KEY:\n                return <UpdateKey account={this.props.account} />;\n            case OPER_TRANSFER:\n                return <Transfer account={this.props.account} />;\n            default:\n                return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n    }\n\n    render() {\n        if (!this.props.isLogin) {\n            return <Redirect to='/login' />;\n        }\n        if (this.state.isRedirect) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n        \n        return (\n            <div className=\"oper-container\">\n                {this.renderOperation()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\n\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nimport { TYPE_CREATE_ACCOUNT, TYPE_UPDATE_KEY, TYPE_TRANSFER } from '../text/mode';\nimport { isDuplicate, isOperation } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\nimport AlertModal from '../components/modals/AlertModal';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nconst getOperationFromType = (type) => {\n    switch (type) {\n        case TYPE_CREATE_ACCOUNT:\n            return OPER_CREATE_ACCOUNT;\n        case TYPE_UPDATE_KEY:\n            return OPER_UPDATE_KEY;\n        case TYPE_TRANSFER:\n            return OPER_TRANSFER;\n        default:\n            return OPER_DEFAULT;\n    }\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n        \n        this.props.setJson(OPER_DEFAULT, null);\n\n        this.state = {\n            isRedirect: false,\n\n            isModalOpen: false,\n            isJsonOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {!(this.props.operation === OPER_DEFAULT)\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                            {JSON.stringify(this.props.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const json = this.props.json;\n            try {\n                const parsed = JSON.parse(reader.result);\n                if (!isOperation(parsed)) {\n                    this.openAlert('파일을 불러올 수 없습니다 :(', '[memo, hash, _hint, fact, fact_signs]를 포함한 JSON 파일을 사용해 주세요.');\n                }\n                else {\n                    const operation = getOperationFromType(parsed._hint);\n                    this.props.setJson(operation, parsed);\n                }\n            }\n            catch (e) {\n                if (json) {\n                    const operation = getOperationFromType(json._hint);\n                    this.props.setJson(operation, json);\n                }\n                this.openAlert('파일을 불러올 수 없습니다 :(', 'JSON 형식의 파일을 사용해 주세요.');\n            }\n        };\n        reader.readAsText(file, \"utf-8\");\n\n    }\n\n    onClickSend() {\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n        let target = this.props.json;\n\n        if (!isOperation(target)) {\n            return;\n        }\n\n        if(isDuplicate(this.props.account.publicKey, this.props.json.fact_signs.map(x => x.signer))){\n            this.openAlert('서명 추가 실패 :(', '이미 서명 된 작업입니다.');\n            return;\n        }\n\n        const signer = new Signer(process.env.REACT_APP_NETWORK_ID, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.openAlert('서명 추가 완료 :D', '작업에 서명을 추가하였습니다.');\n        }\n        catch (e) {\n            const operation = getOperationFromType(target._hint);\n            this.props.setJson(operation, target);\n            this.openAlert('서명 추가 실패 :(', '서명을 추가하는 도중 오류가 발생하였습니다.');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n\n        if(this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"sign-container\">\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.props.json && Object.prototype.hasOwnProperty.call(this.props.json, 'fact')\n                                        ? this.props.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.props.json ? this.props.json._hint : 'NONE'}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <p id='body'>{this.props.json ? (\n                                this.props.json.fact_signs.map(x => x).length !== 0\n                                    ? (\n                                        this.props.json.fact_signs.map(x => x).length === 1\n                                            ? `${this.props.json.fact_signs.map(x => x).length} signature`\n                                            : `${this.props.json.fact_signs.map(x => x).length} signatures`\n                                    )\n                                    : 'No signature'\n                            ) : 'No signature'}</p>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.props.json\n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                        ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n\n    operation: state.operation.operation,\n    json: state.operation.json,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sign));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" to='/sign'>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout, clearHistory, clearQueue } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n        this.props.clearHistory();\n        this.props.clearQueue();\n    }\n    \n    render() {\n        if(!this.props.isLogin) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n    clearHistory: () => dispatch(clearHistory()),\n    clearQueue: () => dispatch(clearQueue())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './LogoutConfirm.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions';\n\nclass LogoutConfirm extends React.Component {\n\n    onLogout() {\n        this.props.signOut();\n        this.props.onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            <div className={isOpen ? 'logout-openModal logout-modal' : 'logout-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Wallet Closed\n                            <button className=\"close\" onClick={() => this.onLogout()}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='logout-exp'>지갑이 닫힙니다. 변경된 비밀키로 지갑을 다시 열어주세요.</p>\n                            <p id='logout-exp'>* 작업 실패 시에는 기존 비밀키를 사용해야 합니다.</p>\n                            <span>\n                                <p className=\"logout-modal-button\" id=\"confirm\" onClick={() => this.onLogout()}>확인</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(LogoutConfirm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { enqueueOperation, setOperation, setResponse } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\nimport LogoutConfirm from '../components/modals/LogoutConfirm';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst address = (keyHash) => {\n    return (\n        <li key={keyHash}>\n            <p onClick={() => onCopy(keyHash)}>{keyHash}</p>\n        </li>\n    )\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isSignOut = this.props.operation === OPER_UPDATE_KEY;\n\n        if (!isSignOut && this.props.isBroadcast) {\n            this.props.addJob({\n                operation: this.props.operation,\n                hash: this.props.json.fact.hash,\n                broadcastedAt: new Date().toISOString(),\n            });\n        }\n\n        this.state = {\n            isRedirect: false,\n            isModalOpen: isSignOut,\n            isSignOut,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    renderResponse() {\n        const { res, status, operation, data } = this.props;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        {\n                            operation === OPER_UPDATE_KEY\n                                ? <h1>KEY UPDATE SUCCESS~ :D</h1>\n                                : <h1>BROADCAST SUCCESS~ :D</h1>\n                        }\n                        <div>\n                            {operation === OPER_CREATE_ACCOUNT\n                                ? (\n                                    <section>\n                                        <h2>CREATED ADDRESS LIST</h2>\n                                        <ul>\n                                            {data.map(x => address(x))}\n                                        </ul>\n                                        <p>지갑 생성 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                ) : false\n                            }\n                            {operation === OPER_TRANSFER\n                                ? (\n                                    <section>\n                                        <p>송금 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                )\n                                : false\n                            }\n                        </div>\n                    </section>\n                )\n            case 400:\n            case 404:\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>{Object.prototype.hasOwnProperty.call(res, 'title') ? res.title : \"응답을 받지 못했습니다.\"}</p>\n                    </section>\n                );\n        }\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            this.props.clearJson();\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"res-container\">\n                {this.renderResponse()}\n                <LogoutConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isStateIn: state.operation.isStateIn,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearJson: () => dispatch(setOperation(OPER_DEFAULT, {})),\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n    addJob: (hash) => dispatch(enqueueOperation(hash))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Response));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './UpdateKeyLoad.scss';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../store/actions';\n\nclass UpdateKeyLoad extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: !this.props.isBroadcast,\n            counter: 0,\n        }\n    }\n\n    getResponse() {\n        if (this.state.counter < 15) {\n            const { data, res, isBroadcast } = this.props;\n\n            const getResult = async (_hash, _res, isBroadcast) => {\n                if(!isBroadcast) {\n                    this.setState({\n                        isRedirect: true\n                    })\n\n                    return;\n                }\n\n                return await axios.get(process.env.REACT_APP_API_SEARCH_FACT + _hash)\n                    .then(\n                        response => {\n                            if (response.data._embedded.in_state) {\n                                this.props.setResult(true, true, _res, 200, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                            else {\n                                this.props.setResult(true, false, {\n                                    title: response.data._embedded.reason.msg\n                                }, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                })\n                            }\n                        }\n                    )\n                    .catch(\n                        e => {\n                            \n                            if (e.response.status === 404 || e.response.status === 400) {\n                                this.setState({\n                                    counter: this.state.counter + 1\n                                })\n                            }\n                            else {\n                                this.props.setResult(true, false, e.response.data, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                        }\n                    )\n            }\n\n            setTimeout((hs, rs, broad) => {\n                getResult(hs, rs, broad);\n            }, 5000, data, res, isBroadcast);\n\n            return () => this.getResponse();\n        }\n        else {\n            this.props.setResult(true, false, {\n                title: \"Too long time to stay response. Maybe mitum failed to process your operation. :(\"\n            }, 400, this.props.data);\n            this.setState({\n                isRedirect: true,\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to='/response' />;\n        }\n\n        return (\n            <div className=\"load-container\">\n                <section className=\"load-detail\">\n                    <h1>Loading...</h1>\n                    <p>{\"키 업데이트 성공 여부를 조회 중입니다. 잠시만 기다려주세요.\"}</p>\n                    <p>{`REQUEST COUNT: ${this.state.counter}`}</p>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKeyLoad));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './SubNavigation.scss';\n\nvar isClose = false;\n\nclass SubNavigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0,\n            isChecked: false\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    onCheckOut() {\n        this.setState({\n            isChecked: false\n        });\n    }\n\n    onCheck() {\n        this.setState({\n            isChecked: !this.state.isChecked\n        })\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 20) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"sub-nav\">\n                {this.state.rand ? this.check() : false}\n                <input className='burger-check' id=\"burger-check\" type=\"checkbox\" checked={this.state.isChecked} />\n                <label className=\"burger-icon\" for=\"burger-check\"\n                    onClick={() => this.onCheck()}>\n                    <span className=\"burger-sticks\"></span>\n                </label>\n                <Link className=\"sub-nav-title\" to=\"/\"\n                    onClick={() => this.onCheckOut()}>\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <div className='sub-nav-menu'>\n                    <div className='menu'>\n                        <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>OPEN WALLET</p>\n                        </Link>\n                        {isLogin\n                            ? (\n                                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to='/sign'\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>SIGN OPERATION</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/key-generate\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GENERATE KEYPAIR</p>\n                        </Link>\n                        {account && account.restoreKey\n                            ? (\n                                <Link className=\"main\" to=\"/res-key-generate\"\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>GENERATE RESTORE KEY</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/help\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>HELP</p>\n                        </Link>\n                        {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(SubNavigation);","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\nimport UpdateKeyLoad from './views/UpdateKeyLoad';\nimport SubNavigation from './components/SubNavigation';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <SubNavigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/response\" component={Response} />\n          <Route path='/loading' component={UpdateKeyLoad} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst VERSION = require('./constant').VERSION;\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type) {\n        if (type == 'unknown') {\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else {\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w) {\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold) {\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    get address() {\n        return this.hash.hash + ':' + Xhint.MC_ADDRESS + '-' + VERSION;\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n        \n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n\n        const _keys = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch (type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', { canonical: true }).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length - 1));\n\n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n\n        const sig = ec.sign(_msg, sk, 'hex', { canonical: true }).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4 + rlen);\n        const slen = sig[5 + rlen];\n        const s = sig.slice(6 + rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen + 4, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n\n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n\n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if (_type == 'btc') {\n        return _btckp();\n    }\n    else if (_type == 'ether') {\n        return _ethkp();\n    }\n    else if (_type == 'stellar') {\n        return _stlkp();\n    }\n    else {\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if (_type == '') {\n        if (_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch (type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}