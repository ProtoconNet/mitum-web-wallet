{"version":3,"sources":["../../mitum-js-util/lib/util.js","../../mitum-js-util/lib/hint.js","../../mitum-js-util/lib/seal.js","../../mitum-js-util/lib/sign.js","../../mitum-js-util/index.js","../../mitum-js-util/lib/operation.js","../../mitum-js-util/lib/constant.js","lib/Account.js","store/actions/index.js","store/reducers/LoginReducer.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","views/Login.js","components/buttons/SelectButton.js","views/Wallet.js","views/KeyGen.js","views/ResKeyGen.js","views/Help.js","components/modals/OperationConfirm.js","components/CreateAccount.js","components/UpdateKey.js","components/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","components/Footer.js","views/Response.js","App.js","reportWebVitals.js","index.js","../../mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","ISOToUTC","iso","t","indexOf","z","substring","module","exports","_hint","type","VERSION","parseHinted","hinted","idx","parsed","hintless","hint","getTypeFromHint","lastIndexOf","getTimeStamp","Date","dateToUTC","date","toISOString","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","toKeypair","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","bkeys","bamounts","item","breceiver","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","_VERSION","Account","priv","data","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","LOGIN","LOGOUT","login","account","restoreKey","initialState","isLogin","rootReducer","combineReducers","state","action","actions","store","createStore","Home","props","isRedirect","setState","className","to","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","size","name","autoComplete","onChange","placeholder","useCopy","copy","alert","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","RestoreKeyLoginBox","MODE_PRIV_KEY","MODE_RES_KEY","getAccountInformation","a","axios","get","process","Login","renderForm","bind","reloadAccount","mode","isPriv","isActive","pubKey","then","res","pubKeys","signIn","catch","radio","document","querySelector","checked","withRouter","connect","dispatch","SelectButton","PATH_LOGIN","PATH_OPER","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","SHOW_PRIVATE","SHOW_RESTORE","onCopy","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isDetailVisible","isPrivVisible","isResVisible","redirect","operation","pathname","renderRedirect","refresh","ref","onShowClick","bal","onMoreClick","onSelect","KEY_ETHER","KEY_STELLAR","KeyGen","privKey","publicKey","btc","pub","ether","stellar","Error","version","getKey","ResKeyGen","Help","broadcast","Object","prototype","hasOwnProperty","call","post","OperationConfirm","status","response","json","request","isOpen","onClose","title","filename","download","id","href","rel","onSend","file","File","URL","createObjectURL","CreateAccount","scrollToInput","createdRef","created","titleRef","isModalOpen","generator","createKeys","formatKey","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","k","onChangeThres","onChangePub","onChangeWeight","addKey","onChangeCurrency","onChangeAmount","addAmount","closeModal","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","location","preStyle","padding","margin","overflow","whiteSpace","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","sigs","files","reader","FileReader","onload","result","readAsText","signOperation","sig","textAlign","openJSON","jsonView","importJSON","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","Footer","Response","renderResponse","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","y","BaseKey","w","karr","sortedkeys","sort","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"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","file":"static/js/main.5d07d72c.chunk.js","sourcesContent":["const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst { Uint64BE } = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if (this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2) ? 1 : Math.ceil((Math.log(this.num) / Math.log(2)) / 8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if (this.byteSize() > 4) {\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4 - this.byteSize());\n\n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n\n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf) {\n        const _buf = Buffer.from(buf);\n        for (var i = 0; i < _buf.length / 2; i++) {\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if (hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx + 1);\n\n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    return ISOToUTC(date.toISOString());\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {string} iso - iso string to change\n * @return {string} - UTC-format date string\n */\nconst ISOToUTC = (iso) => {\n    const t = iso.indexOf('T');\n    const z = iso.indexOf('Z');\n\n    return iso.substring(0, t)\n        .concat(\n            ' ',\n            iso.substring(t + 1, z),\n            ' ',\n            '+0000',\n            ' UTC'\n        );\n};\n\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for (var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\";\nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for (var i = 0; i < ks.length; i++) {\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for (var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight) {\n        if (key.indexOf(':') === -1) {\n            throw '[ERROR] Invalid key';\n        }\n        if (typeof (weight) !== 'number') {\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid) {\n        if (typeof (big) !== 'number') {\n            throw '[ERROR] Invalid amount';\n        }\n        if (cid.length < 1) {\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold) {\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts) {\n        return _toAmounts(amts);\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items) {\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys) {\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items) {\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo) {\n        let _type;\n\n        if (fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if (fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if (fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers) {\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for (var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n\n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for (var i = 0; i < opers.length; i++) {\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if (error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for (var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof (f_oper) === typeof (\"\") ? JSON.parse(fs.readFileSync(f_oper))\n            : (typeof (f_oper) === typeof ({}) ? f_oper : undefined);\n        if (!before) {\n            return undefined;\n        }\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }\n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch (Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n\n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n\n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n\n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {\n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if (this.fact_signs.length < 1) {\n            throw '[ERROR] Empty fact sign!'\n        }\n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n\n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */\n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for (var i = 0; i < this.fact_signs.length; i++) {\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    Operation,\n};\n","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","class Account {\n    constructor(addr, priv, data) {\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n    }\n}\n\nexport default Account;","import Account from '../../lib/Account';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function login(address, privateKey, data) {\n    const account = new Account(address, privateKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                { this.state.isRedirect ? <Redirect to=\"/login\" /> : false }\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"inherit\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SmallButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\nimport copy from 'copy-to-clipboard';\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <div className=\"confirm-button-container \">\n                <button className=\"confirm-button\"\n                    style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                    onClick={this.props.onClick}\n                    disabled={this.props.disabled ? true : false}>\n                    {this.props.children}\n                </button>\n            </div>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"priavate key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => this.props.onLogin(this.state.account, this.state.privateKey)}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { login } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\n\nconst MODE_PRIV_KEY = 'MODE_PRIV_KEY';\nconst MODE_RES_KEY = 'MODE_RES_KEY';\n\nconst getAccountInformation = async (account) => {\n    try {\n        return await axios.get(process.env.REACT_APP_API_ACCOUNT + account);\n    } catch (e) {\n        alert(`Could not sign in\\n${account}`);\n    }\n}\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderForm = this.renderForm.bind(this);\n        this.reloadAccount = this.reloadAccount.bind(this);\n\n        this.state = {\n            mode: MODE_PRIV_KEY,\n            isPriv: true,\n            isActive: false,\n        }\n    }\n\n    onLogin(addr, priv) {\n        let pubKey;\n\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            alert('Invalid private key');\n            return;\n        }\n\n        getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, res.data);\n                            return;\n                        }\n                    }\n                    alert(`Could not sign in\\naccount: ${addr}`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    alert(`Could not sign in\\naccount: ${addr}`);\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case MODE_PRIV_KEY:\n                return <PrivateKeyLoginBox onLogin={(addr, priv) => this.onLogin(addr, priv)} />\n            case MODE_RES_KEY:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox onLogin={(addr, priv) => this.onLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    reloadAccount() {\n        this.onLogin(this.props.account.address, this.props.account.privateKey);\n    }\n\n    render() {\n        if (this.props.isLogin) {\n            this.reloadAccount();\n        }\n\n        return (\n            <div className=\"login-container\">\n                <h1>OPEN WALLET</h1>\n                {this.props.isLogin ? <Redirect to={`/wallet/${this.props.account.address}`} /> : false}\n                <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={MODE_PRIV_KEY} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Private Key</div>\n                    </label>\n\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={MODE_RES_KEY} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Restore Key</div>\n                    </label>\n                </div>\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport { connect } from 'react-redux';\nimport { login } from '../store/actions';\n\nconst PATH_LOGIN = 'path-login';\n// const PATH_SIGN = 'path-sign';\nconst PATH_OPER = 'path-operation';\n\nconst OPER_CREATE_ACCOUNT = 'oper-create-account';\nconst OPER_UPDATE_KEY = 'oper-update-key';\nconst OPER_TRANSFER = 'oper-transfer';\n\nconst SHOW_PRIVATE = 'show-private';\nconst SHOW_RESTORE = 'show-restore';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <span className=\"currency\">{bal.currency}</span>\n            <span className=\"amount\">{bal.amount}</span>\n        </li>\n    );\n}\n\nconst publicKey = (key) => {\n    return (\n        <li key={key.key}\n            onClick={() => onCopy(key.key)}>\n            {key.key}\n        </li>\n    )\n}\n\nconst key = (key) => {\n    if (!key) {\n        return false;\n    }\n    return (\n        <p onClick={() => onCopy(key)}>\n            {key}\n        </p>\n    );\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isDetailVisible: false,\n            isPrivVisible: false,\n            isResVisible: false,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PATH_LOGIN,\n            operation: undefined\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === OPER_CREATE_ACCOUNT \n                || oper === OPER_UPDATE_KEY\n                || oper === OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: PATH_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    renderRedirect() {\n        if (!this.props.account || !this.props.account.accountType\n            || !this.props.account.publicKeys || !this.props.account.balances\n            || !this.props.account.privateKey) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (!this.state.isRedirect) {\n            return false;\n        }\n\n        switch (this.state.redirect) {\n            case PATH_OPER:\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            case PATH_LOGIN:\n                return <Redirect to='/login' />\n            default: return false;\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: PATH_LOGIN\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"wallet-container\">\n                {this.renderRedirect()}\n                <span className=\"wallet-refresh\" >\n                    <p onClick={() => this.refresh()}>\n                        ⟳\n                    </p>\n                </span>\n                <div className=\"wallet-ref\" ref={this.walletRef}></div>\n                <h1>ACCOUNT INFO</h1>\n                <div className=\"wallet-info\">\n                    {this.state.isDetailVisible\n                        ? false\n                        : (\n                            <span className=\"wallet-info-account\">\n                                <h2>{\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\")}</h2>\n                                <p onClick={() => onCopy(this.props.account.address)}>{this.props.account.address}</p>\n                            </span>\n                        )\n                    }\n                    <span className=\"wallet-info-detail\">\n                        {this.state.isDetailVisible\n                            ? (\n                                <span className=\"wallet-more-detail\"\n                                    style={{ display: this.state.isDetailVisible ? \"inherit\" : \"none\" }}>\n                                    <div>\n                                        <div className=\"wallet-pub-key\">\n                                            <h2>PUBLIC KEY</h2>\n                                            <ul>\n                                                {this.props.account.publicKeys ? this.props.account.publicKeys.map(x => publicKey(x)) : false}\n                                            </ul>\n                                        </div>\n                                        <div className=\"wallet-priv-key\">\n                                            <h2>PRIVATE KEY</h2>\n                                            {this.state.isPrivVisible ? key(this.props.account.privateKey) : false}\n                                            <label onClick={() => this.onShowClick(SHOW_PRIVATE)}>\n                                                {this.state.isPrivVisible ? \"- HIDE -\" : \"! SHOW !\"}\n                                            </label>\n                                        </div>\n                                        {this.props.account && this.props.account.restoreKey\n                                            ? (\n                                                <div className=\"wallet-res-key\">\n                                                    <h2>RESTORE KEY</h2>\n                                                    {this.state.isResVisible ? key(this.props.account.restoreKey) : false}\n                                                    <label onClick={() => this.onShowClick(SHOW_RESTORE)}>\n                                                        {this.state.isResVisible ? \"- HIDE -\" : \"! SHOW !\"}\n                                                    </label>\n                                                </div>\n                                            )\n                                            : false\n                                        }\n                                    </div>\n                                </span>\n                            )\n                            : (\n                                <span className=\"wallet-amount\">\n                                    <h2>BALANCE</h2>\n                                    <ul>\n                                        {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                                    </ul>\n                                </span>\n                            )\n                        }\n                        <span className=\"wallet-more\"\n                            onClick={() => this.onMoreClick()}>\n                            <section>\n                                <p>{this.state.isDetailVisible ? \"BACK\" : \"MORE\"}</p>\n                            </section>\n                        </span>\n                    </span>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n            </div>\n        );\n    } s\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login({ address, privateKey, data })),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { version, key } from \"../text/hint.json\";\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n    state = {\n        privKey: \"\",\n        pubKey: \"\",\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        let privateKey = keypair.privKey.key + ':';\n        let publicKey = keypair.pubKey + ':';\n\n        switch (_type) {\n            case KEY_BTC:\n                privateKey += key.btc.priv;\n                publicKey += key.btc.pub;\n                break;\n            case KEY_ETHER:\n                privateKey += key.ether.priv;\n                publicKey += key.ether.pub;\n                break;\n            case KEY_STELLAR:\n                privateKey += key.stellar.priv;\n                publicKey += key.stellar.pub;\n                break;\n            default: throw new Error(\"Invalid key type\");\n        }\n\n        privateKey += '-' + version;\n        publicKey += '-' + version;\n\n        this.setState({\n            privKey: privateKey,\n            pubKey: publicKey\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","import React from 'react';\nimport './Help.scss';\n\nclass Help extends React.Component {\n    render() {\n        return (\n            <div className=\"help-container\">\n                <h1>Help</h1>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React from 'react';\nimport axios from 'axios';\nimport \"./OperationConfirm.scss\";\nimport { Redirect } from 'react-router-dom';\n\nconst broadcast = async (operation) => {\n    if (!operation || !Object.prototype.hasOwnProperty.call(operation, 'hash') || !Object.prototype.hasOwnProperty.call(operation, 'memo')\n        || !Object.prototype.hasOwnProperty.call(operation, 'fact') || !Object.prototype.hasOwnProperty.call(operation, 'fact_signs')\n        || !operation.hash || !operation.fact || !operation.fact_signs) {\n        return undefined;\n    }\n\n    return await axios.post(process.env.REACT_APP_API_BROADCAST, operation);\n}\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false,\n            status: undefined,\n            response: undefined\n        }\n    }\n\n    onSend(json) {\n        broadcast(json).then(\n            res => {\n                this.setState({\n                    isRedirect: true,\n                    status: res.request.status,\n                    response: res.data\n                });\n            }\n        ).catch(e => {\n            this.setState({\n                isRedirect: true,\n                status: e.response.status,\n                response: e.response.data\n            })\n            alert('Could not send operation');\n        });\n    }\n\n    render() {\n        const { isOpen, onClose, title, json, filename, download } = this.props;\n        return (\n            <div className={isOpen ? 'openModal modal' : 'modal'}>\n                {this.state.isRedirect\n                    ? <Redirect to={{\n                        pathname: '/response',\n                        state: {\n                            res: this.state.response,\n                            status: this.state.status\n                        }\n                    }} />\n                    : false}\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {title}\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p>You can't rollback the request after the confirmation.</p>\n                            <span>\n                                <p className=\"modal-button\" id=\"no\" onClick={onClose}>{\"no! :(\"}</p>\n                                <a className=\"modal-button\" id=\"no\" target=\"_blank\" download={`${filename}.json`}\n                                    href={download} rel=\"noreferrer\">\n                                    {\"no! Just download the json file. :[\"}\n                                </a>\n                                <p className=\"modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"yes! :)\"}</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default OperationConfirm;","import React, { createRef } from 'react';\nimport './CreateAccount.scss';\n\nimport ConfirmButton from './buttons/ConfirmButton';\nimport InputBox from './InputBox';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\nimport SmallButton from './buttons/SmallButton';\nimport OperationConfirm from './modals/OperationConfirm';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <p className=\"currency\">{amount.currency}</p>\n            <p className=\"amount\">{amount.amount}</p>\n        </li>\n    );\n}\n\nconst key = (k) => {\n    return (\n        <li key={k}>\n            <p className=\"key\">{k.key}</p>\n            <p className=\"weight\">{k.weight}</p>\n        </li>\n    );\n}\n\nconst download = (json) => {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('Could not get url');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n        const account = this.props.account;\n\n        const keys = generator.createKeys(\n            this.state.keys.map(x =>\n                generator.formatKey(x.key, parseInt(x.weight))),\n            parseInt(this.state.threshold)\n        );\n\n        const amounts = generator.createAmounts(\n            this.state.amounts.map(x =>\n                generator.formatAmount(parseInt(x.amount), x.currency))\n        );\n\n        const createAccountsFact = generator.createCreateAccountsFact(\n            account.address,\n            [generator.createCreateAccountsItem(\n                keys, amounts\n            )]\n        );\n\n        const createAccounts = generator.createOperation(createAccountsFact, \"\");\n        createAccounts.addSign(account.privateKey);\n\n        const created = createAccounts.dict();\n\n        this.setState({\n            created: created,\n            isModalOpen: true,\n            download: download(created),\n            filename: created.hash\n        });\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && !this.state.created && (this.state.keys.length > 0 || this.state.amount.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"ca-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <p>CURRENT BALANCES</p>\n                    <ul>\n                        {account.balances ? account.balances.map(x => balance(x)) : false}\n                    </ul>\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <p>For each section, fill it with at least one item. This page is for creating account.</p>\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <p id=\"head\">KEYS</p>\n                        <p id=\"exp\">You need at least one pair of mitum-style public key and weight value. The total weight of all weights must be equal to or more than threshold.</p>\n                        <div id=\"label\">\n                            <p className='key'>KEY</p>\n                            <p className='weight'>WEIGHT</p>\n                        </div>\n                        <ul>\n                            {this.state.keys.length < 1\n                                ? (\n                                    <li key=\"empty\" >\n                                        <p className='key'>-</p>\n                                        <p className='weight'>-</p>\n                                    </li>\n                                ) : false}\n                            {this.state.keys.length > 0 ? this.state.keys.map(x => key(x)) : false}\n                        </ul>\n                        <div id=\"thres\">\n                            <p id=\"head\">THRESHOLD</p>\n                            <p id=\"body\">{this.state.threshold ? this.state.threshold : \"-\"}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <p id=\"head\">AMOUNTS</p>\n                        <p id=\"exp\">You need at least one pair of valid currency ID and amount value. They will be initial balance of new account.</p>\n                        <div id=\"label\">\n                            <p className='currency'>CURRENCY ID</p>\n                            <p className='amount'>AMOUNT</p>\n                        </div>\n                        <ul>\n                            {this.state.amounts.length < 1\n                                ? (\n                                    <li key=\"empty\">\n                                        <p className='currency'>-</p>\n                                        <p className='amount'>-</p>\n                                    </li>\n                                ) : false}\n                            {this.state.amounts.length > 0 ? this.state.amounts.map(x => balance(x)) : false}\n                        </ul>\n                    </div>\n\n                    <p id='ca-input-exp'>Put your input here. :)</p>\n                    <div className=\"ca-adder\">\n                        <span className=\"ca-thres-adder\">\n                            <p>THRESHOLD:</p>\n                            <InputBox className=\"ca-thres-input\"\n                                size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeThres(e)} />\n                        </span>\n\n                        <span className=\"ca-key-adder\">\n                            <p>ADD KEY</p>\n                            <div id=\"adder\">\n                                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                                    value={this.state.publicKey}\n                                    onChange={(e) => this.onChangePub(e)} />\n                                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                                    value={this.state.weight}\n                                    onChange={(e) => this.onChangeWeight(e)} />\n                                <SmallButton\n                                    visible={true}\n                                    disabled={!(this.state.publicKey && this.state.weight) ? true : false}\n                                    onClick={() => this.addKey()}>ADD</SmallButton>\n                            </div>\n                        </span>\n\n                        <span className=\"ca-amount-adder\">\n                            <p>ADD AMOUNT</p>\n                            <div id=\"adder\">\n                                <InputBox className=\"ca-currency-input\"\n                                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                                    onChange={(e) => this.onChangeCurrency(e)}\n                                    value={this.state.currency} />\n                                <InputBox className=\"ca-amount-input\"\n                                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                                    value={this.state.amount}\n                                    onChange={(e) => this.onChangeAmount(e)} />\n                                <SmallButton\n                                    visible={true}\n                                    disabled={!(this.state.currency && this.state.amount) ? true : false}\n                                    onClick={() => this.addAmount()}>ADD</SmallButton>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()}\n                    title=\"Are you sure?\"\n                    json={this.state.created}\n                    filename={this.state.filename}\n                    download={this.state.download} />\n            </div>\n        );\n    }\n}\nexport default CreateAccount;","import React, { createRef } from 'react';\nimport './UpdateKey.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\nimport SmallButton from './buttons/SmallButton';\nimport OperationConfirm from './modals/OperationConfirm';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <p className=\"currency\">{amount.currency}</p>\n            <p className=\"amount\">{amount.amount}</p>\n        </li>\n    );\n}\n\nconst key = (k) => {\n    return (\n        <li key={k}>\n            <p className=\"key\">{k.key}</p>\n            <p className=\"weight\">{k.weight}</p>\n        </li>\n    );\n}\n\nconst download = (json) => {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('Could not get url');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n        const account = this.props.account;\n        const keys = generator.createKeys(\n            this.state.keys.map(x =>\n                generator.formatKey(x.key, parseInt(x.weight))),\n            parseInt(this.state.threshold)\n        );\n\n        const keyUpdaterFact = generator.createKeyUpdaterFact(\n            account.address, this.state.currency, keys\n        );\n\n        const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n        keyUpdater.addSign(account.privateKey);\n\n        const created = keyUpdater.dict();\n\n        this.setState({\n            created: created,\n            isModalOpen: true,\n            download: download(created),\n            filename: created.hash\n        });\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && !this.state.created && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"uk-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <div id=\"address\">\n                        <p id=\"head\">ADDRESS</p>\n                        <p id=\"body\">{account.address}</p>\n                    </div>\n                    <div id=\"pub\">\n                        <p>CURRENT PUBLIC KEYS</p>\n                        <ul>\n                            {account.publicKeys ? account.publicKeys.map(x => key(x)) : false}\n                        </ul>\n                    </div>\n                    <div id=\"balance\">\n                        <p>CURRENT BALANCES</p>\n                        <ul>\n                            {account.balances ? account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <p>Fill the below section with new keys. Additionally, You must give currency ID for paying fees. This page is for updating keys of the account.</p>\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <p id=\"head\">NEW KEYS</p>\n                        <p id=\"exp\">\n                            You need at least one pair of mitum-style public key and weight value. The total weight of all weights must be equal to or more than threshold.\n                            Old keys will be replaced with new keys but there isn't any change with your account address.\n                        </p>\n                        <div id=\"label\">\n                            <p className='key'>KEY</p>\n                            <p className='weight'>WEIGHT</p>\n                        </div>\n                        <ul>\n                            {this.state.keys.length < 1\n                                ? (\n                                    <li key=\"empty\" >\n                                        <p className='key'>-</p>\n                                        <p className='weight'>-</p>\n                                    </li>\n                                ) : false}\n                            {this.state.keys.length > 0 ? this.state.keys.map(x => key(x)) : false}\n                        </ul>\n                        <div id=\"thres\">\n                            <p id=\"head\">THRESHOLD</p>\n                            <p id=\"body\">{this.state.threshold ? this.state.threshold : \"-\"}</p>\n                        </div>\n                        <div id=\"currency\">\n                            <p id=\"head\">CURRENCY ID</p>\n                            <p id=\"body\">{this.state.currency ? this.state.currency : \"-\"}</p>\n                        </div>\n                    </div>\n                    <p id='uk-input-exp'>Put your input here. :)</p>\n                    <div className=\"uk-adder\">\n                        <span className=\"uk-currency-adder\">\n                            <p>CURRENCY ID:</p>\n                            <InputBox\n                                size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                                value={this.state.currency}\n                                onChange={(e) => this.onChangeCurrency(e)} />\n                        </span>\n                        <span className=\"uk-thres-adder\">\n                            <p>THRESHOLD  :</p>\n                            <InputBox\n                                size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeThres(e)} />\n                        </span>\n                        <span className=\"uk-key-adder\">\n                            <p>ADD KEY</p>\n                            <div id=\"adder\">\n                                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                                    value={this.state.publicKey}\n                                    onChange={(e) => this.onChangePub(e)} />\n                                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                                    value={this.state.weight}\n                                    onChange={(e) => this.onChangeWeight(e)} />\n                                <SmallButton\n                                    visible={true}\n                                    disabled={!(this.state.publicKey && this.state.weight) ? true : false}\n                                    onClick={() => this.addKey()}>ADD</SmallButton>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()}\n                    title=\"Are you sure?\"\n                    json={this.state.created}\n                    filename={this.state.filename}\n                    download={this.state.download} />\n            </div>\n        );\n    }\n}\nexport default UpdateKey;","import React, { createRef } from 'react';\nimport './Transfer.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\nimport SmallButton from './buttons/SmallButton';\nimport OperationConfirm from './modals/OperationConfirm';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nconst download = (json) => {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('Could not get url');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n        const account = this.props.account;\n        const amounts = generator.createAmounts(\n            this.state.amounts.map(x =>\n                generator.formatAmount(parseInt(x.amount), x.currency))\n        );\n\n        const transfersFact = generator.createTransfersFact(\n            account.address,\n            [generator.createTransfersItem(\n                this.state.address, amounts\n            )]\n        );\n\n        const transfers = generator.createOperation(transfersFact, \"\");\n        transfers.addSign(account.privateKey);\n\n        const created = transfers.dict();\n\n        this.setState({\n            created: created,\n            isModalOpen: true,\n            download: download(created),\n            filename: created.hash\n        });\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && !this.state.created && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"tf-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <p>CURRENT BALANCES</p>\n                    <ul>\n                        {account.balances ? account.balances.map(x => balance(x)) : false}\n                    </ul>\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <p>Fill the below section with pairs of currency ID and amount to transfer. This page is for transferring your currency to another account.</p>\n                    <div ref={this.createdRef} />\n                    <div id=\"address\">\n                        <p id=\"head\">TRANSFER TO</p>\n                        <p id=\"body\">{this.state.address ? this.state.address : \"-\"}</p>\n                    </div>\n                    <div className=\"tf-amounts\">\n                        <p id=\"head\">AMOUNTS</p>\n                        <p id=\"exp\">You need at least one pair of valid currency ID and amount value. Those amounts will be sent to receiver.</p>\n                        <div id=\"label\">\n                            <p className='currency'>CURRENCY ID</p>\n                            <p className='amount'>AMOUNT</p>\n                        </div>\n                        <ul>\n                            {this.state.amounts.length < 1\n                                ? (\n                                    <li key=\"empty\">\n                                        <p className='currency'>-</p>\n                                        <p className='amount'>-</p>\n                                    </li>\n                                ) : false}\n                            {this.state.amounts.length > 0 ? this.state.amounts.map(x => balance(x)) : false}\n                        </ul>\n                    </div>\n                    <p id='tf-input-exp'>Put your input here. :)</p>\n                    <div className=\"tf-adder\">\n                        <span className=\"tf-address-adder\">\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </span>\n                        <span className=\"tf-amount-adder\">\n                            <p>ADD AMOUNT</p>\n                            <div id=\"adder\">\n                                <InputBox\n                                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                                    onChange={(e) => this.onChangeCurrency(e)}\n                                    value={this.state.currency} />\n                                <InputBox\n                                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                                    value={this.state.amount}\n                                    onChange={(e) => this.onChangeAmount(e)} />\n                                <SmallButton\n                                    visible={true}\n                                    disabled={!(this.state.currency && this.state.amount) ? true : false}\n                                    onClick={() => this.addAmount()}>ADD</SmallButton>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()}\n                    title=\"Are you sure?\"\n                    json={this.state.created}\n                    filename={this.state.filename}\n                    download={this.state.download} />\n            </div>\n        );\n    }\n}\nexport default Transfer;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/CreateAccount';\nimport UpdateKey from '../components/UpdateKey';\nimport Transfer from '../components/Transfer';\nimport { connect } from 'react-redux';\n\nconst OPER_CREATE_ACCOUNT = 'oper-create-account';\nconst OPER_UPDATE_KEY = 'oper-update-key';\nconst OPER_TRANSFER = 'oper-transfer';\n\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'location') || !this.props.location\n            || !Object.prototype.hasOwnProperty.call(this.props.location, 'state') || !this.props.location.state\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true,\n                account: undefined,\n                operation: undefined\n            }\n            return;\n        }\n\n        this.state = {\n            isRedirect: this.props.isLogin ? false : true,\n            account: this.props.account,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    render() {\n        let redirect;\n        if (this.props.isLogin) {\n            redirect = `/wallet/${this.props.account.address}`;\n        }\n        else {\n            redirect = '/login';\n        }\n\n        return (\n            <div className=\"oper-container\">\n                {this.state.isRedirect ? <Redirect to={redirect} /> : false}\n                {this.state.operation === OPER_CREATE_ACCOUNT ?\n                    <CreateAccount account={this.state.account} /> : (\n                        this.state.operation === OPER_UPDATE_KEY ?\n                            <UpdateKey account={this.state.account} /> : (\n                                this.state.operation === OPER_TRANSFER ?\n                                    <Transfer account={this.state.account} /> : <Redirect to={redirect} />\n                            ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\nimport { connect } from 'react-redux';\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst download = (json) => {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('Could not get url');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nconst sig = (x) => {\n    return (\n        <li key={x}>{x}</li>\n    );\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'location') || !Object.prototype.hasOwnProperty.call(this.props.location, 'state')\n            || !this.props.location || !this.props.location.state || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true\n            }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            json: Object.prototype.hasOwnProperty.call(this.props.location.state, 'json') ? this.props.location.state.json : {},\n            sigs: [],\n            download: undefined,\n            filename: \"\",\n            type: \"\",\n\n            isModalOpen: false,\n            isJsonOpen: false\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({behavior : 'smooth'});\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {this.state.json\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.state.json, null, 4))}>\n                            {JSON.stringify(this.state.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        const json = this.state.json;\n\n        try {\n            reader.onload = () => {\n                const parsed = JSON.parse(reader.result);\n                if (!Object.prototype.hasOwnProperty.call(parsed, 'hash') || !Object.prototype.hasOwnProperty.call(parsed, 'fact')\n                    || !Object.prototype.hasOwnProperty.call(parsed, 'fact_signs') || !Object.prototype.hasOwnProperty.call(parsed, 'memo')\n                    || !parsed.hash || !parsed.fact || !parsed.fact_signs) {\n                    alert('Invalid format!\\nOnly operation json file can be imported');\n                }\n                else {\n                    this.setState({\n                        json: parsed,\n                        type: parsed._hint,\n                        download: download(parsed),\n                        filename: parsed.hash,\n                        sigs: parsed.fact_signs.map(x => x.signature)\n                    });\n                }\n            };\n            reader.readAsText(file, \"utf-8\");\n        } catch (e) {\n            this.setState({\n                json: json,\n                type: json._hint,\n                download: download(json),\n                filename: Object.prototype.hasOwnProperty.call(json, 'hash') ? json.hash : \"\",\n                sigs: Object.prototype.hasOwnProperty.call(json, 'fact_signs') ? json.fact_signs.map(x => x.signature) : []\n            });\n            alert('Invalid format!\\nOnly operation json file can be imported');\n        }\n    }\n\n    onClickSend() {\n        const target = this.state.json;\n        if (!Object.prototype.hasOwnProperty.call(target, 'hash') || !Object.prototype.hasOwnProperty.call(target, 'fact')\n            || !Object.prototype.hasOwnProperty.call(target, 'fact_signs') || !Object.prototype.hasOwnProperty.call(target, 'memo')) {\n            alert('Invalid operation!')\n            return;\n        }\n\n        if (!this.state.download) {\n            return;\n        }\n\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n\n        let target = this.state.json;\n\n        if (!Object.prototype.hasOwnProperty.call(target, 'hash') || !Object.prototype.hasOwnProperty.call(target, 'fact_signs')\n            || !Object.prototype.hasOwnProperty.call(target, 'fact') || !Object.prototype.hasOwnProperty.call(target, 'memo')) {\n            return;\n        }\n\n        const signer = new Signer(process.env.REACT_APP_NETWORK_ID, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            this.setState({\n                json: json,\n                type: json._hint,\n                download: download(json),\n                filename: json.hash,\n                sigs: json.fact_signs.map(x => x.signature)\n            });\n            alert('Success!');\n        }\n        catch (e) {\n            this.setState({\n                json: target,\n                type: Object.prototype.hasOwnProperty.call(target, '_hint') ? target._hint : \"\",\n                download: download(target),\n                filename: target.hash,\n                sigs: target.fact_signs.map(x => x.signature)\n            })\n            alert('Could not add sign to operation');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"sign-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div className=\"sign-account\">\n                    <p>{this.props.account.address}</p>\n                </div>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.state.json && Object.prototype.hasOwnProperty.call(this.state.json, 'fact')\n                                        ? this.state.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.state.type ? this.state.type : \"NONE\"}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <ul>\n                                {this.state.sigs.length > 0\n                                    ? this.state.sigs.map(x => sig(x))\n                                    : (\n                                        <li style={{textAlign: \"center\"}}>-</li>\n                                    )\n                                }\n                            </ul>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.state.json \n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                         ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()}\n                    title=\"Are you sure?\"\n                    json={this.state.json}\n                    filename={this.state.filename}\n                    download={this.state.download} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Sign);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" \n                            to={{\n                                pathname: '/sign',\n                                state: {\n                                    json: undefined\n                                }\n                            }}>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n    }\n    \n    render() {\n        return !this.props.isLogin\n            ? <Redirect to=\"/login\" />\n            : <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\n\nconst factHash = (hash) => {\n    return (\n        <li key={hash}>\n            <span onClick={() => onCopy(hash)}>{hash}</span>\n        </li>\n    );\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isRedirect =\n            Object.prototype.hasOwnProperty.call(this.props, 'location')\n            && Object.prototype.hasOwnProperty.call(this.props.location, 'state') && this.props.location.state\n            && Object.prototype.hasOwnProperty.call(this.props.location.state, 'res') && this.props.location.state.res\n            && Object.prototype.hasOwnProperty.call(this.props.location.state, 'status') && this.props.location.state.status;\n\n        this.state = {\n            isRedirect: !isRedirect\n        }\n    }\n\n    renderResponse() {\n        const isRedirect =\n        Object.prototype.hasOwnProperty.call(this.props, 'location')\n        && Object.prototype.hasOwnProperty.call(this.props.location, 'state') && this.props.location.state\n        && Object.prototype.hasOwnProperty.call(this.props.location.state, 'res') && this.props.location.state.res\n        && Object.prototype.hasOwnProperty.call(this.props.location.state, 'status') && this.props.location.state.status\n        \n        if(!isRedirect) {\n            this.setState({\n                isRedirect: true\n            });\n            return false;\n        }\n        \n        const { res, status } = this.props.location.state;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        <h1>SUCCESS~ :D</h1>\n                        <div>\n                            <h2>OPERATIONS - FACT HASH</h2>\n                            <ul>\n                                {res._embedded.operations.map(x => factHash(x.fact.hash))}\n                            </ul>\n                        </div>\n                    </section>\n                )\n            case 400:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"400 FAIL... :(\"}</h1>\n                        <p>{res.title}</p>\n                    </section>\n                )\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>No Response!</p>\n                    </section>\n                )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"res-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                {this.renderResponse()}\n            </div>\n        )\n    }\n}\n\nexport default Response;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/response\" component={Response} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\nconst crypto = require('crypto');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type) {\n        if (type == 'unknown') {\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else {\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w) {\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold) {\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n\n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n\n        const _keys = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch (type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', { canonical: true }).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length - 1));\n\n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n\n        const sig = ec.sign(_msg, sk, 'hex', { canonical: true }).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4 + rlen);\n        const slen = sig[5 + rlen];\n        const s = sig.slice(6 + rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n\n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n\n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if (_type == 'btc') {\n        return _btckp();\n    }\n    else if (_type == 'ether') {\n        return _ethkp();\n    }\n    else if (_type == 'stellar') {\n        return _stlkp();\n    }\n    else {\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if (_type == '') {\n        if (_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch (type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n    return null;\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}