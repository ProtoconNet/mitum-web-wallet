{"version":3,"sources":["../../../wyuinche/mitum-js-util/lib/util.js","../../../wyuinche/mitum-js-util/lib/hint.js","../../../wyuinche/mitum-js-util/lib/seal.js","../../../wyuinche/mitum-js-util/lib/sign.js","../../../wyuinche/mitum-js-util/index.js","../../../wyuinche/mitum-js-util/lib/operation.js","../../../wyuinche/mitum-js-util/lib/constant.js","lib/Account.js","store/actions/index.js","store/reducers/LoginReducer.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","views/Login.js","components/buttons/SelectButton.js","views/Wallet.js","views/KeyGen.js","views/ResKeyGen.js","views/Help.js","components/buttons/AddButton.js","components/NewOperation.js","components/CreateAccount.js","components/UpdateKey.js","components/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","components/Footer.js","App.js","reportWebVitals.js","index.js","../../../wyuinche/mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","module","exports","_hint","type","VERSION","parseHinted","hinted","idx","indexOf","parsed","hintless","substring","hint","getTypeFromHint","lastIndexOf","getTimeStamp","Date","dateToUTC","date","iso","toISOString","ISOToUTC","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","toKeypair","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","bkeys","bamounts","item","breceiver","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","_VERSION","Account","priv","data","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","LOGIN","LOGOUT","login","account","initialState","isLogin","rootReducer","combineReducers","state","action","actions","store","createStore","Home","props","isRedirect","setState","className","to","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","children","InputBox","size","name","disabled","onChange","placeholder","useCopy","copy","alert","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","RestoreKeyLoginBox","MODE_PRIV_KEY","MODE_RES_KEY","getAccountInformation","a","axios","get","process","Login","renderForm","bind","reloadAccount","mode","isPriv","isActive","pubKey","then","res","pubKeys","signIn","catch","radio","document","querySelector","checked","connect","dispatch","SelectButton","PATH_LOGIN","PATH_SIGN","PATH_OPER","SHOW_PRIVATE","SHOW_RESTORE","onCopy","Wallet","scrollToAccount","walletRef","current","isDetailVisible","scrollIntoView","behavior","detailRef","createRef","restoreKey","isPrivVisible","isResVisible","redirect","operation","pathname","json","renderRedirect","ref","bal","onMoreClick","onShowClick","onSelect","KEY_ETHER","KEY_STELLAR","KeyGen","privKey","publicKey","btc","pub","ether","stellar","Error","version","getKey","ResKeyGen","Help","AddButton","xmlns","width","height","viewBox","d","NewOperation","padding","margin","overflow","CreateAccount","scrollToInput","jsonRef","created","createdRef","titleRef","Object","prototype","hasOwnProperty","call","generator","createKeys","formatKey","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","onChangeThres","k","onChangePub","onChangeWeight","addKey","onChangeCurrency","onChangeAmount","addAmount","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","location","CLEAR_DOWNLOAD","CLEAR_RESPONSE","download","file","File","URL","createObjectURL","broadcast","post","preStyle","whiteSpace","Sign","scrollToJSON","responseRef","response","jsonSelf","loaction","filename","clr","onSelfChange","files","reader","FileReader","onload","result","clear","readAsText","status","request","signOperation","_createFile","containerStyle","onClickImport","onClickSelf","jsonView","importJSON","onCreateFile","href","rel","onClickSend","onClickSign","Logout","signOut","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","y","BaseKey","w","karr","sortedkeys","sort","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","sig","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"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","file":"static/js/main.734a563a.chunk.js","sourcesContent":["const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst {Uint64BE} = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if(this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2)? 1 : Math.ceil((Math.log(this.num)/Math.log(2))/8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if(this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if(this.byteSize() > 4){\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4-this.byteSize());\n        \n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n        \n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if(this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf){\n        const _buf = Buffer.from(buf);\n        for(var i = 0; i < _buf.length / 2; i++){\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if(idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if(hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx+1);\n    \n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n    \n    if(idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n    \n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change format\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    const iso = date.toISOString();\n    return iso.substring(0,10)\n            .concat(\n                ' ',\n                iso.substring(11, 23),\n                ' ',\n                '+0000',\n                ' UTC'\n            )\n};\n\nconst ISOToUTC = (iso) => {\n    return iso.substring(0,10)\n            .concat(\n                ' ',\n                iso.substring(11, 23),\n                ' ',\n                '+0000',\n                ' UTC'\n            )\n};\n\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for(var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\"; \nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for(var i = 0; i < ks.length; i++){\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for(var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight){\n        if(key.indexOf(':') === -1){\n            throw '[ERROR] Invalid key';\n        }\n        if(typeof(weight) !== 'number'){\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid){\n        if(typeof(big) !== 'number'){\n            throw '[ERROR] Invalid amount';\n        }\n        if(cid.length < 1){\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold){\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts){\n        return _toAmounts(amts);\n    };\n    \n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts){\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts){\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items){\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys){\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items){\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo){\n        let _type;\n\n        if(fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if(fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if(fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers){\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for(var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n        \n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for(var i = 0; i < opers.length; i++){\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if(error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for(var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof(f_oper) === typeof(\"\") ? JSON.parse(fs.readFileSync(f_oper)) \n                    : (typeof(f_oper) === typeof({}) ? f_oper : undefined );\n        if(!before){\n            return undefined;\n        }\n        \n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }     \n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch(Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch(e) {\n        console.log(e);\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n    \n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n        \n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */    \n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */ \n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for(var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */ \n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for(var i = 0; i < this.amounts.length; i++){\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n   \n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */ \n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */ \n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for(var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n    \n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {      \n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n        \n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */ \n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */ \n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for(var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());   \n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if(this.fact_signs.length < 1){\n            throw '[ERROR] Empty fact sign!'\n        }\n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n        \n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */ \n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for(var i = 0; i < this.fact_signs.length; i++){\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    Operation,\n};\n","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","class Account {\n    constructor(addr, priv, data) {\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n    }\n}\n\nexport default Account;","import Account from '../../lib/Account';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function login(address, privateKey, data) {\n    const account = new Account(address, privateKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                { this.state.isRedirect ? <Redirect to=\"/login\" /> : false }\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"inherit\" : \"none\" }}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SmallButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\nimport copy from 'copy-to-clipboard';\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text\"\n                    name=\"input-box\"\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton className=\"input-copy-button\"\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <div className=\"confirm-button-container \">\n                <button className=\"confirm-button\"\n                    style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                    onClick={this.props.onClick}\n                    disabled={this.props.disabled ? true : false}>\n                    {this.props.children}\n                </button>\n            </div>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"priavate key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => this.props.onLogin(this.state.account, this.state.privateKey)}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { login } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\n\nconst MODE_PRIV_KEY = 'MODE_PRIV_KEY';\nconst MODE_RES_KEY = 'MODE_RES_KEY';\n\nconst getAccountInformation = async (account) => {\n    try {\n        return await axios.get(process.env.REACT_APP_API_ACCOUNT + account);\n    } catch (e) {\n        alert(`Could not sign in\\n${account}`);\n    }\n}\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderForm = this.renderForm.bind(this);\n        this.reloadAccount = this.reloadAccount.bind(this);\n\n        this.state = {\n            mode: MODE_PRIV_KEY,\n            isPriv: true,\n            isActive: false\n        }\n    }\n\n    onLogin(addr, priv) {\n        let pubKey;\n\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            alert('Invalid private key');\n            return;\n        }\n\n        getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, res.data);\n                            return;\n                        }\n                    }\n                    alert(`Could not sign in\\naccount: ${addr}`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    alert(`Could not sign in\\naccount: ${addr}`);\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case MODE_PRIV_KEY:\n                return <PrivateKeyLoginBox onLogin={(addr, priv) => this.onLogin(addr, priv)} />\n            case MODE_RES_KEY:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox onLogin={(addr, priv) => this.onLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    reloadAccount() {\n        this.onLogin(this.props.account.address, this.props.account.privateKey);\n    }\n\n    render() {\n        if (this.props.isLogin) {\n            this.reloadAccount();\n        }\n\n        return (\n            <div className=\"login-container\">\n                {this.props.isLogin ? <Redirect to={`/wallet/${this.props.account.address}`} /> : false}\n                <div className=\"login-radio\">\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={MODE_PRIV_KEY} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Private Key</div>\n                    </label>\n\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={MODE_RES_KEY} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Restore Key</div>\n                    </label>\n                </div>\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React, { createRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport { connect } from 'react-redux';\nimport { login } from '../store/actions';\n\nconst PATH_LOGIN = 'path-login';\nconst PATH_SIGN = 'path-sign';\nconst PATH_OPER = 'path-operation';\n\nconst OPER_CREATE_ACCOUNT = 'oper-create-account';\nconst OPER_UPDATE_KEY = 'oper-update-key';\nconst OPER_TRANSFER = 'oper-transfer';\n\nconst SHOW_PRIVATE = 'show-private';\nconst SHOW_RESTORE = 'show-restore';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <span className=\"currency\">{bal.currency}</span>\n            <span className=\"amount\">{bal.amount}</span>\n        </li>\n    );\n}\n\nconst publicKey = (key) => {\n    return (\n        <li key={key.key}\n            onClick={() => onCopy(key.key)}>\n            {key.key}\n        </li>\n    )\n}\n\nconst key = (key) => {\n    if (!key) {\n        return false;\n    }\n    return (\n        <p onClick={() => onCopy(key)}>\n            {key}\n        </p>\n    );\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n        this.detailRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isDetailVisible: false,\n            isPrivVisible: false,\n            isResVisible: false,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PATH_LOGIN,\n            operation: undefined\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === PATH_SIGN) {\n            this.setState({\n                isRedirect: true,\n                redirect: PATH_SIGN\n            })\n        }\n        else {\n            this.setState({\n                isRedirect: true,\n                redirect: PATH_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    renderRedirect() {\n        if (!this.props.account || !this.props.account.accountType\n            || !this.props.account.publicKeys || !this.props.account.balances\n            || !this.props.account.privateKey) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (!this.state.isRedirect) {\n            return false;\n        }\n\n        switch (this.state.redirect) {\n            case PATH_OPER:\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            case PATH_SIGN:\n                return <Redirect to={{\n                    pathname: '/sign',\n                    state: {\n                        json: undefined\n                    }\n                }} />\n            case PATH_LOGIN:\n                return <Redirect to='/login' />\n            default: return false;\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current && !this.state.isDetailVisible) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.detailRef.current && this.state.isDetailVisible) {\n            this.detailRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wallet-container\">\n                {this.renderRedirect()}\n                <div ref={this.walletRef}></div>\n                <h1>ACCOUNT INFO</h1>\n                <div className=\"wallet-info\">\n                    <span className=\"wallet-info-account\">\n                        <h2>{\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\")}</h2>\n                        <p onClick={() => onCopy(this.props.account.address)}>{this.props.account.address}</p>\n                    </span>\n                    <span className=\"wallet-info-detail\">\n                        <span className=\"wallet-amount\">\n                            <h2>BALANCE</h2>\n                            <ul>\n                                {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                            </ul>\n                        </span>\n                        <span className=\"wallet-more\"\n                            onClick={() => this.onMoreClick()}>\n                            <section>\n                                <p>MORE </p>\n                                <p className=\"more-down\" style={{ display: this.state.isDetailVisible ? \"none\" : \"inherit\" }}>▽</p>\n                                <p className=\"more-up\" style={{ display: this.state.isDetailVisible ? \"inherit\" : \"none\" }}>△</p>\n                            </section>\n                        </span>\n                        <div ref={this.detailRef}></div>\n                        <span className=\"wallet-more-detail\"\n                            style={{ display: this.state.isDetailVisible ? \"inherit\" : \"none\" }}>\n                            <div>\n                                <div className=\"wallet-pub-key\">\n                                    <h2>PUBLIC KEY</h2>\n                                    <ul>\n                                        {this.props.account.publicKeys ? this.props.account.publicKeys.map(x => publicKey(x)) : false}\n                                    </ul>\n                                </div>\n                                <div className=\"wallet-priv-key\">\n                                    <h2>PRIVATE KEY</h2>\n                                    {this.state.isPrivVisible ? key(this.props.account.privateKey) : false}\n                                    <label onClick={() => this.onShowClick(SHOW_PRIVATE)}>\n                                        {this.state.isPrivVisible ? \"- HIDE -\" : \"! SHOW !\"}\n                                    </label>\n                                </div>\n                                <div className=\"wallet-res-key\">\n                                    <h2>RESTORE KEY</h2>\n                                    {this.state.isResVisible ? key(this.props.account.restoreKey) : false}\n                                    <label onClick={() => this.onShowClick(SHOW_RESTORE)}>\n                                        {this.state.isResVisible ? \"- HIDE -\" : \"! SHOW !\"}\n                                    </label>\n                                </div>\n                            </div>\n                        </span>\n                    </span>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-sign\">\n                    <SelectButton onClick={() => this.onSelect(PATH_SIGN)} size=\"wide\">\n                        Sign / Send\n                    </SelectButton>\n                </div>\n            </div>\n        );\n    } s\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login({ address, privateKey, data })),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet);","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { version, key } from \"../text/hint.json\";\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n    state = {\n        privKey: \"\",\n        pubKey: \"\",\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        let privateKey = keypair.privKey.key + ':';\n        let publicKey = keypair.pubKey + ':';\n\n        switch (_type) {\n            case KEY_BTC:\n                privateKey += key.btc.priv;\n                publicKey += key.btc.pub;\n                break;\n            case KEY_ETHER:\n                privateKey += key.ether.priv;\n                publicKey += key.ether.pub;\n                break;\n            case KEY_STELLAR:\n                privateKey += key.stellar.priv;\n                publicKey += key.stellar.pub;\n                break;\n            default: throw new Error(\"Invalid key type\");\n        }\n\n        privateKey += '-' + version;\n        publicKey += '-' + version;\n\n        this.setState({\n            privKey: privateKey,\n            pubKey: publicKey\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","import React from 'react';\nimport './Help.scss';\n\nclass Help extends React.Component {\n    render() {\n        return (\n            <div className=\"help-container\">\n                <h1>Help</h1>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './AddButton.scss';\n\nclass AddButton extends React.Component {\n    render() {\n        return (\n            <button className=\"add-button\"\n                disabled={this.props.disabled ? true : false}\n                onClick={this.props.onClick}\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                    <path d=\"M0 16.67l2.829 2.83 9.175-9.339 9.167 9.339 2.829-2.83-11.996-12.17z\" />\n                </svg>\n            </button>\n        );\n    }\n}\n\nAddButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    diabled: PropTypes.bool\n}\n\nexport default AddButton;","import React from 'react';\nimport { Redirect } from 'react-router';\nimport copy from 'copy-to-clipboard';\nimport './NewOperation.scss';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nclass NewOperation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        }\n    }\n\n    onClick() {\n        this.setState({ isRedirect: true });\n    }\n\n    render() {\n        return (\n            <div className=\"json-container\">\n                <pre style={{\n                    display: 'block',\n                    padding: '10px 30px',\n                    margin: '0',\n                    overflow: 'visible',\n                }}\n                    onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                    {JSON.stringify(this.props.json, null, 4)}\n                </pre>\n                <div className=\"json-confirm\">\n                    <ConfirmButton onClick={() => this.onClick()}>ACCEPT</ConfirmButton>\n                </div>\n                {this.state.isRedirect ?\n                    <Redirect to={{\n                        pathname: '/sign',\n                        state: {\n                            json: this.props.json\n                        }\n                    }} /> : false}\n            </div>\n        );\n    }\n}\nexport default NewOperation;","import React, { createRef } from 'react';\nimport './CreateAccount.scss';\n\nimport AddButton from './buttons/AddButton';\nimport ConfirmButton from './buttons/ConfirmButton';\nimport InputBox from './InputBox';\nimport NewOperation from './NewOperation';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nconst key = (k) => {\n    return (\n        <li key={k}>\n            <span className=\"key\">{k.key}</span>\n            <span className=\"weight\">{k.weight}</span>\n        </li>\n    );\n}\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.jsonRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            created: undefined\n        }\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n        const account = this.props.account;\n\n        const keys = generator.createKeys(\n            this.state.keys.map(x =>\n                generator.formatKey(x.key, parseInt(x.weight))),\n            parseInt(this.state.threshold)\n        );\n\n        const amounts = generator.createAmounts(\n            this.state.amounts.map(x =>\n                generator.formatAmount(parseInt(x.amount), x.currency))\n        );\n\n        const createAccountsFact = generator.createCreateAccountsFact(\n            account.address,\n            [generator.createCreateAccountsItem(\n                keys, amounts\n            )]\n        );\n\n        const createAccounts = generator.createOperation(createAccountsFact, \"\");\n        createAccounts.addSign(account.privateKey);\n\n        this.setState({\n            created: createAccounts.dict()\n        });\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.jsonRef.current && this.state.created) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.created && (this.state.keys.length > 0 || this.state.amount.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"ca-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <ul>\n                        {account.balances ? account.balances.map(x => balance(x)) : false}\n                    </ul>\n                </div>\n                <div ref={this.createdRef}></div>\n                <div className=\"ca-input-wrap\">\n                    <div className=\"ca-keys\">\n                        <h2>KEYS</h2>\n                        <InputBox className=\"ca-thres-input\"\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={this.state.threshold}\n                            onChange={(e) => this.onChangeThres(e)} />\n                        <ul>\n                            {this.state.keys ? this.state.keys.map(x => key(x)) : false}\n                        </ul>\n                        <span className=\"ca-key-adder\">\n                            <InputBox className=\"ca-pub-input\" size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                                value={this.state.publicKey}\n                                onChange={(e) => this.onChangePub(e)} />\n                            <InputBox className=\"ca-weight-input\" size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                                value={this.state.weight}\n                                onChange={(e) => this.onChangeWeight(e)} />\n                            <AddButton\n                                disabled={!(this.state.publicKey && this.state.weight) ? true : false}\n                                onClick={() => this.addKey()} />\n                        </span>\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <h2>AMOUNTS</h2>\n                        <ul>\n                            {this.state.amounts ? this.state.amounts.map(x => balance(x)) : false}\n                        </ul>\n                        <span className=\"ca-amount-adder\">\n                            <InputBox className=\"ca-currency-input\"\n                                size=\"medium\" useCopy={false} disabled={false} placeholder=\"currency\"\n                                onChange={(e) => this.onChangeCurrency(e)}\n                                value={this.state.currency} />\n                            <InputBox className=\"ca-amount-input\" \n                                size=\"small\" useCopy={false} disabled={false} placeholder=\"amount\"\n                                value={this.state.amount}\n                                onChange={(e) => this.onChangeAmount(e)} />\n                            <AddButton\n                                disabled={!(this.state.currency && this.state.amount) ? true : false}\n                                onClick={() => this.addAmount()}>ADD</AddButton>\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <div ref={this.jsonRef}></div>\n                {this.state.created ?\n                    <NewOperation json={this.state.created} /> : false}\n            </div>\n        );\n    }\n}\nexport default CreateAccount;","import React, { createRef } from 'react';\nimport './UpdateKey.scss';\n\nimport InputBox from './InputBox';\nimport AddButton from './buttons/AddButton';\nimport ConfirmButton from './buttons/ConfirmButton';\nimport NewOperation from './NewOperation';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nconst key = (k) => {\n    return (\n        <li key={k}>\n            <span className=\"key\">{k.key}</span>\n            <span className=\"weight\">{k.weight}</span>\n        </li>\n    );\n}\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.jsonRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined\n        }\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n        const account = this.props.account;\n        const keys = generator.createKeys(\n            this.state.keys.map(x =>\n                generator.formatKey(x.key, parseInt(x.weight))),\n            parseInt(this.state.threshold)\n        );\n\n        const keyUpdaterFact = generator.createKeyUpdaterFact(\n            account.address, this.state.currency, keys\n        );\n\n        const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n        keyUpdater.addSign(account.privateKey);\n\n        this.setState({\n            created: keyUpdater.dict()\n        })\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.jsonRef.current && this.state.created) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.created && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"uk-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-address-wrap\">\n                    <h2>{account.address}</h2>\n                    <ul>{account.publicKeys ? account.publicKeys.map(x => key(x)) : false}</ul>\n                </div>\n                <div className=\"uk-amount-wrap\">\n                    <h2>BALANCE</h2>\n                    <ul>{account.balances ? account.balances.map(x => balance(x)) : false}</ul>\n                </div>\n                <div ref={this.createdRef}></div>\n                <div className=\"uk-input-wrap\">\n                    <div className=\"uk-keys\">\n                        <h2>NEW KEYS</h2>\n                        <div className=\"uk-keys-extra-input\">\n                            <InputBox\n                                size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeThres(e)} />\n                            <InputBox\n                                size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                                value={this.state.currency}\n                                onChange={(e) => this.onChangeCurrency(e)} />\n                        </div>\n\n                        <ul>\n                            {this.state.keys.map(x => key(x))}\n                        </ul>\n                        <span className=\"uk-key-adder\">\n                            <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                                value={this.state.publicKey}\n                                onChange={(e) => this.onChangePub(e)} />\n                            <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                                value={this.state.weight}\n                                onChange={(e) => this.onChangeWeight(e)} />\n                            <AddButton\n                                disabled={!(this.state.publicKey && this.state.weight) ? true : false}\n                                onClick={() => this.addKey()} />\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n                <div ref={this.jsonRef}></div>\n                {this.state.created ?\n                    <NewOperation json={this.state.created} /> : false}\n            </div>\n        );\n    }\n}\nexport default UpdateKey;","import React, { createRef } from 'react';\nimport './Transfer.scss';\n\nimport InputBox from './InputBox';\nimport AddButton from './buttons/AddButton';\nimport ConfirmButton from './buttons/ConfirmButton';\nimport NewOperation from './NewOperation';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.jsonRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined\n        }\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n        const account = this.props.account;\n        const amounts = generator.createAmounts(\n            this.state.amounts.map(x =>\n                generator.formatAmount(parseInt(x.amount), x.currency))\n        );\n\n        const transfersFact = generator.createTransfersFact(\n            account.address,\n            [generator.createTransfersItem(\n                this.state.address, amounts\n            )]\n        );\n\n        const transfers = generator.createOperation(transfersFact, \"\");\n        transfers.addSign(account.privateKey);\n\n        this.setState({\n            created: transfers.dict()\n        })\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.jsonRef.current && this.state.created) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.created && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"tf-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <ul>\n                        {account.balances ? account.balances.map(x => balance(x)) : false}\n                    </ul>\n                </div>\n                <div ref={this.createdRef}></div>\n                <div className=\"tf-input-wrap\">\n                    <div className=\"tf-address\">\n                        <h2>TRANSFER TO</h2>\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"account address\"\n                            value={this.state.address}\n                            onChange={(e) => this.onChangeAddress(e)} />\n                    </div>\n                    <div className=\"tf-amounts\">\n                        <h2>AMOUNTS</h2>\n                        <ul>\n                            {this.state.amounts.map(x => balance(x))}\n                        </ul>\n                        <span className=\"tf-amount-adder\">\n                            <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"currency\"\n                                onChange={(e) => this.onChangeCurrency(e)}\n                                value={this.state.currency} />\n                            <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"amount\"\n                                value={this.state.amount}\n                                onChange={(e) => this.onChangeAmount(e)} />\n                            <AddButton\n                                disabled={!(this.state.currency && this.state.amount) ? true : false}\n                                onClick={() => this.addAmount()} />\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <div ref={this.jsonRef}></div>\n                {this.state.created ?\n                    <NewOperation json={this.state.created} /> : false}\n            </div>\n        );\n    }\n}\nexport default Transfer;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/CreateAccount';\nimport UpdateKey from '../components/UpdateKey';\nimport Transfer from '../components/Transfer';\nimport { connect } from 'react-redux';\n\nconst OPER_CREATE_ACCOUNT = 'oper-create-account';\nconst OPER_UPDATE_KEY = 'oper-update-key';\nconst OPER_TRANSFER = 'oper-transfer';\n\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'location') || !this.props.location\n            || !Object.prototype.hasOwnProperty.call(this.props.location, 'state') || !this.props.location.state\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true,\n                account: undefined,\n                operation: undefined\n            }\n            return;\n        }\n\n        this.state = {\n            isRedirect: this.props.isLogin ? false : true,\n            account: this.props.account,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    render() {\n        let redirect;\n        if (this.props.isLogin) {\n            redirect = `/wallet/${this.props.account.address}`;\n        }\n        else {\n            redirect = '/login';\n        }\n\n        return (\n            <div className=\"oper-container\">\n                {this.state.isRedirect ? <Redirect to={redirect} /> : false}\n                {this.state.operation === OPER_CREATE_ACCOUNT ?\n                    <CreateAccount account={this.state.account} /> : (\n                        this.state.operation === OPER_UPDATE_KEY ?\n                            <UpdateKey account={this.state.account} /> : (\n                                this.state.operation === OPER_TRANSFER ?\n                                    <Transfer account={this.state.account} /> : <Redirect to={redirect} />\n                            ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport ConfirmButton from '../components/buttons/ConfirmButton';\nimport SmallButton from '../components/buttons/SmallButton';\n\nimport axios from 'axios';\n\nimport { Signer } from 'mitumc';\nimport { connect } from 'react-redux';\n\n\nconst CLEAR_DOWNLOAD = 'clear-download';\nconst CLEAR_RESPONSE = 'clear-response';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst download = (json) => {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('Could not get url');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nconst broadcast = async (operation) => {\n    if (!operation || !Object.prototype.hasOwnProperty.call(operation, 'hash') || !Object.prototype.hasOwnProperty.call(operation, 'memo')\n        || !Object.prototype.hasOwnProperty.call(operation, 'fact') || !Object.prototype.hasOwnProperty.call(operation, 'fact_signs')\n        || !operation.hash || !operation.fact || !operation.fact_signs) {\n        return undefined;\n    }\n\n    return await axios.post(process.env.REACT_APP_API_BROADCAST, operation);\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.responseRef = createRef();\n        this.jsonRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'location') || !Object.prototype.hasOwnProperty.call(this.props.loaction, 'state')\n            || !this.props.location || !this.props.location.state || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true\n            }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            json: Object.prototype.hasOwnProperty.call(this.props.loaction.state, 'json') ? this.props.location.state.json : {},\n\n            jsonSelf: \"\",\n            response: undefined,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    clear(clr) {\n        if (clr === CLEAR_DOWNLOAD) {\n            this.setState({\n                download: undefined,\n                filename: \"\",\n            });\n        }\n        else if (clr === CLEAR_RESPONSE) {\n            this.setState({\n                response: undefined\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.responseRef.current && this.state.response) {\n            this.responseRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.jsonRef.current && (this.state.jsonSelf || this.state.json)) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.response) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {this.state.jsonSelf === \"\"\n                    ? (\n                        this.state.json\n                            ? (\n                                <pre style={preStyle}\n                                    onClick={() => onCopy(JSON.stringify(this.state.json, null, 4))}>\n                                    {JSON.stringify(this.state.json, null, 4)}\n                                </pre>\n                            )\n                            : false\n                    )\n                    : <textarea type=\"text\" onChange={(e) => this.onSelfChange(e)} />\n                }\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        const json = this.state.json;\n\n        try {\n            reader.onload = () => {\n                const parsed = JSON.parse(reader.result);\n                if (!Object.prototype.hasOwnProperty.call(parsed, 'hash') || !Object.prototype.hasOwnProperty.call(parsed, 'fact')\n                    || !Object.prototype.hasOwnProperty.call(parsed, 'fact_signs') || !Object.prototype.hasOwnProperty.call(parsed, 'memo')\n                    || !parsed.hash || !parsed.fact || !parsed.fact_signs) {\n                    alert('Invalid format!\\nOnly operation json file can be imported');\n                }\n                else {\n                    this.setState({\n                        json: parsed\n                    });\n                    this.clear(CLEAR_DOWNLOAD);\n                    this.clear(CLEAR_RESPONSE);\n                }\n            };\n            reader.readAsText(file, \"utf-8\");\n        } catch (e) {\n            this.setState({\n                json: json\n            });\n            alert('Invalid format!\\nOnly operation json file can be imported');\n        }\n    }\n\n    onClickImport() {\n        if (this.state.jsonSelf) {\n            this.clear(CLEAR_DOWNLOAD);\n            this.clear(CLEAR_RESPONSE);\n        }\n\n        this.setState({\n            jsonSelf: \"\",\n            download: undefined,\n            filename: \"\"\n        });\n    }\n\n    onClickSelf() {\n        if (!this.state.jsonSelf) {\n            this.clear(CLEAR_DOWNLOAD);\n            this.clear(CLEAR_RESPONSE);\n        }\n\n        this.setState({\n            jsonSelf: \"{\\n}\",\n            download: undefined,\n            filename: \"\"\n        })\n    }\n\n    onSelfChange(e) {\n        this.setState({\n            jsonSelf: e.target.value ? e.target.value : \"{\\n}\"\n        })\n    }\n\n    onClickSend() {\n        let target = {};\n\n        if (this.state.jsonSelf) {\n            target = JSON.parse(this.state.jsonSelf);\n        }\n        else if (this.state.json) {\n            target = this.state.json;\n        }\n        else {\n            this.setState({\n                response: undefined\n            });\n        }\n\n        if (!Object.prototype.hasOwnProperty.call(target, 'hash') || !Object.prototype.hasOwnProperty.call(target, 'fact')\n            || !Object.prototype.hasOwnProperty.call(target, 'fact_signs') || !Object.prototype.hasOwnProperty.call(target, 'memo')) {\n            this.setState({\n                response: undefined\n            });\n            return;\n        }\n\n        broadcast(target).then(\n            res => {\n                this.setState({\n                    status: res.request.status,\n                    response: res.data\n                });\n            }\n        ).catch(e => {\n            this.setState({\n                status: e.response.status,\n                response: e.response.data\n            })\n            alert('Could not send operation');\n        });\n    }\n\n    onClickSign() {\n        this.clear(CLEAR_RESPONSE);\n        this.clear(CLEAR_DOWNLOAD);\n\n        let target = this.state.jsonSelf\n            ? JSON.parse(this.state.jsonSelf)\n            : (\n                this.state.json ? this.state.json : {}\n            );\n\n        if (!Object.prototype.hasOwnProperty.call(target, 'hash') || !Object.prototype.hasOwnProperty.call(target, 'fact_signs')\n            || !Object.prototype.hasOwnProperty.call(target, 'fact') || !Object.prototype.hasOwnProperty.call(target, 'memo')) {\n            return;\n        }\n\n        const signer = new Signer('mitum', this.props.account.privateKey);\n\n        try {\n            this.setState({\n                json: signer.signOperation(target),\n                jsonSelf: \"\"\n            });\n            alert('Success!');\n        }\n        catch (e) {\n            alert('Could not add sign to operation');\n        }\n    }\n\n    _createFile(target) {\n        if (!target || !Object.prototype.hasOwnProperty.call(target, 'hash') || !target.hash) {\n            throw new Error('Invalid json');\n        }\n        this.setState({\n            download: download(target),\n            filename: target.hash\n        });\n    }\n\n    onCreateFile() {\n        try {\n            if (this.state.jsonSelf) {\n                this._createFile(JSON.parse(this.state.jsonSelf));\n                alert('Success!');\n            }\n            else if (this.state.json) {\n                this._createFile(this.state.json);\n                alert('Success!');\n            }\n            else {\n                this.setState({\n                    download: undefined\n                })\n            }\n        } catch (e) {\n            alert('Could not create file!');\n        }\n    }\n\n    render() {\n        const containerStyle = {\n            height: !(this.state.response\n                || this.state.jsonSelf\n                || this.state.json) ? \"130vh\" : \"100%\"\n        };\n\n        return (\n            <div className=\"sign-container\" style={containerStyle}>\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.createdRef}></div>\n                <h1>SIGN / SEND OPERATION</h1>\n                <div className=\"sign-account\">\n                    <p>{this.props.account.address}</p>\n                </div>\n                <div className=\"sign-operation\">\n                    <span className=\"sign-switch\">\n                        <SelectButton onClick={() => this.onClickImport()} size=\"big\">IMPORTED</SelectButton>\n                        <SelectButton onClick={() => this.onClickSelf()} size=\"big\">WRITTEN</SelectButton>\n                    </span>\n                    <div ref={this.jsonRef}></div>\n                    {this.jsonView()}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                        <SmallButton visible={true} onClick={() => this.onCreateFile()} >to json file</SmallButton>\n                    </div>\n                    {this.state.download ? <a target=\"_blank\" download={`${this.state.filename}.json`}\n                        href={this.state.download} rel=\"noreferrer\">Download</a> : false}\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton onClick={() => this.onClickSend()}>SEND NOW</ConfirmButton>\n                    <ConfirmButton onClick={() => this.onClickSign()}>ADD SIGN</ConfirmButton>\n                </div>\n                <div ref={this.responseRef}></div>\n                {this.state.response\n                    ?\n                    <div className=\"sign-response\">\n                        <span>{(this.state.status === 200 ? \"Broadcast Success\" : \"Broadcast Fail\") + `: ${this.state.status}`}</span>\n                        <pre\n                            style={preStyle}\n                            onClick={() => onCopy(this.state.response)}>\n                            {JSON.stringify(this.state.response, null, 4)}\n                        </pre>\n                    </div> : false}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Sign);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\n\nfunction Navigation({isLogin}) {\n    return (\n        <div className=\"nav\">\n            <Link className=\"side nav-title\" to=\"/\">\n                <p>MITUM WEB WALLET</p>\n            </Link>\n            <Link className=\"main\" to=\"/login\">\n                <p>OPEN WALLET</p>\n            </Link>\n            <Link className=\"main\" to=\"/key-generate\">\n                <p>GENERATE KEYPAIR</p>\n            </Link>\n            <Link className=\"main\" to=\"/res-key-generate\">\n                <p>GENERATE RESTORE KEY</p>\n            </Link>\n            {isLogin\n                ? (\n                    <Link className=\"side nav-logout\" to=\"/logout\">\n                        <p>SIGN OUT</p>\n                    </Link>\n                ) : false}\n            <Link className=\"side nav-help\" to=\"/help\">\n                <p>HELP</p>\n            </Link>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n    }\n    \n    render() {\n        return !this.props.isLogin\n            ? <Redirect to=\"/login\" />\n            : <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\nconst crypto = require('crypto');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type){\n        if(type == 'unknown'){\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else{\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w){\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold){\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for(var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n        \n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n        \n        const _keys = [];\n        for(var i = 0; i < this.keys.length; i++){\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch(type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', {canonical: true}).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length-1));\n        \n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n        \n        const sig = ec.sign(_msg, sk, 'hex', {canonical: true}).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4+rlen);\n        const slen = sig[5+rlen];\n        const s = sig.slice(6+rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n    \n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n    \n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if(_type == 'btc'){\n        return _btckp();\n    }\n    else if(_type == 'ether') {\n        return _ethkp();\n    }\n    else if(_type == 'stellar') {\n        return _stlkp();\n    }\n    else{\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if(_type == ''){\n        if(_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch(type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n    return null;\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}