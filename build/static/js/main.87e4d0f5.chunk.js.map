{"version":3,"sources":["../../../wyuinche/mitum-js-util/lib/util.js","../../../wyuinche/mitum-js-util/lib/hint.js","../../../wyuinche/mitum-js-util/lib/seal.js","../../../wyuinche/mitum-js-util/lib/sign.js","../../../wyuinche/mitum-js-util/lib/constant.js","../../../wyuinche/mitum-js-util/lib/operation.js","../../../wyuinche/mitum-js-util/index.js","lib/Account.js","text/mode.js","lib/History.js","store/actions/index.js","store/reducers/LoginReducer.js","lib/Url.js","store/reducers/OperationReducer.js","store/reducers/QueueReducer.js","lib/Queue.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","lib/Validation.js","components/modals/AlertModal.js","lib/Sleep.js","views/Login.js","components/buttons/SelectButton.js","components/modals/PublicKeyModal.js","components/modals/PendingModal.js","views/Wallet.js","views/KeyGen.js","views/ResKeyGen.js","mitum_wallet_manual.pdf","views/Help.js","components/modals/OperationConfirm.js","components/infos/Keys.js","components/infos/SubInfo.js","components/infos/Balances.js","components/adders/KeyAdder.js","components/adders/AmountAdder.js","components/operations/CreateAccount.js","components/adders/ExtraAdder.js","components/operations/UpdateKey.js","components/operations/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","components/Footer.js","components/modals/LogoutConfirm.js","views/Response.js","views/UpdateKeyLoad.js","App.js","reportWebVitals.js","index.js","../../../wyuinche/mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","ISOToUTC","iso","t","indexOf","z","substring","module","exports","_hint","type","VERSION","parseHinted","hinted","idx","parsed","hintless","hint","getTypeFromHint","lastIndexOf","getTimeStamp","Date","dateToUTC","date","toISOString","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","_VERSION","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","bkeys","bamounts","item","breceiver","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","toKeypair","Account","priv","pub","data","Error","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","sort","y","localeCompare","publicKey","btc","process","ether","stellar","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","OPER_DEFAULT","PAGE_LOGIN","PAGE_OPER","SHOW_PRIVATE","SHOW_RESTORE","TYPE_CREATE_ACCOUNT","operation","create_account","TYPE_UPDATE_KEY","update_key","TYPE_TRANSFER","transfer","History","history","me","inState","in_state","confirmedAt","confirmed_at","setItems","account","LOGIN","LOGOUT","SET_HISTORY","CLEAR_HISTORY","SET_OPERATION","SET_RESPONSE","ENQUEUE_OPERATION","DEQUEUE_OPERATION","CLEAR_QUEUE","login","restoreKey","logout","clearHistory","setOperation","json","setResponse","isBroadcast","isStateIn","res","status","initialState","isLogin","isLoadHistory","download","Object","prototype","hasOwnProperty","call","file","File","alert","URL","createObjectURL","mode","filename","queue","shift","isEmpty","rootReducer","combineReducers","state","action","actions","enque","deque","clear","store","createStore","Home","props","isRedirect","setState","className","to","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","size","name","autoComplete","onChange","placeholder","useCopy","copy","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","trim","RestoreKeyLoginBox","isOperation","isStateValid","location","isPublicKeyValid","pubk","test","keyHint","isAddressValid","addressHint","isNum","isThresholdValid","thres","thresNum","isWeightValid","isWeightsValidToThres","weights","total","isCurrencyValid","isAmountValid","isDuplicate","list","AlertModal","isOpen","onClose","title","id","Sleep","ms","Promise","resolve","setTimeout","getAccountInformation","a","axios","get","getAccountHistory","Login","isPriv","isActive","isAlertShow","alertTitle","alertMsg","isShowLoad","pk","isPrivateKeyValid","pubKey","openAlert","then","setHistory","catch","pubKeys","signIn","radio","document","querySelector","onStartLogin","checked","closeAlert","renderForm","withRouter","connect","dispatch","histories","splitHistories","_i","j","_j","_z","confirmation","direction","SelectButton","PublicKeyModal","k","PendingModal","broadcastedAt","job","titleStyle","flexDirection","alignItems","justifyContent","width","margin","padding","lineStyle","border","verticalAlign","content","textAlign","fontWeight","fontSize","getFactInState","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isPubModalOpen","isPendModalOpen","isQueueUpdate","redirect","isResult","request","deleteJob","finally","isDetailVisible","isPrivVisible","isResVisible","pathname","checkInState","refresh","renderRedirect","ref","openPubModal","bal","onSelect","hist","openPendModal","closePubModal","closePendModal","KEY_ETHER","KEY_STELLAR","KeyGen","privKey","version","getKey","ResKeyGen","pdfjs","GlobalWorkerOptions","workerSrc","Help","goToPrevPage","pageNumber","goToNextPage","scrollToPdf","pdfRef","isShowExp","numPages","href","pdfFile","rel","onLoadSuccess","onDocumentLoadSuccess","broadcast","post","OperationConfirm","setResult","response","onSend","Balances","labeled","KeyAdder","onKeyChange","onWeightChange","onAdd","isAddDisabled","useThres","onThresChange","AmountAdder","onCurrencyChange","onAmountChange","CreateAccount","scrollToInput","createdRef","titleRef","isModalOpen","isAlertOpen","generator","createKeys","formatKey","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","created","setJson","onChangePub","onChangeWeight","onChangeThres","addKey","onChangeCurrency","onChangeAmount","addAmount","closeModal","ExtraAdder","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","preStyle","overflow","whiteSpace","getOperationFromType","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","files","reader","FileReader","onload","result","readAsText","signOperation","openJSON","jsonView","importJSON","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","clearQueue","Footer","LogoutConfirm","onLogout","keyHash","Response","isSignOut","addJob","clearJson","renderResponse","UpdateKeyLoad","counter","getResult","_hash","_res","reason","hs","rs","broad","getResponse","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","BaseKey","w","karr","sortedkeys","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","sig","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"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","file":"static/js/main.87e4d0f5.chunk.js","sourcesContent":["const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst { Uint64BE } = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if (this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2) ? 1 : Math.ceil((Math.log(this.num) / Math.log(2)) / 8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if (this.byteSize() > 4) {\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4 - this.byteSize());\n\n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n\n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf) {\n        const _buf = Buffer.from(buf);\n        for (var i = 0; i < _buf.length / 2; i++) {\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if (hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx + 1);\n\n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    return ISOToUTC(date.toISOString());\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {string} iso - iso string to change\n * @return {string} - UTC-format date string\n */\nconst ISOToUTC = (iso) => {\n    const t = iso.indexOf('T');\n    const z = iso.indexOf('Z');\n\n    return iso.substring(0, t)\n        .concat(\n            ' ',\n            iso.substring(t + 1, z),\n            ' ',\n            '+0000',\n            ' UTC'\n        );\n}\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for (var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\";\nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for (var i = 0; i < ks.length; i++) {\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for (var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight) {\n        if (key.indexOf(':') === -1) {\n            throw '[ERROR] Invalid key';\n        }\n        if (typeof (weight) !== 'number') {\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid) {\n        if (typeof (big) !== 'number') {\n            throw '[ERROR] Invalid amount';\n        }\n        if (cid.length < 1) {\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold) {\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts) {\n        return _toAmounts(amts);\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items) {\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys) {\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items) {\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo) {\n        let _type;\n\n        if (fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if (fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if (fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers) {\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for (var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n\n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for (var i = 0; i < opers.length; i++) {\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if (error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for (var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof (f_oper) === typeof (\"\") ? JSON.parse(fs.readFileSync(f_oper))\n            : (typeof (f_oper) === typeof ({}) ? f_oper : undefined);\n        if (!before) {\n            return undefined;\n        }\n\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }\n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch (Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n\n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n\n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n\n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {\n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if (this.fact_signs.length < 1) {\n            throw '[ERROR] Empty fact sign!'\n        }\n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n\n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */\n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for (var i = 0; i < this.fact_signs.length; i++) {\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    Operation,\n};\n","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","import { key } from '../text/hint.json';\n\nclass Account {\n    constructor(addr=null, priv=null, pub=null, data=null) {\n        if(!addr || !priv || !pub || !data) {\n            throw new Error('Wrong parameter with Account constructor');\n        }\n\n\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n\n        this.balances.sort((x, y) => x.currency.localeCompare(y.currency));\n        this.publicKeys.sort((x, y) => x.key.localeCompare(y.key));\n\n        this.publicKey = pub;\n\n        const idx = priv.indexOf(':');\n        const hint = priv.substring(idx + 1);\n        switch (hint) {\n            case `${key.btc.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.btc.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.ether.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.ether.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.stellar.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n        }\n    }\n}\n\nexport default Account;","import { operation } from './hint.json';\n\nexport const OPER_CREATE_ACCOUNT = 'OPER-CREATE-ACCOUNT';\nexport const OPER_UPDATE_KEY = 'OPER-UPDATE-KEY';\nexport const OPER_TRANSFER = 'OPER-TRANSFER';\nexport const OPER_DEFAULT = 'OPER-DEFAULT';\n\nexport const PAGE_HOME = 'PAGE-HOMEs'\nexport const PAGE_LOGIN = 'PAGE-LOGIN';\nexport const PAGE_WALLET = 'PAGE-WALLET';\nexport const PAGE_OPER = 'PAGE-OPER';\nexport const PAGE_SIGN = 'PAGE-SIGN';\nexport const PAGE_LOD = 'PAGE-LOD';\nexport const PAGE_RES = 'PAGE-RES';\nexport const PAGE_GEN = 'PAGE-GEN';\n\nexport const SHOW_PRIVATE = 'show-private';\nexport const SHOW_RESTORE = 'show-restore';\n\nexport const TYPE_CREATE_ACCOUNT = operation.create_account + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_UPDATE_KEY = operation.update_key + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_TRANSFER = operation.transfer + '-' + process.env.REACT_APP_VERSION;","import { TYPE_CREATE_ACCOUNT, TYPE_TRANSFER } from \"../text/mode\";\nimport { address } from '../text/hint.json';\n\nconst hintedAccount = (account) => {\n    return  account + ':' + address + '-' + process.env.REACT_APP_VERSION\n};\n\nclass History {\n    constructor(history, me) {\n        this.me = me;\n        this.inState = history.in_state;\n        this.confirmedAt = history.confirmed_at;\n        \n        this.operation = history.operation;\n        this.type = history.operation._hint;\n        this.factHash = history.operation.fact.hash;\n\n        this.setItems();\n    }\n\n    setItems(){\n        if(!(this.type === TYPE_CREATE_ACCOUNT || this.type === TYPE_TRANSFER)) {\n            this.items = undefined;\n            return;\n        }\n\n        const items = this.operation.fact.items.map(\n            x => ({\n                receiver: this.type === TYPE_CREATE_ACCOUNT ? hintedAccount(x.keys.hash) : x.receiver,\n                amounts: x.amounts.map(\n                    y => ({\n                        currency: y.currency,\n                        amount: y.amount\n                    })\n                )\n            })\n        );\n\n        this.sender = this.operation.fact.sender;\n        if(this.sender === this.me){\n            this.items = items;\n        }\n        else{\n            this.items = [];\n            for( let i = 0; i < items.length; i++ ){\n                if(items[i].receiver === this.me) {\n                    this.items.push(items[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default History;","import Account from '../../lib/Account';\nimport History from '../../lib/History';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_HISTORY = 'SET_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n\nexport const SET_OPERATION = 'SET_OPERATION';\nexport const SET_RESPONSE = 'SET_RESPONSE';\n\nexport const ENQUEUE_OPERATION = 'ENQUEUE_OPERATION';\nexport const DEQUEUE_OPERATION = 'DEQUEUE_OPERATION';\nexport const CLEAR_QUEUE = 'CLEAR_QUEUE';\n\nexport function login(address, privateKey, publicKey, data) {\n    const account = new Account(address, privateKey, publicKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKey: account.publicKey,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined,\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function setHistory(data, me) {\n    if(!data) {\n        return {\n            type: SET_HISTORY,\n            history: [],\n        }\n    }\n\n    const histories = data._embedded.map(x => new History(x._embedded, me));\n    const splitHistories = [];\n\n    for(let i = 0; i < histories.length; i++){\n        const _i = histories[i];\n        if(!_i.items){\n            continue;\n        }\n        for(let j = 0; j < _i.items.length; j++){\n            const _j = _i.items[j];\n            for(let z = 0; z < _j.amounts.length; z++) {\n                const _z = _j.amounts[z];\n                splitHistories.push({\n                    hash: _i.factHash,\n                    confirmation: _i.inState ? 'SUCCESS' : 'FAIL',\n                    direction: me === _i.sender ? 'SEND' : 'RECEIVE',\n                    confirmedAt: _i.confirmedAt,\n                    target: me === _i.sender ? _j.receiver : _i.sender,\n                    currency: _z.currency,\n                    amount: _z.amount\n                })\n            }\n        }\n    }\n\n    return {\n        type: SET_HISTORY,\n        history: splitHistories,\n    }\n}\n\nexport function clearHistory() {\n    return {\n        type: CLEAR_HISTORY\n    }\n}\n\nexport function setOperation(operation, json) {\n    return {\n        type: SET_OPERATION,\n        operation,\n        json,\n    }\n}\n\nexport function setResponse(isBroadcast, isStateIn, res, status, data) {\n    return {\n        type: SET_RESPONSE,\n        isBroadcast,\n        isStateIn,\n        res,\n        status,\n        data,\n    }\n}\n\nexport function enqueueOperation(item) {\n    return {\n        type: ENQUEUE_OPERATION,\n        item,\n    }\n}\n\nexport function dequeueOperation() {\n    return {\n        type: DEQUEUE_OPERATION\n    }\n}\n\nexport function clearQueue() {\n    return {\n        type: CLEAR_QUEUE\n    }\n}","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined,\n    history: undefined,\n    isLoadHistory: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        case actions.SET_HISTORY:\n            return {\n                ...state,\n                history: action.history,\n                isLoadHistory: true\n            }\n        case actions.CLEAR_HISTORY:\n            return {\n                ...state,\n                history: undefined,\n                isLoadHistory: false\n            }\n        default:\n            return state;\n    }\n}","function download(json) {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('JSON 파일 다운로드 url을 얻을 수 없습니다. :(');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nexport default download;","import * as actions from '../actions';\nimport * as mode from '../../text/mode'; \nimport download from '../../lib/Url';\n\nconst initialState = {\n    operation: mode.OPER_DEFAULT,\n    json: null,\n    data: [],\n    download: undefined,\n    filename: \"\",\n    isBroadcast: false,\n    isStateIn: false,\n    res: undefined,\n    status: 400\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_OPERATION:\n            if(action.operation === mode.OPER_DEFAULT) {\n                return initialState;\n            }            \n\n            return {\n                ...state,\n                operation: action.operation,\n                json: action.json,\n                download: download(action.json),\n                filename: action.json.hash\n            }\n        case actions.SET_RESPONSE:\n            return {\n                ...state,\n                isBroadcast: action.isBroadcast,\n                isStateIn: action.isStateIn,\n                res: action.res,\n                status: action.status,\n                data: action.data,\n            }\n        default:\n            return state;\n    }\n}","import * as actions from '../actions';\nimport Queue from '../../lib/Queue';\n\nconst initialState = {\n    queue: new Queue()\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.ENQUEUE_OPERATION:\n            state.queue.enque(action.item);\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.DEQUEUE_OPERATION:\n            state.queue.deque();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.CLEAR_QUEUE:\n            state.queue.clear();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        default:\n            return state;\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    enque(item) {\n        this.queue.push(item);\n    }\n\n    deque() {\n        this.queue.shift();\n    }\n\n    isEmpty() {\n        if(this.queue) {\n            return false;\n        }\n        return true;\n    }\n\n    clear() {\n        this.queue = [];\n    }\n\n    get length() {\n        return this.queue.length;\n    }\n\n    get target() {\n        if(this.isEmpty()) {\n            return null\n        }\n        return this.queue[0];\n    }\n}\n\nexport default Queue;","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\nimport { reducer as operationReducer } from './OperationReducer';\nimport { reducer as queueReducer} from './QueueReducer';\n\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    operation: operationReducer,\n    queue: queueReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                { this.state.isRedirect ? <Redirect to=\"/login\" /> : false }\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"inherit\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\nexport default SmallButton;","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\n\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <button className=\"confirm-button\"\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                onClick={this.props.onClick}\n                disabled={this.props.disabled ? true : false}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"private key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => {\n                        this.props.onLogin(this.state.account.trim(), this.state.privateKey.trim());\n                    }}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import { key as keyHint } from '../text/hint.json';\nimport { address as addressHint } from '../text/hint.json';\n\nexport const isOperation = (json) => {\n\n    if (!json) { return false; }\n\n    if(!Object.prototype.hasOwnProperty.call(json, '_hint') || !json._hint) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'hash') || !json.hash) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'memo')) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact') || !json.fact) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact_signs')) {\n        return false;\n    }\n\n    // const signatures = json.fact_signs.map(x => x.signatures);\n    // if (signatures.length < 1) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isStateValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'location') || !state.location) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state.location, 'state') || !state.location.state) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isResponseValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'res') || !state.res) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'status') || !state.status) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'operation') || !state.operation) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'data')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAccountValid = (account) => {\n\n    if (!account) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'address') || !account.address) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'accountType') || !account.accountType) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'publicKeys') || !account.publicKeys) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'balances') || !account.balances) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'privateKey') || !account.privateKey) {\n        return false;\n    }\n\n    // if (!Object.prototype.hasOwnProperty.call(account, 'restoreKey') || !account.restoreKey) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isPrivateKeyValid = (pk) => {\n\n    if (typeof (pk) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = pk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n    const key = pk.substring(0, idx);\n    const hint = pk.substring(idx + 1);\n\n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isPublicKeyValid = (pubk) => {\n\n    if (typeof (pubk) !== typeof ('string')) {\n        return false;\n    }\n\n    const idx = pubk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const key = pubk.substring(0, idx);\n    const hint = pubk.substring(idx + 1);\n    \n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.pub}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isAddressValid = (addr) => {\n\n    if (typeof (addr) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = addr.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const hint = addr.substring(idx + 1);\n    const address = addr.substring(1, idx);\n    if (hint !== `${addressHint}-${process.env.REACT_APP_VERSION}`) {\n        return false;\n    }\n\n    if(!/[a-zA-Z0-9]+/.test(address)) {\n        return false;\n    }\n\n    return true;\n}\n\nconst isNum = (num) => {\n    if (!num) {\n        return false;\n    }\n\n    if (/[^0-9]/.test(num)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]*/.test(num)) {\n        return false;\n    }\n\n    if (num.indexOf('.') > -1) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isThresholdValid = (thres) => {\n    if (!isNum(thres)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]{0,2}/.test(thres)) {\n        return false;\n    }\n\n    const thresNum = parseInt(thres);\n    if (thresNum < 1 || thresNum > 100) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isWeightValid = (weight) => {\n    return isNum(weight);\n}\n\nexport const isWeightsValidToThres = (weights, thres) => {\n    \n    if (!isThresholdValid(thres)) {\n        return false;\n    }\n\n    let total = 0;\n    for (let i = 0; i < weights.length; i++) {\n        if (!isWeightValid(weights[i])) {\n            return false;\n        }\n        total += parseInt(weights[i]);\n    }\n\n    if (total < parseInt(thres)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isCurrencyValid = (currency) => {\n    \n    if(!currency) {\n        return false;\n    }\n\n    if(typeof (currency) !== typeof ('string')) {\n        return false;\n    }\n\n    if(!/[A-Z]{3,3}/.test(currency)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAmountValid = (amount) => {\n    return isNum(amount);\n}\n\nexport const isDuplicate = (target, list) => {\n\n    if(!target || !list) {\n        return false;\n    }\n\n    for(let i = 0; i < list.length; i++) {\n        if(target.indexOf(list[i]) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}","import React from 'react';\nimport './AlertModal.scss';\n\nclass AlertModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, title, msg } = this.props;\n        return (\n            <div className={isOpen ? 'alert-openModal alert-modal' : 'alert-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {title}\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='alert-msg'>{msg}</p>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AlertModal;","function Sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Sleep;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { clearHistory, login, setHistory } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\nimport { SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\nimport { isAddressValid, isPrivateKeyValid } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\nimport Sleep from '../lib/Sleep';\n\nconst getAccountInformation = async (account) => {\n    return await axios.get(process.env.REACT_APP_API_ACCOUNT + account);\n}\n\nconst getAccountHistory = async (account) => {\n    return await axios.get(`${process.env.REACT_APP_API_ACCOUNT}${account}/operations?reverse=1`);\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.isLogin) {\n            this.onLogin(this.props.account.address, this.props.account.privateKey);\n        }\n\n        this.state = {\n            mode: SHOW_PRIVATE,\n            isPriv: true,\n            isActive: false,\n\n            isAlertShow: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            isShowLoad: false,\n            isRedirect: false,\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertShow: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertShow: false\n        });\n    }\n\n    onLogin(addr, priv) {\n        if (!isAddressValid(addr) || !isPrivateKeyValid(priv)) {\n            this.openAlert('지갑 열기 실패 :(', '주소 혹은 키 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        let pubKey;\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            this.openAlert('지갑 열기 실패 :(', '유효하지 않은 개인키입니다.');\n            return;\n        }\n\n        getAccountHistory(addr)\n            .then(\n                res => {\n                    this.props.setHistory(res.data, addr);\n                }\n            )\n            .catch(\n                e => {\n                    this.props.setHistory(null, addr);\n                }\n            )\n\n        getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, pubKey, res.data);\n                            return;\n                        }\n                    }\n                    this.openAlert('지갑 열기 실패 :(', `계정 [${addr}]의 멤버에 해당 키가 존재하지 않습니다.`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    this.openAlert('지갑 열기 실패 :(', '유효하지 않은 주소 혹은 네트워크 문제로 계정 조회에 실패하였습니다.');\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case SHOW_PRIVATE:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n            case SHOW_RESTORE:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    async onStartLogin(addr, priv) {\n        this.setState({\n            isShowLoad: true\n        });\n\n        await Sleep(2000);\n\n        this.onLogin(addr, priv);\n        if (!(this.props.isLogin && this.props.isLoadHistory)) {\n            this.setState({\n                isShowLoad: false\n            });\n        }\n    }\n\n    render() {\n        if(this.props.isLogin && this.props.isLoadHistory) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />\n        }\n\n        return (\n            <div className=\"login-container\">\n                <div id='login-main'\n                    style={{\n                        display: this.state.isShowLoad ? 'none' : 'flex'\n                    }}>\n                    <h1>OPEN WALLET</h1>\n                    <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_PRIVATE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Private Key</div>\n                        </label>\n\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_RESTORE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Restore Key</div>\n                        </label>\n                    </div>\n                    <AlertModal isOpen={this.state.isAlertShow} onClose={() => this.closeAlert()}\n                        title={this.state.alertTitle} msg={this.state.alertMsg} />\n                    {this.renderForm()}\n                </div>\n                <div id='login-load'\n                    style={{\n                        display: this.state.isShowLoad ? 'flex' : 'none'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    isLoadHistory: state.login.isLoadHistory\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, publicKey, data) => dispatch(login(address, privateKey, publicKey, data)),\n    setHistory: (data, me) => dispatch(setHistory(data, me)),\n    clearHistory: () => dispatch(clearHistory())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PublicKeyModal.scss\";\n\nconst key = (k) => {\n    return (\n        <li key={k}\n            onClick={() => {\n                copy(k);\n                alert('copied');\n            }}>{k}</li>\n    );\n}\n\nclass PublicKeyModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, account } = this.props;\n        return (\n            <div className={isOpen ? 'pub-openModal pub-modal' : 'pub-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Public Key List\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {account.publicKeys.map(x => key(x.key))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    account: state.login.account\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PublicKeyModal));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PendingModal.scss\";\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER } from '../../text/mode';\n\nconst job = (x) => {\n    return (\n        <li key={x.hash}\n            onClick={() => { copy(x.hash); alert('copied'); }}>\n            <p>{x.broadcastedAt}</p>\n            <p>{x.operation === OPER_CREATE_ACCOUNT\n                ? 'CREATE-ACCOUNT'\n                : (\n                    x.operation === OPER_TRANSFER\n                        ? 'TRANSFER'\n                        : 'UPDATE-KEY'\n                )\n            }</p>\n            <p>{x.hash}</p>\n        </li>\n    );\n}\n\nclass PendingModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, queue } = this.props;\n        return (\n            <div className={isOpen ? 'pend-openModal pend-modal' : 'pend-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Operation Facts in Pending...\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {queue.queue.map(x => job(x))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    queue: state.queue.queue\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PendingModal));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { dequeueOperation, login } from '../store/actions';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport PublicKeyModal from '../components/modals/PublicKeyModal';\nimport PendingModal from '../components/modals/PendingModal';\nimport axios from 'axios';\n\nimport * as mode from '../text/mode';\nimport { isAccountValid } from '../lib/Validation';\n\nimport Sleep from '../lib/Sleep';\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <p className=\"currency\">{bal.currency}</p>\n            <p className=\"amount\">{bal.amount}</p>\n        </li>\n    );\n}\n\nconst history = (hist) => {\n    return (\n        <li key={hist.hash + hist.target} onClick={() => {\n            copy(hist.hash);\n            alert('fact hash copied!');\n        }}>\n            <p id={hist.confirmation}>{hist.confirmation}</p>\n            <p id={hist.direction}>{hist.direction}</p>\n            <p id='confirmed-at'>{hist.confirmedAt}</p>\n            <p id='target'>{hist.target}</p>\n            <p id='currency'>{hist.currency}</p>\n            <p id='amount'>{hist.amount}</p>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '0',\n    padding: '0'\n}\nconst lineStyle = {\n    width: '100%',\n    border: '2px solid white',\n    verticalAlign: 'middle',\n}\n\nconst title = (content) => {\n    return (\n        <div style={titleStyle}>\n            <div style={lineStyle}></div>\n            <p style={{\n                width: '100%',\n                textAlign: 'center',\n                verticalAlign: 'middle',\n                fontWeight: '400',\n                fontSize: '1.5em'\n            }}>{content}</p>\n            <div style={lineStyle}></div>\n        </div>\n    )\n}\n\nconst getFactInState = async (hash) => {\n    return await axios.get(process.env.REACT_APP_API_SEARCH_FACT + hash);\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isPubModalOpen: false,\n            isPendModalOpen: false,\n            isQueueUpdate: 1,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : mode.PAGE_LOGIN,\n            operation: undefined\n        }\n    }\n\n    async checkInState() {\n        while (!this.props.queue.isEmpty()) {\n            const target = this.props.queue.target;\n\n            if (!target) {\n                break;\n            }\n\n            var isResult = false;\n            getFactInState(target.hash)\n                .then(\n                    res => {\n                        if (res.request.status === 200) {\n                            this.props.deleteJob();\n                            this.setState({ isQueueUpdate: this.state.isQueueUpdate + 1 });\n                        }\n                    }\n                )\n                .catch(\n                    e => {\n                        console.log(e);\n                    }\n                )\n                .finally(() => {\n                    isResult = true;\n                });\n\n            while (!isResult) {\n                await Sleep(500);\n            }\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === mode.SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === mode.SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === mode.OPER_CREATE_ACCOUNT\n            || oper === mode.OPER_UPDATE_KEY\n            || oper === mode.OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: mode.PAGE_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    renderRedirect() {\n        if (!this.props.account || !isAccountValid(this.props.account)) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (!this.state.isRedirect) {\n            return false;\n        }\n\n        switch (this.state.redirect) {\n            case mode.PAGE_OPER:\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            case mode.PAGE_LOGIN:\n                return <Redirect to='/login' />\n            default: return false;\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n        this.checkInState();\n\n        setTimeout(() => {\n            this.refresh();\n        }, 5000);\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    closePubModal() {\n        this.setState({ isPubModalOpen: false });\n    }\n\n    openPubModal() {\n        this.setState({ isPubModalOpen: true });\n    }\n\n    closePendModal() {\n        this.setState({ isPendModalOpen: false });\n    }\n\n    openPendModal() {\n        this.setState({ isPendModalOpen: true });\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: mode.PAGE_LOGIN\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"wallet-container\">\n                {this.renderRedirect()}\n                <div className=\"wallet-ref\" ref={this.walletRef}></div>\n                <div id='wallet-refresh'><p onClick={() => this.refresh()}>↻</p></div>\n                <div className=\"wallet-info\">\n                    {title(\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\"))}\n                    <p id='address' onClick={() => this.openPubModal()}>{this.props.account.address}</p>\n                    <section className=\"wallet-amount\">\n                        {title('BALANCE')}\n                        <ul>\n                            {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(mode.OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(mode.OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(mode.OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-history\">\n                    {title('HISTORY')}\n                    <ul>\n                        {this.props.history.length > 0 ? this.props.history.map(x => history(x)) : false}\n                    </ul>\n                    <p id='pend' onClick={() => this.openPendModal()}>\n                        {this.state.isQueueUpdate ? `${this.props.queue.length} 개의 작업을 처리 중입니다.` : false}\n                    </p>\n                </div>\n                <PublicKeyModal onClose={() => this.closePubModal()} isOpen={this.state.isPubModalOpen} />\n                <PendingModal onClose={() => this.closePendModal()} isOpen={this.state.isPendModalOpen} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    queue: state.queue.queue\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    deleteJob: () => dispatch(dequeueOperation())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { version, key } from \"../text/hint.json\";\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n    state = {\n        privKey: \"\",\n        pubKey: \"\",\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        let privateKey = keypair.privKey.key + ':';\n        let publicKey = keypair.pubKey + ':';\n\n        switch (_type) {\n            case KEY_BTC:\n                privateKey += key.btc.priv;\n                publicKey += key.btc.pub;\n                break;\n            case KEY_ETHER:\n                privateKey += key.ether.priv;\n                publicKey += key.ether.pub;\n                break;\n            case KEY_STELLAR:\n                privateKey += key.stellar.priv;\n                publicKey += key.stellar.pub;\n                break;\n            default: throw new Error(\"Invalid key type\");\n        }\n\n        privateKey += '-' + version;\n        publicKey += '-' + version;\n\n        this.setState({\n            privKey: privateKey,\n            pubKey: publicKey\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","export default __webpack_public_path__ + \"static/media/mitum_wallet_manual.f34e6447.pdf\";","import React, { createRef } from 'react';\nimport Sleep from '../lib/Sleep';\nimport './Help.scss';\n\nimport pdfFile from '../mitum_wallet_manual.pdf';\nimport { pdfjs, Document, Page } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Help extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.pdfRef = createRef();\n\n        this.state = {\n            isShowExp: false,\n\n            numPages: null,\n            pageNumber: 1,\n        }\n    }\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({ numPages });\n    }\n\n    goToPrevPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n    goToNextPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n\n    async componentDidMount() {\n\n        await Sleep(1000);\n        this.setState({\n            isShowExp: true,\n        });\n        this.scrollToPdf();\n    }\n\n    scrollToPdf = () => {\n        if (this.pdfRef.current && this.state.isShowExp) {\n            this.pdfRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToPdf();\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n        return (\n            <div className=\"help-container\">\n                <div id='help-start' style={{\n                    display: this.state.isShowExp ? 'none' : 'flex'\n                }}>\n                    <h1>Wait...</h1>\n                </div>\n\n                <div ref={this.pdfRef} />\n                <div id='help-document' style={{\n                    display: this.state.isShowExp ? 'flex' : 'none'\n                }}>\n                    <a id='link' target=\"_blank\" download='manual.pdf'\n                        href={pdfFile} rel=\"noreferrer\">\n                        DOWNLOAD MANUAL\n                    </a>\n                    <Document\n                        file={pdfFile}\n                        onLoadSuccess={({ numPages }) => this.onDocumentLoadSuccess({ numPages })}>\n                        <Page pageNumber={pageNumber} />\n                    </Document>\n\n                    <p id='switch'>\n                        <span id='left' onClick={() => this.state.pageNumber > 1 ?\n                            this.setState({\n                                numPages: this.state.numPages,\n                                pageNumber: this.state.pageNumber - 1\n                            }) : null}>\n                            &lt;\n                        </span>\n                        <span>{pageNumber} / {numPages}</span>\n                        <span id='right' onClick={() => this.state.pageNumber < numPages ?\n                            this.setState({\n                                numPages: this.state.numPages,\n                                pageNumber: this.state.pageNumber + 1\n                            }) : null}>\n                            &gt;\n                        </span>\n                    </p>\n                    <p>가이드의 내용이 잘 보이지 않는 경우 상단의 DOWNLOAD MANUAL을 통해 파일을 직접 다운로드 하여 주시기 바랍니다.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../../store/actions';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport \"./OperationConfirm.scss\";\nimport { isOperation } from '../../lib/Validation';\n\nimport { OPER_CREATE_ACCOUNT, OPER_UPDATE_KEY, OPER_TRANSFER } from '../../text/mode';\nimport hint from '../../text/hint.json';\n\nconst broadcast = async (operation) => {\n    if (!isOperation(operation)) {\n        return undefined;\n    }\n\n    return await axios.post(process.env.REACT_APP_API_BROADCAST, operation);\n}\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false,\n        }\n    }\n\n    onSend(json) {\n        broadcast(json).then(\n            res => {\n                if (res.request.status === 200) {\n                    let data = undefined;\n                    switch (this.props.operation) {\n                        case OPER_CREATE_ACCOUNT:\n                            data = json.fact.items.map(x => x.keys.hash + ':' + hint.address + '-' + process.env.REACT_APP_VERSION);\n                            break;\n                        case OPER_UPDATE_KEY:\n                            data = json.fact.hash;\n                            break;\n                        case OPER_TRANSFER:\n                        default:\n                            data = undefined;\n                    }\n                    this.props.setResult(true, false, res.data, 200, data);\n                }\n                else {\n                    this.props.setResult(false, false, res.data, res.request.status, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        ).catch(\n            e => {\n\n                try {\n                    this.props.setResult(false, false, e.response.data, e.response.data.status, undefined);\n                }\n                catch(error) {\n                    this.props.setResult(false, false, {\n                        title: '404 Network Error'\n                    }, 404, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        );\n    }\n\n    renderRedirect() {\n        const { operation } = this.props;\n        switch (operation) {\n            case OPER_CREATE_ACCOUNT:\n            case OPER_TRANSFER:\n                return <Redirect to='/response'/>;\n            case OPER_UPDATE_KEY:\n                return <Redirect to='/loading'/>;\n            default:\n                alert('처리할 수 없는 타입의 작업입니다 :(\\n지갑 페이지로 이동합니다.');\n                return <Redirect to='/login' />;\n        }\n    }\n\n    render() {\n        const { isOpen, onClose, json, filename, download } = this.props;\n        return (\n            <div className={isOpen ? 'oper-openModal oper-modal' : 'oper-modal'}>\n                {this.state.isRedirect ? this.renderRedirect() : false}\n                {isOpen ? (\n                    <section>\n                        <header>\n                            이 작업을 전송하겠습니까?\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='oper-exp'>전송 버튼을 누른 후에는 작업을 되돌릴 수 없습니다.</p>\n                            <p id='oper-exp'>작업 내용이 정확한가요?</p>\n                            <span>\n                                <p className=\"oper-modal-button\" id=\"no\" onClick={onClose}>{\"취소!:(\"}</p>\n                                <a className=\"oper-modal-button\" id=\"no\" target=\"_blank\" download={`${filename}.json`}\n                                    href={download} rel=\"noreferrer\">\n                                    {\"JSON 파일 다운로드!:[\"}\n                                </a>\n                                <p className=\"oper-modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"전송!:)\"}</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    download: state.operation.download,\n    filename: state.operation.filename,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OperationConfirm));","import React from 'react';\nimport { key } from './SubInfo';\nimport './Keys.scss';\n\nfunction Keys({ keys, title }) {\n    return (\n        <section className='key-container'>\n            <p id='head'>{title}</p>\n            <div className='label'>\n                <p id='key'>KEY</p>\n                <p id='weight'>WEIGHT</p>\n            </div>\n            <ul>\n                {keys ? keys.map(x => key(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Keys;","export const balance = x => {\n    return (\n        <li key={x.currency}>\n            <p id='currency'>{x.currency}</p>\n            <p id='amount'>{x.amount}</p>\n        </li>\n    );\n}\n\nexport const key = x => {\n    return (\n        <li key={x.key}>\n            <p id='key'>{x.key}</p>\n            <p id='weight'>{x.weight}</p>\n        </li>\n    );\n}","import React from 'react';\nimport { balance } from './SubInfo';\nimport './Balances.scss';\n\nfunction Balances({ balances, title, labeled }) {\n    return (\n        <section className='balance-container'>\n            <p id='head'>{title}</p>\n            {labeled ? (\n                <div className='label'>\n                    <p id='currency'>CURRENCY ID</p>\n                    <p id='amount'>AMOUNT</p>\n                </div>\n            ) : false}\n            <ul className={labeled ? 'wide' : 'slim'}>\n                {balances ? balances.map(x => balance(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Balances;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './KeyAdder.scss';\n\nfunction KeyAdder(props) {\n\n    const { onKeyChange, onWeightChange, onAdd, isAddDisabled, pub, weight, useThres } = props;\n\n    return (\n        <section className='key-adder-container'>\n            <div className=\"key-adder\">\n                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                    value={pub}\n                    onChange={onKeyChange} />\n                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                    value={weight}\n                    onChange={onWeightChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n            {useThres\n                ? (\n                    <div className=\"thres-adder\">\n                        <p>THRESHOLD:</p>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={props.thres}\n                            onChange={props.onThresChange} />\n                    </div>\n                )\n                : false\n            }\n        </section>\n    );\n}\n\nexport default KeyAdder;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './AmountAdder.scss';\n\nfunction AmountAdder(props) {\n\n    const { onCurrencyChange, onAmountChange, currency, amount, isAddDisabled, onAdd } = props;\n\n    return (\n        <section className='amount-adder-container'>\n            <div className=\"amount-adder\">\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                    onChange={onCurrencyChange}\n                    value={currency} />\n                <InputBox\n                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                    value={amount}\n                    onChange={onAmountChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n        </section>\n    );\n}\n\nexport default AmountAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../../store/actions';\n\nimport './CreateAccount.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport Keys from '../infos/Keys';\nimport Balances from '../infos/Balances';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport AmountAdder from '../adders/AmountAdder';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_CREATE_ACCOUNT } from '../../text/mode';\nimport { isAmountValid, isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\nimport AlertModal from '../modals/AlertModal';\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            isModalOpen: false,\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n            const account = this.props.account;\n\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const createAccountsFact = generator.createCreateAccountsFact(\n                account.address,\n                [generator.createCreateAccountsItem(\n                    keys, amounts\n                )]\n            );\n\n            const createAccounts = generator.createOperation(createAccountsFact, \"\");\n            createAccounts.addSign(account.privateKey);\n\n            const created = createAccounts.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold)) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey)) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight)) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey, this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency)) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount)) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if(isDuplicate(this.state.currency, this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && (this.state.keys.length > 0 || this.state.amounts.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"ca-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <Balances title=\"CURRENT BALANCE LIST\" labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} labeled={true} />\n                        <KeyAdder\n                            onKeyChange={(e) => this.onChangePub(e)}\n                            onWeightChange={(e) => this.onChangeWeight(e)}\n                            onThresChange={(e) => this.onChangeThres(e)}\n                            onAdd={() => this.addKey()}\n                            isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                            pub={this.state.publicKey} weight={this.state.weight} thres={this.state.threshold}\n                            useThres={true} />\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <Balances title=\"AMOUNT LIST\" balances={this.state.amounts} labeled={true} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_CREATE_ACCOUNT, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(CreateAccount));","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ExtraAdder.scss';\n\nfunction ExtraAdder({ thres, currency, onCurrencyChange, onThresChange }) {\n\n    return (\n        <section className='extra-adder-container'>\n            <div className=\"thres-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n            <div className=\"currency-adder\">\n                <p>CURRENCY ID:</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                    value={currency}\n                    onChange={onCurrencyChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ExtraAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './UpdateKey.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\nimport Keys from '../infos/Keys';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport ExtraAdder from '../adders/ExtraAdder';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { setOperation } from '../../store/actions';\n\nimport { OPER_UPDATE_KEY } from '../../text/mode';\nimport AlertModal from '../modals/AlertModal';\nimport { isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false });\n    }\n\n    onClick() {\n        if(!isCurrencyValid(this.state.currency)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n            const account = this.props.account;\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const keyUpdaterFact = generator.createKeyUpdaterFact(\n                account.address, this.state.currency, keys\n            );\n\n            const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n            keyUpdater.addSign(account.privateKey);\n\n            const created = keyUpdater.dict();\n            \n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold)) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey)) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight)) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey, this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"uk-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <Keys title='CURRENT KEY LIST' keys={account.publicKeys} />\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <Keys title='NEW KEY LIST' keys={this.state.keys} />\n                        <section className='uk-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ExtraAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                                thres={this.state.threshold} currency={this.state.currency} />\n                        </section>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_UPDATE_KEY, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(UpdateKey));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Transfer.scss';\n\nimport InputBox from '../InputBox';\nimport AmountAdder from '../adders/AmountAdder';\nimport Balances from '../infos/Balances';\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_TRANSFER } from '../../text/mode';\nimport { setOperation } from '../../store/actions';\nimport AlertModal from '../modals/AlertModal';\nimport { isAddressValid, isAmountValid, isCurrencyValid, isDuplicate } from '../../lib/Validation';\n\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if(!isAddressValid(this.state.address)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', 'receiver address 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n            const account = this.props.account;\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const transfersFact = generator.createTransfersFact(\n                account.address,\n                [generator.createTransfersItem(\n                    this.state.address, amounts\n                )]\n            );\n\n            const transfers = generator.createOperation(transfersFact, \"\");\n            transfers.addSign(account.privateKey);\n\n            const created = transfers.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        if(!isCurrencyValid(this.state.currency)) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if(!isAmountValid(this.state.amount)) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if(isDuplicate(this.state.currency, this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"tf-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <Balances title='CURRENT BALANCE LIST' labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"tf-amounts\">\n                        <Balances title='AMOUNT LIST' labeled={true} balances={this.state.amounts} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                        <div className='tf-address-adder'>\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </div>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_TRANSFER, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(Transfer));","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/operations/CreateAccount';\nimport UpdateKey from '../components/operations/UpdateKey';\nimport Transfer from '../components/operations/Transfer';\nimport { connect } from 'react-redux';\n\nimport * as mode from '../text/mode';\nimport { isStateValid } from '../lib/Validation';\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!isStateValid(this.props)\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n\n            this.state = {\n                isRedirect: true,\n                account: undefined,\n                operation: undefined\n            };\n            return;\n        }\n\n        this.state = {\n            isRedirect: this.props.isLogin ? false : true,\n            account: this.props.account,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    render() {\n        let redirect;\n        if (this.props.isLogin) {\n            redirect = `/wallet/${this.props.account.address}`;\n        }\n        else {\n            redirect = '/login';\n        }\n\n        return (\n            <div className=\"oper-container\">\n                {this.state.isRedirect ? <Redirect to={redirect} /> : false}\n                {this.state.operation === mode.OPER_CREATE_ACCOUNT ?\n                    <CreateAccount account={this.state.account} /> : (\n                        this.state.operation === mode.OPER_UPDATE_KEY ?\n                            <UpdateKey account={this.state.account} /> : (\n                                this.state.operation === mode.OPER_TRANSFER ?\n                                    <Transfer account={this.state.account} /> : <Redirect to={redirect} />\n                            ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\n\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nimport { TYPE_CREATE_ACCOUNT, TYPE_UPDATE_KEY, TYPE_TRANSFER } from '../text/mode';\nimport { isDuplicate, isOperation, isStateValid } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\nimport AlertModal from '../components/modals/AlertModal';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nconst getOperationFromType = (type) => {\n    switch (type) {\n        case TYPE_CREATE_ACCOUNT:\n            return OPER_CREATE_ACCOUNT;\n        case TYPE_UPDATE_KEY:\n            return OPER_UPDATE_KEY;\n        case TYPE_TRANSFER:\n            return OPER_TRANSFER;\n        default:\n            return OPER_DEFAULT;\n    }\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n\n        if (!isStateValid(this.props) || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true\n            }\n            return;\n        }\n\n        this.props.setJson(OPER_DEFAULT, null);\n\n        this.state = {\n            isRedirect: false,\n\n            isModalOpen: false,\n            isJsonOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {!(this.props.operation === OPER_DEFAULT)\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                            {JSON.stringify(this.props.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const json = this.props.json;\n            try {\n                const parsed = JSON.parse(reader.result);\n                if (!isOperation(parsed)) {\n                    this.openAlert('파일을 불러올 수 없습니다 :(', '[memo, hash, _hint, fact, fact_signs]를 포함한 JSON 파일을 사용해 주세요.');\n                }\n                else {\n                    const operation = getOperationFromType(parsed._hint);\n                    this.props.setJson(operation, parsed);\n                }\n            }\n            catch (e) {\n                if (json) {\n                    const operation = getOperationFromType(json._hint);\n                    this.props.setJson(operation, json);\n                }\n                this.openAlert('파일을 불러올 수 없습니다 :(', 'JSON 형식의 파일을 사용해 주세요.');\n            }\n        };\n        reader.readAsText(file, \"utf-8\");\n\n    }\n\n    onClickSend() {\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n        let target = this.props.json;\n\n        if (!isOperation(target)) {\n            return;\n        }\n\n        if(isDuplicate(this.props.account.publicKey, this.props.json.fact_signs.map(x => x.signer))){\n            this.openAlert('서명 추가 실패 :(', '이미 서명 된 작업입니다.');\n            return;\n        }\n\n        const signer = new Signer(process.env.REACT_APP_NETWORK_ID, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.openAlert('서명 추가 완료 :D', '작업에 서명을 추가하였습니다.');\n        }\n        catch (e) {\n            const operation = getOperationFromType(target._hint);\n            this.props.setJson(operation, target);\n            this.openAlert('서명 추가 실패 :(', '서명을 추가하는 도중 오류가 발생하였습니다.');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n\n        return (\n            <div className=\"sign-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.props.json && Object.prototype.hasOwnProperty.call(this.props.json, 'fact')\n                                        ? this.props.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.props.json ? this.props.json._hint : 'NONE'}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <p id='body'>{this.props.json ? (\n                                this.props.json.fact_signs.map(x => x).length !== 0\n                                    ? (\n                                        this.props.json.fact_signs.map(x => x).length === 1\n                                            ? `${this.props.json.fact_signs.map(x => x).length} signature`\n                                            : `${this.props.json.fact_signs.map(x => x).length} signatures`\n                                    )\n                                    : 'No signature'\n                            ) : 'No signature'}</p>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.props.json\n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                        ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n\n    operation: state.operation.operation,\n    json: state.operation.json,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sign));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" \n                            to={{\n                                pathname: '/sign',\n                                state: {\n                                    json: undefined\n                                }\n                            }}>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout, clearHistory, clearQueue } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n        this.props.clearHistory();\n        this.props.clearQueue();\n    }\n    \n    render() {\n        return !this.props.isLogin\n            ? <Redirect to=\"/login\" />\n            : <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n    clearHistory: () => dispatch(clearHistory()),\n    clearQueue: () => dispatch(clearQueue())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './LogoutConfirm.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions';\n\nclass LogoutConfirm extends React.Component {\n\n    onLogout() {\n        this.props.signOut();\n        this.props.onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            <div className={isOpen ? 'logout-openModal logout-modal' : 'logout-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Wallet Closed\n                            <button className=\"close\" onClick={() => this.onLogout()}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='logout-exp'>지갑이 닫힙니다. 변경된 비밀키로 지갑을 다시 열어주세요.</p>\n                            <p id='logout-exp'>* 작업 실패 시에는 기존 비밀키를 사용해야 합니다.</p>\n                            <span>\n                                <p className=\"logout-modal-button\" id=\"confirm\" onClick={() => this.onLogout()}>확인</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(LogoutConfirm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { enqueueOperation, setOperation, setResponse } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\nimport LogoutConfirm from '../components/modals/LogoutConfirm';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst address = (keyHash) => {\n    return (\n        <li key={keyHash}>\n            <p onClick={() => onCopy(keyHash)}>{keyHash}</p>\n        </li>\n    )\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isSignOut = this.props.operation === OPER_UPDATE_KEY;\n\n        if (!isSignOut && this.props.isBroadcast) {\n            this.props.addJob({\n                operation: this.props.operation,\n                hash: this.props.json.fact.hash,\n                broadcastedAt: new Date().toISOString(),\n            });\n        }\n\n        this.state = {\n            isRedirect: false,\n            isModalOpen: isSignOut,\n            isSignOut,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    renderResponse() {\n        const { res, status, operation, data } = this.props;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        {\n                            operation === OPER_UPDATE_KEY\n                                ? <h1>KEY UPDATE SUCCESS~ :D</h1>\n                                : <h1>BROADCAST SUCCESS~ :D</h1>\n                        }\n                        <div>\n                            {operation === OPER_CREATE_ACCOUNT\n                                ? (\n                                    <section>\n                                        <h2>CREATED ADDRESS LIST</h2>\n                                        <ul>\n                                            {data.map(x => address(x))}\n                                        </ul>\n                                        <p>지갑 생성 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                ) : false\n                            }\n                            {operation === OPER_TRANSFER\n                                ? (\n                                    <section>\n                                        <p>송금 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                )\n                                : false\n                            }\n                        </div>\n                    </section>\n                )\n            case 400:\n            case 404:\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>{Object.prototype.hasOwnProperty.call(res, 'title') ? res.title : \"응답을 받지 못했습니다.\"}</p>\n                    </section>\n                );\n        }\n    }\n\n    renderRedirect() {\n        if (this.state.isRedirect) {\n            this.props.clearJson();\n            return <Redirect to='/login' />;\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"res-container\">\n                {this.renderRedirect()}\n                {this.renderResponse()}\n                <LogoutConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isStateIn: state.operation.isStateIn,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearJson: () => dispatch(setOperation(OPER_DEFAULT, {})),\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n    addJob: (hash) => dispatch(enqueueOperation(hash))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Response));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './UpdateKeyLoad.scss';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../store/actions';\n\nclass UpdateKeyLoad extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: !this.props.isBroadcast,\n            counter: 0,\n        }\n    }\n\n    renderRedirect() {\n        if (this.state.isRedirect) {\n            return (\n                <Redirect to='/response' />\n            )\n        }\n    }\n\n    getResponse() {\n        if (this.state.counter < 50) {\n            const { data, res, isBroadcast } = this.props;\n\n            const getResult = async (_hash, _res, isBroadcast) => {\n                if(!isBroadcast) {\n                    this.setState({\n                        isRedirect: true\n                    })\n\n                    return;\n                }\n\n                return await axios.get(process.env.REACT_APP_API_SEARCH_FACT + _hash)\n                    .then(\n                        response => {\n                            if (response.data._embedded.in_state) {\n                                this.props.setResult(true, true, _res, 200, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                            else {\n                                this.props.setResult(true, false, {\n                                    title: response.data._embedded.reason.msg\n                                }, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                })\n                            }\n                        }\n                    )\n                    .catch(\n                        e => {\n                            console.log(e.response.status);\n                            if (e.response.status === 404 || e.response.status === 400) {\n                                this.setState({\n                                    counter: this.state.counter + 1\n                                })\n                            }\n                            else {\n                                this.props.setResult(true, false, e.response.data, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                        }\n                    )\n            }\n\n            setTimeout((hs, rs, broad) => {\n                getResult(hs, rs, broad);\n            }, 2000, data, res, isBroadcast);\n\n            return () => this.getResponse();\n        }\n        else {\n            this.props.setResult(true, false, {\n                title: \"Too long time to stay response. Maybe mitum failed to process your operation. :(\"\n            }, 400, this.props.data);\n            this.setState({\n                isRedirect: true,\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    render() {\n        return (\n            <div className=\"load-container\">\n                {this.renderRedirect()}\n                <section className=\"load-detail\">\n                    <h1>Loading...</h1>\n                    <p>{\"키 업데이트 성공 여부를 조회 중입니다. 잠시만 기다려주세요.\"}</p>\n                    <p>{`REQUEST COUNT: ${this.state.counter}`}</p>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKeyLoad));","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\nimport UpdateKeyLoad from './views/UpdateKeyLoad';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/response\" component={Response} />\n          <Route path='/loading' component={UpdateKeyLoad} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst VERSION = require('./constant').VERSION;\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\nconst crypto = require('crypto');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type) {\n        if (type == 'unknown') {\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else {\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w) {\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold) {\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    get address() {\n        return this.hash.hash + ':' + Xhint.MC_ADDRESS + '-' + VERSION;\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n\n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n\n        const _keys = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch (type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', { canonical: true }).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length - 1));\n\n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n\n        const sig = ec.sign(_msg, sk, 'hex', { canonical: true }).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4 + rlen);\n        const slen = sig[5 + rlen];\n        const s = sig.slice(6 + rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n\n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n\n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if (_type == 'btc') {\n        return _btckp();\n    }\n    else if (_type == 'ether') {\n        return _ethkp();\n    }\n    else if (_type == 'stellar') {\n        return _stlkp();\n    }\n    else {\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if (_type == '') {\n        if (_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch (type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n    return null;\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}