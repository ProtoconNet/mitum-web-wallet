{"version":3,"sources":["../../mitum-js-util/lib/util.js","../../mitum-js-util/lib/hint.js","../../mitum-js-util/lib/seal.js","../../mitum-js-util/lib/sign.js","../../mitum-js-util/lib/constant.js","../../mitum-js-util/index.js","../../mitum-js-util/lib/operation.js","lib/Account.js","text/mode.js","lib/History.js","store/actions/index.js","store/reducers/LoginReducer.js","lib/Url.js","store/reducers/OperationReducer.js","store/reducers/QueueReducer.js","lib/Queue.js","store/reducers/NetworkReducer.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","lib/Validation.js","components/modals/AlertModal.js","views/Login.js","components/buttons/SelectButton.js","components/modals/PublicKeyModal.js","components/modals/PendingModal.js","lib/Sleep.js","views/Wallet.js","views/KeyGen.js","components/infos/Keys.js","components/infos/SubInfo.js","components/adders/ThresholdAdder.js","components/adders/KeyAdder.js","views/AddressGen.js","views/ResKeyGen.js","mitum_wallet_manual.pdf","views/Help.js","components/modals/OperationConfirm.js","components/infos/Balances.js","components/adders/AmountAdder.js","components/operations/CreateAccount.js","components/adders/ExtraAdder.js","components/operations/UpdateKey.js","components/operations/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","views/NetworkSetter.js","components/Footer.js","components/modals/LogoutConfirm.js","views/Response.js","views/UpdateKeyLoad.js","components/SubNavigation.js","App.js","reportWebVitals.js","index.js","../../mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","ISOToUTC","iso","rtime","t","indexOf","z","Error","_time","substring","dotIdx","decimal","idx","lastIndexOf","startIdx","module","exports","_hint","type","VERSION","parseHinted","hinted","parsed","hintless","hint","getTypeFromHint","getTimeStamp","Date","dateToUTC","date","toISOString","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","MBS_CREATE_DOCUMENTS_SINGLE_FILE","MBS_CREATE_DOCUMENTS_OP_FACT","MBS_CREATE_DOCUMENTS_OP","MBS_TRANSFER_ITEM_SINGLE_DOCUMENT","MBS_TRANSFER_DOCUMENTS_OP_FACT","MBS_TRANSFER_DOCUMENTS_OP","MBS_SIGN_ITEM_SINGLE_DOCUMENT","MBS_SIGN_DOCUMENTS_OP_FACT","MBS_SIGN_DOCUMENTS_OP","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","BLOCKSIGN_CREATE_DOCUMENTS","BLOCKSIGN_SIGN_DOCUMENTS","BLOCKSIGN_TRANSFER_DOCUMENTS","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","fileHash","did","signcode","title","size","signers","signcodes","CreateDocumentsItem","owner","SignDocumentsItem","TransferDocumentsItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","BlockSignFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","_VERSION","toKeypair","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","BlockSignItem","bkeys","bamounts","item","breceiver","bfh","bdid","bscode","btitle","bsize","bsigners","bscodes","filehash","documentid","bowner","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","Account","priv","pub","data","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","sort","y","localeCompare","publicKey","btc","process","ether","stellar","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","OPER_DEFAULT","PAGE_LOGIN","PAGE_OPER","SHOW_PRIVATE","SHOW_RESTORE","TYPE_CREATE_ACCOUNT","operation","create_account","TYPE_UPDATE_KEY","update_key","TYPE_TRANSFER","transfer","History","history","me","inState","in_state","confirmedAt","confirmed_at","setItems","account","LOGIN","LOGOUT","SET_HISTORY","CLEAR_HISTORY","SET_OPERATION","SET_RESPONSE","ENQUEUE_OPERATION","DEQUEUE_OPERATION","CLEAR_QUEUE","SET_NETWORK","CLEAR_NETWORK","SET_NETWORK_ID","CLEAR_NETWORK_ID","login","restoreKey","logout","clearHistory","setOperation","json","setResponse","isBroadcast","isStateIn","res","status","initialState","isLogin","isLoadHistory","download","Object","prototype","hasOwnProperty","call","file","File","alert","URL","createObjectURL","mode","filename","queue","shift","isEmpty","network","networkAccount","networkBroadcast","networkSearchFact","networkId","rootReducer","combineReducers","state","action","actions","enque","deque","clear","id","store","createStore","Home","props","isRedirect","setState","to","className","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","name","autoComplete","autoCorrect","autoCapitalize","autoSave","autoFocus","textTransform","onChange","placeholder","useCopy","copy","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","trim","RestoreKeyLoginBox","isOperation","isPublicKeyValid","pubk","test","keyHint","isAddressValid","addressHint","isNum","isThresholdValid","thres","thresNum","isWeightValid","isWeightsValidToThres","weights","total","isCurrencyValid","currencies","isDuplicate","isAmountValid","list","AlertModal","isOpen","onClose","Login","isPriv","isActive","isAlertShow","alertTitle","alertMsg","isShowLoad","a","axios","get","_addr","_priv","pk","isPrivateKeyValid","pubKey","openAlert","getAccountHistory","then","setHistory","catch","getAccountInformation","pubKeys","signIn","radio","document","querySelector","onStartLogin","checked","closeAlert","renderForm","withRouter","connect","dispatch","histories","splitHistories","_i","j","_j","_z","confirmation","direction","SelectButton","PublicKeyModal","k","PendingModal","broadcastedAt","job","Sleep","ms","Promise","resolve","setTimeout","titleStyle","flexDirection","alignItems","justifyContent","width","margin","padding","content","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isPubModalOpen","isPendModalOpen","isQueueUpdate","redirect","isResult","getFactInState","request","deleteJob","finally","isDetailVisible","isPrivVisible","isResVisible","checkInState","refresh","pathname","ref","openPubModal","bal","onSelect","hist","openPendModal","closePubModal","closePendModal","KeyGen","privKey","getPrivateKey","getKey","ThresholdAdder","onThresChange","KeyAdder","onKeyChange","onWeightChange","onAdd","isAddDisabled","useThres","AddressGen","isAlertOpen","generator","formatKey","createKeys","createdRef","onChangePub","onChangeWeight","addKey","onChangeThres","getAddress","ResKeyGen","pdfjs","GlobalWorkerOptions","workerSrc","version","Help","goToPrevPage","pageNumber","goToNextPage","scrollToPdf","pdfRef","isShowExp","numPages","href","pdfFile","rel","onLoadSuccess","onDocumentLoadSuccess","OperationConfirm","post","broadcast","setResult","response","onSend","Balances","labeled","AmountAdder","onCurrencyChange","onAmountChange","CreateAccount","scrollToInput","titleRef","isModalOpen","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","created","setJson","onChangeCurrency","onChangeAmount","addAmount","closeModal","ExtraAdder","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","location","renderOperation","preStyle","overflow","whiteSpace","getOperationFromType","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","files","reader","FileReader","onload","result","readAsText","signOperation","openJSON","jsonView","importJSON","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","clearQueue","NetworkSetter","setNetwork","setNetworkId","clearNetwork","clearNetworkId","onNetworkChange","onNetworkIdChange","Footer","LogoutConfirm","onLogout","keyHash","Response","isSignOut","addJob","clearJson","renderResponse","UpdateKeyLoad","counter","getResult","_hash","_res","reason","hs","rs","broad","getResponse","SubNavigation","isChecked","for","onCheck","onCheckOut","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","BaseKey","w","karr","sortedkeys","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","sig","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"gJAAMA,EAASC,EAAQ,KACjBC,EAASD,EAAQ,KACjBE,EAASF,EAAQ,KACfG,EAAaH,EAAQ,KAArBG,SAQFC,E,wBAKF,WAAYC,GAAK,UACbC,KAAKD,IAAME,OAAOF,GAClBC,KAAKE,IAAMH,E,6BAQf,WACI,OAAOC,KAAKE,M,oBAQhB,WACI,OAAIF,KAAKD,IAAM,EAAYE,QAAQD,KAAKG,OAC1BH,KAAKD,M,sBAGvB,WACI,OAAQC,KAAKE,IAAM,EAAK,EAAIE,KAAKC,KAAMD,KAAKE,IAAIN,KAAKE,KAAOE,KAAKE,IAAI,GAAM,K,oBAQ/E,WACI,GAAIN,KAAKO,WAAa,EAClB,KAAM,2BAEV,IAAMC,EAAO,IAAIX,EAASY,SAAST,KAAKU,WACxC,OAAOV,KAAKW,SAASH,EAAKI,c,oBAQ9B,WACI,GAAIZ,KAAKO,WAAa,EAClB,KAAM,2BAEV,IAAIM,EAAUC,EAAOC,MAAMf,KAAKO,YAC1BS,EAAOF,EAAOC,MAAM,EAAIf,KAAKO,YAKnC,OAHAM,EAAQI,YAAYjB,KAAKE,IAAK,EAAGF,KAAKO,YACtCM,EAAUb,KAAKW,SAASE,GAEjBC,EAAOI,OAAO,CAACL,EAASG,M,mBAQnC,WACI,GAAIhB,KAAKO,WAAa,EAClB,KAAM,2BAEV,IAAMY,EAAOL,EAAOC,MAAMf,KAAKO,YAE/B,OADAY,EAAKC,YAAYpB,KAAKE,IAAK,EAAGF,KAAKO,YAC5BY,I,sBASX,SAASE,GAEL,IADA,IAAMF,EAAOL,EAAOQ,KAAKD,GAChBE,EAAI,EAAGA,EAAIJ,EAAKK,OAAS,EAAGD,IAAK,CACtC,IAAME,EAAMN,EAAKI,GACjBJ,EAAKI,GAAKJ,EAAKA,EAAKK,OAAS,EAAID,GACjCJ,EAAKA,EAAKK,OAAS,EAAID,GAAKE,EAEhC,OAAON,M,KAgFTO,EAAW,SAACC,GACd,IAEIC,EAFEC,EAAIF,EAAIG,QAAQ,KAClBC,EAAIJ,EAAIG,QAAQ,KAOpB,GAJGC,EAAI,IACHA,EAAIJ,EAAIG,QAAQ,MAGjBC,EAAI,EACH,MAAM,IAAIC,MAAM,iCAGpB,IAAIC,EAAQN,EAAIO,UAAUL,EAAI,EAAGE,GAC9BE,EAAMT,OAAS,KACdS,EAAQA,EAAMC,UAAU,EAAG,KAG/B,IAAMC,EAASF,EAAMH,QAAQ,KAC7B,GAAIK,EAAS,EACTP,EAAQK,MAEP,CACD,IAAMG,EAAUH,EAAMC,UAAU,EAAGD,EAAMT,QACnCa,EAAMD,EAAQE,YAAY,KAChC,GAAID,EAAM,GAAKA,GAAOD,EAAQZ,OAAS,EACnCI,EAAQK,MAEP,CAED,IADA,IAAIM,EAAWH,EAAQZ,OAAS,EACvBD,EAAIa,EAAQZ,OAAS,EAAGD,GAAK,GAChB,KAAda,EAAQb,GADyBA,IAEjCgB,EAAWhB,EAQfK,EADW,GAAZW,EACSN,EAAMC,UAAU,EAAGC,GAGnBF,EAAMC,UAAU,EAAGC,GAAU,IAAMC,EAAQF,UAAU,EAAGK,IAK5E,OAAOZ,EAAIO,UAAU,EAAGL,GAAK,IAAMD,EAAQ,cAuC/CY,EAAOC,QAAU,CACb3C,aACA4C,MA/JU,SAACC,GACX,OAAOA,EAAO,IAAMlD,EAAOmD,SA+J3BC,YAtJgB,SAACC,GACjB,IAAMT,EAAMS,EAAOhB,QAAQ,KACrBiB,EAAS,GAEf,IAAa,IAATV,EACA,KAAM,gCAEL,IAA6B,IAAzBS,EAAOhB,QAAQ,KACpB,KAAM,8BAMV,OAHAiB,EAAOC,SAAWF,EAAOZ,UAAU,EAAGG,GACtCU,EAAOE,KAAOH,EAAOZ,UAAUG,EAAM,GAE9BU,GAyIPG,gBAhIoB,SAACD,GACrB,IAAMZ,EAAMY,EAAKX,YAAY,KAE7B,IAAa,IAATD,EACA,KAAM,8BAGV,OAAOY,EAAKf,UAAU,EAAGG,IA0HzBc,aAlHiB,WACjB,OAAO,IAAIC,MAkHXC,UAxGc,SAACC,GACf,OAAO5B,EAAS4B,EAAKC,gBAwGrB7B,WACA8B,sBAtC0B,SAACC,GAG3B,IAFA,IAAIC,EAAW5C,EAAOC,MAAM,GAEnBQ,EAAI,EAAGA,EAAIkC,EAAIjC,OAAQD,IAC5BmC,EAAW5C,EAAOI,OAAO,CAACwC,EAAUD,EAAIlC,GAAGoC,WAG/C,OAAOD,GAgCPE,OAvBW,SAACC,GACZ,OAAOlE,EAAOmE,WAAW,UAAUC,OAAOF,GAAKG,UAuB/CC,OAdW,SAACJ,GACZ,OAAO/C,EAAOQ,KAAK1B,EAAOsE,SAASC,SAASJ,OAAOF,GAAKG,c,0CCzQ5DvB,EAAQ2B,WAAa,MACrB3B,EAAQ4B,qBAAuB,0CAC/B5B,EAAQ6B,gBAAkB,qCAC1B7B,EAAQ8B,OAAS,qBACjB9B,EAAQ+B,QAAU,sBAClB/B,EAAQgC,2BAA6B,gDACrChC,EAAQiC,sBAAwB,2CAChCjC,EAAQkC,sBAAwB,2CAChClC,EAAQmC,iBAAmB,sCAC3BnC,EAAQoC,eAAiB,oCACzBpC,EAAQqC,UAAY,+BACpBrC,EAAQsC,WAAa,yBACrBtC,EAAQuC,aAAe,2BACvBvC,EAAQwC,OAAS,qBACjBxC,EAAQyC,WAAa,yBACrBzC,EAAQ0C,iBAAmB,+BAC3B1C,EAAQ2C,YAAc,iCACtB3C,EAAQ4C,8BAAgC,mDACxC5C,EAAQ6C,yBAA2B,8CACnC7C,EAAQ8C,UAAY,wBACpB9C,EAAQ+C,gBAAkB,8BAC1B/C,EAAQgD,oCAAsC,kDAC9ChD,EAAQiD,iCAAmC,+CAC3CjD,EAAQkD,gCAAkC,8CAC1ClD,EAAQmD,gCAAkC,8CAC1CnD,EAAQoD,6BAA+B,kDACvCpD,EAAQqD,wBAA0B,6CAClCrD,EAAQsD,mBAAqB,iCAC7BtD,EAAQuD,aAAe,2BACvBvD,EAAQwD,eAAiB,6BACzBxD,EAAQyD,eAAiB,6BACzBzD,EAAQ0D,mCAAqC,wDAC7C1D,EAAQ2D,8BAAgC,mDACxC3D,EAAQ4D,mBAAqB,iCAG7B5D,EAAQ6D,KAAO,mBACf7D,EAAQ8D,KAAO,eACf9D,EAAQ+D,eAAiB,KACzB/D,EAAQgE,gBAAkB,eAC1BhE,EAAQiE,gBAAkB,cAC1BjE,EAAQkE,YAAc,WACtBlE,EAAQmE,YAAc,UACtBnE,EAAQoE,cAAgB,aACxBpE,EAAQqE,cAAgB,YACxBrE,EAAQsE,YAAc,cACtBtE,EAAQuE,SAAW,WACnBvE,EAAQwE,YAAc,cACtBxE,EAAQyE,cAAgB,gBACxBzE,EAAQ0E,iBAAmB,mBAC3B1E,EAAQ2E,cAAgB,gBACxB3E,EAAQ4E,iBAAmB,mBAC3B5E,EAAQ6E,mBAAqB,qBAC7B7E,EAAQ8E,UAAY,YACpB9E,EAAQ+E,SAAW,QACnB/E,EAAQgF,kBAAoB,iBAC5BhF,EAAQiF,wBAA0B,uBAClCjF,EAAQkF,uBAAyB,sBACjClF,EAAQmF,eAAiB,iBACzBnF,EAAQoF,KAAO,OACfpF,EAAQqF,oBAAsB,sBAC9BrF,EAAQsF,UAAY,YACpBtF,EAAQuF,kBAAoB,2BAC5BvF,EAAQwF,eAAiB,wBACzBxF,EAAQyF,SAAW,QACnBzF,EAAQ0F,kBAAoB,oBAC5B1F,EAAQ2F,qBAAuB,uBAC/B3F,EAAQ4F,mBAAqB,qBAC7B5F,EAAQ6F,mBAAqB,qBAC7B7F,EAAQ8F,kBAAoB,oBAC5B9F,EAAQ+F,mBAAqB,qBAC7B/F,EAAQgG,aAAe,YAIvBhG,EAAQiG,aAAe,YACvBjG,EAAQkG,kBAAoB,oBAC5BlG,EAAQmG,kBAAoB,oBAC5BnG,EAAQoG,iBAAmB,mBAE3BpG,EAAQqG,QAAU,gBAGlBrG,EAAQsG,iCAAmC,+CAC3CtG,EAAQuG,6BAA+B,kDACvCvG,EAAQwG,wBAA0B,6CAClCxG,EAAQyG,kCAAoC,gDAC5CzG,EAAQ0G,+BAAiC,oDACzC1G,EAAQ2G,0BAA4B,+CACpC3G,EAAQ4G,8BAAgC,4CACxC5G,EAAQ6G,2BAA6B,gDACrC7G,EAAQ8G,sBAAwB,4C,qDC3F1BC,EAAQ9J,EAAQ,KAChB+J,EAAQ/J,EAAQ,KAChBgK,EAAQhK,EAAQ,KAChBiK,EAAQjK,EAAQ,KAChBkK,EAAOlK,EAAQ,IAGfmK,EAAOnK,EAAQ,IAwDfoK,E,wBAKF,WAAYC,GAAO,UACf/J,KAAK+J,MAAQA,EAEb/J,KAAKgK,2BAA6B,mBAClChK,KAAKiK,yBAA2B,iBAChCjK,KAAKkK,6BAA+B,qB,0BAOxC,WACI,OAAOlK,KAAK+J,Q,0BAQhB,SAAaI,GACTnK,KAAK+J,MAAQI,I,uBAUjB,SAAUC,EAAKC,GACX,IAA0B,IAAtBD,EAAItI,QAAQ,KACZ,KAAM,sBAEV,GAAwB,kBAAZuI,EACR,KAAM,yBAEV,MAAO,CACHD,IAAKA,EACLC,OAAQA,K,0BAWhB,SAAatK,EAAKuK,GACd,GAAqB,kBAATvK,EACR,KAAM,yBAEV,GAAIuK,EAAI9I,OAAS,EACb,KAAM,8BAEV,MAAO,CACHzB,IAAKA,EACLuK,IAAKA,K,wBAWb,SAAWC,EAAMC,GACb,OA5HQ,SAACC,EAAID,GAGjB,IAFA,IAAME,EAAQ,GAELnJ,EAAI,EAAGA,EAAIkJ,EAAGjJ,OAAQD,IAC3BmJ,EAAMC,KACF,IAAIf,EAAKgB,IACLH,EAAGlJ,GAAG6I,IACNK,EAAGlJ,GAAG8I,SAUlB,OALa,IAAIT,EAAKiB,KAClBH,EACAF,GA8GOM,CAAQP,EAAMC,K,2BASzB,SAAcO,GACV,OA5GW,SAACA,GAGhB,IAFA,IAAMC,EAAW,GAERzJ,EAAI,EAAGA,EAAIwJ,EAAKvJ,OAAQD,IAC7ByJ,EAASL,KACL,IAAInB,EAAMyB,OACNF,EAAKxJ,GAAGxB,IACRgL,EAAKxJ,GAAG+I,MAKpB,OAAOU,EAgGIE,CAAWH,K,sCAUtB,SAAyBR,EAAMQ,GAC3B,IAAMI,EAAQJ,EAAKvJ,QAAU,EAAImI,EAAMjE,iCAAmCiE,EAAMlE,oCAChF,OAAO,IAAI+D,EAAM4B,mBACbD,EAAOZ,EAAMQ,K,iCAWrB,SAAoBM,EAAUN,GAC1B,IAAMI,EAAQJ,EAAKvJ,QAAU,EAAImI,EAAM/D,gCAAkC+D,EAAMhE,gCAC/E,OAAO,IAAI6D,EAAM8B,cACbH,EAAOE,EAAUN,K,uCAIzB,SAA0BQ,EAAUC,EAAKC,EAAUC,EAAOC,EAAMrB,EAAKsB,EAASC,GAC1E,OAAO,IAAIrC,EAAMsC,oBACbnC,EAAMZ,iCACNwC,EACAC,EACAC,EACAC,EACAC,EACArB,EACAsB,EACAC,K,qCAIR,SAAwBE,EAAOP,EAAKlB,GAChC,OAAO,IAAId,EAAMwC,kBACbrC,EAAMN,8BACN0C,EACAP,EACAlB,K,yCAIR,SAA4ByB,EAAOV,EAAUG,EAAKlB,GAC9C,OAAO,IAAId,EAAMyC,sBACbtC,EAAMT,kCACN6C,EACAV,EACAG,EACAlB,K,sCAWR,SAAyB4B,EAAQC,GAC7B,OAAO,IAAI3C,EAAM4C,mBACbF,EAAQC,K,kCAYhB,SAAqBE,EAAQ/B,EAAKC,GAC9B,OAAO,IAAIf,EAAM8C,eACbD,EAAQ/B,EAAKC,K,iCAWrB,SAAoB2B,EAAQC,GACxB,OAAO,IAAI3C,EAAM+C,cACbL,EAAQC,K,iCAIhB,SAAoBxJ,EAAMuJ,EAAQC,GAC9B,IAAIhB,EACJ,OAAOxI,GACH,KAAK3C,KAAKgK,2BACNmB,EAAQxB,EAAMX,6BACd,MACJ,KAAKhJ,KAAKiK,yBACNkB,EAAQxB,EAAML,2BACd,MACJ,KAAKtJ,KAAKkK,6BACNiB,EAAQxB,EAAMR,+BACd,MACJ,QACI,KAAM,uCAGd,OAAO,IAAIK,EAAMgD,cACbrB,EACAe,EACAC,K,6BAWR,SAAgBM,EAAMC,GAClB,IAAIvB,EAEJ,GAAIsB,aAAgBjD,EAAM4C,mBACtBjB,EAAQxB,EAAMjF,2BAEb,GAAI+H,aAAgBjD,EAAM8C,eAC3BnB,EAAQxB,EAAM/E,sBAEb,GAAI6H,aAAgBjD,EAAM+C,cAC3BpB,EAAQxB,EAAMrF,oBAEb,MAAImI,aAAgBjD,EAAMgD,eAkB3B,KAAM,8BAhBN,OAAQC,EAAK9J,MACT,KAAKgH,EAAMX,6BACPmC,EAAQxB,EAAMV,wBACd,MACJ,KAAKU,EAAML,2BACP6B,EAAQxB,EAAMJ,sBACd,MACJ,KAAKI,EAAMR,+BACPgC,EAAQxB,EAAMP,0BACd,MACJ,QACI,KAAM,+BAQlB,OAAO,IAAII,EAAMmD,UACb3M,KAAK+J,MAAOoB,EAAOuB,EAAMD,K,wBAWjC,SAAWG,EAAIC,GAOX,IANA,IAAMC,EAAUrD,EAAMsD,WAAWH,GAC3BI,EAAWtD,EAAMvG,eACjB8J,EAAYnM,EAAOQ,KAAKoI,EAAMrG,UAAU2J,IACxCE,EAAUpM,EAAOQ,KAAKwL,EAAQK,gBAEhCC,EAAStM,EAAOQ,KAAK,IAChBC,EAAI,EAAGA,EAAIsL,EAAMrL,OAAQD,IAC9B6L,EAAStM,EAAOI,OAAO,CAACkM,EAAQP,EAAMtL,GAAG8L,OAG7C,IAAMC,EAAW5D,EAAMzF,OACnBnD,EAAOI,OAAO,CAACgM,EAASD,EAAWG,KAEjCG,EAAYT,EAAQU,KACtB1M,EAAOI,OACH,CAACoM,EAAUxM,EAAOQ,KAAKtB,KAAK+J,UAI9BsD,EAAO3D,EAAMzF,OACfnD,EAAOI,OAAO,CAACoM,EAAUC,KAGvBE,EAAO,GACbA,EAAK/K,MAAQgH,EAAMhH,MAAMiH,EAAM9B,MAC/B4F,EAAKJ,KAAOxD,EAAK6D,OAAOL,GACxBI,EAAKE,UAAY9D,EAAK6D,OAAOJ,GAC7BG,EAAKG,OAASd,EAAQK,eACtBM,EAAKF,UAAY1D,EAAK6D,OAAOH,GAC7BE,EAAKI,UAAYb,EAASzJ,cAE1B,IAAMuK,EAAa,GACnB,IAASvM,EAAI,EAAGA,EAAIsL,EAAMrL,OAAQD,IAC9BuM,EAAWnD,KAAKkC,EAAMtL,GAAGwM,QAI7B,OAFAN,EAAKK,WAAaA,EAEXL,M,KAQTO,EAAa,CAOfC,aAAc,SAACR,GACX,OAAOnH,KAAK4H,UAAUT,EAAM,KAAM,IAQtCU,aAAc,SAACV,EAAMW,GACN1O,EAAQ,KAChB2O,UAAUD,EAAO9H,KAAK4H,UAAUT,EAAM,KAAM,IAAI,SAACa,GAChD,GAAIA,EAAO,MAAMA,KAErBC,QAAQjO,IAAI,uBAAyB8N,EAAQ,kBAI/CI,EAAoB,SAACC,GACvB,IAAMvB,EAAUpM,EAAOQ,KAAKmN,EAAU,QAChCC,EAAQ7E,EAAK8E,OAAOF,EAAU,WAC9BG,EAAM9N,EAAOQ,KAAKoI,EAAMhI,SAAS+M,EAAU,YAEjD,OAAO3N,EAAOI,OAAO,CAACgM,EAASwB,EAAOE,KAWpCC,E,wBACF,WAAY9E,EAAO6C,GAAI,UACnB5M,KAAK+J,MAAQA,EACb/J,KAAK8O,QAAUlC,E,kCAEnB,SAASzC,GACLnK,KAAK+J,MAAQI,I,2BAGjB,SAAc4E,GACV,IAAMC,EAA6B,kBAAZD,EAA0BzI,KAAK2I,MAAMC,GAAGC,aAAaJ,WAC7DA,UAAoB,GAAMA,OAASK,EAClD,GAAKJ,EAAL,CAIA,IAAMK,EAAQ,GACRC,EAAWN,EAAM,KAAN,KACXO,EAAY1F,EAAK8E,OAAOW,GACxBE,EAAWR,EAAM,WAEvBQ,EAAS7E,KACLlB,EAAMgG,YACF3O,EAAOI,OAAO,CACVqO,EAAWzO,EAAOQ,KAAKtB,KAAK+J,SAEhC/J,KAAK8O,SACPf,QAEN,IAAM2B,EArCa,SAACC,GAExB,IADA,IAAIhM,EAAS7C,EAAOQ,KAAK,IAChBC,EAAI,EAAGA,EAAIoO,EAAYnO,OAAQD,IACpCoC,EAAS7C,EAAOI,OAAO,CAACyC,EAAQ6K,EAAkBmB,EAAYpO,MAElE,OAAOoC,EAgCciM,CAAmBJ,GAEpCH,EAAK,KAAWL,EAAM,KACtBK,EAAK,MAAYL,EAAM,MACvBK,EAAK,KAAWL,EAAM,KACtBK,EAAK,WAAiBG,EAEtB,IAAMK,EAAQ/O,EAAOQ,KAAK0N,EAAM,MAKhC,OAJAK,EAAK,KAAWxF,EAAK6D,OACjBhE,EAAMzF,OAAOnD,EAAOI,OAAO,CAACqO,EAAWG,EAAUG,MAG9CR,O,KAIf7M,EAAOC,QAAU,CACbqH,YACAkE,aACAa,Y,+dCjdEnF,EAAQhK,EAAQ,KAChBkK,EAAOlK,EAAQ,IACfiK,EAAQjK,EAAQ,KAGhBmK,EAAOnK,EAAQ,IAWfoQ,E,wBAOF,WAAYlC,EAAQJ,EAAMuC,GAAI,UAC1B/P,KAAKiD,KAAOyG,EAAMhH,MAAMiH,EAAM/B,gBAC9B5H,KAAK4N,OAASA,EACd5N,KAAKwN,KAAOA,EACZxN,KAAK+P,GAAKA,E,gCASd,WACI,IAAM7C,EAAUpM,EAAOQ,KAAKtB,KAAK4N,QAC3Bc,EAAQ1O,KAAKwN,KACboB,EAAM9N,EAAOQ,KAAKoI,EAAMrG,UAAUrD,KAAK+P,KAE7C,OAAOjP,EAAOI,OAAO,CAACgM,EAASwB,EAAOE,M,sBAQ1C,WACI,OAAO5O,KAAK+P,GAAGxM,gB,kBAQnB,WACI,IAAMyM,EAAY,GAKlB,OAJAA,EAAUtN,MAAQ1C,KAAKiD,KACvB+M,EAAUpC,OAAS5N,KAAK4N,OACxBoC,EAAUzC,UAAY1D,EAAK6D,OAAO1N,KAAKwN,MACvCwC,EAAUnC,UAAY7N,KAAKgN,WACpBgD,M,KAUTjD,EAAa,SAACkD,GAChB,IAAMlN,EAAS2G,EAAM7G,YAAYoN,GAEjC,OAAQvG,EAAMxG,gBAAgBH,EAAOE,OACjC,KAAK0G,EAAMhD,YACP,OAAO,IAAIiD,EAAKsG,WAAWnN,EAAOC,UACtC,KAAK2G,EAAM9C,cACP,OAAO,IAAI+C,EAAKuG,WAAWpN,EAAOC,UACtC,KAAK2G,EAAMlD,gBACP,OAAO,IAAImD,EAAKwG,eAAerN,EAAOC,UAC1C,QAAS,KAAM,gCA8BvBR,EAAOC,QAAU,CACbqN,WACA/C,aACA0C,YAtBgB,SAAC5L,EAAKoM,GACtB,IAAIT,EACA1C,EAEJ,IACIA,EAAUC,EAAWkD,GACrBT,EAAW,IAAIM,EACXhD,EAAQK,eACRL,EAAQU,KAAK3J,GACb6F,EAAMvG,gBAEZ,MAAOkN,GAEL,OADA9B,QAAQjO,IAAI,gCACL,KAGX,OAAOkP,M,0CC/GX/M,EAAQG,QAAU,SAGlBH,EAAQ6N,SAAW,U,mBCJnB9N,EAAOC,QAAU,CACbqH,UAAWpK,EAAQ,KAAcoK,UACjCkE,WAAYtO,EAAQ,KAAcsO,WAClCjB,WAAYrN,EAAQ,IAAaqN,WACjCwD,UAAW7Q,EAAQ,IAAa6Q,UAChC1B,OAAQnP,EAAQ,KAAcmP,S,2QCJ5BpF,EAAQ/J,EAAQ,KAChBgK,EAAQhK,EAAQ,KAChBiK,EAAQjK,EAAQ,KAIhBmK,GAHOnK,EAAQ,IAGRA,EAAQ,KAUfuL,E,wBAMF,WAAYlL,EAAKuK,GAAK,UAClBtK,KAAKiD,KAAOyG,EAAMhH,MAAMiH,EAAMpE,WAC9BvF,KAAKD,IAAM,IAAI2J,EAAM5J,WAAWC,GAChCC,KAAKsK,IAAMA,E,gCASf,WACI,IAAMkG,EAAOxQ,KAAKD,IAAI0Q,QAChBC,EAAO5P,EAAOQ,KAAKtB,KAAKsK,KAE9B,OAAOxJ,EAAOI,OAAO,CAACsP,EAAME,M,kBAQhC,WACI,IAAMC,EAAS,GAIf,OAHAA,EAAOjO,MAAQ1C,KAAKiD,KACpB0N,EAAOA,OAAS3Q,KAAKD,IAAII,MAAMyQ,WAC/BD,EAAOE,SAAW7Q,KAAKsK,IAChBqG,M,KAWTG,E,wBAKF,WAAYC,GAAM,UACd,IAAIhO,EAAS2G,EAAM7G,YAAYkO,GAE/B/Q,KAAKiD,KAAOF,EAAOE,KACnBjD,KAAK+Q,KAAOhO,EAAOC,S,gCAQvB,WACI,OAAOlC,EAAOQ,KAAKtB,KAAK+Q,Q,oBAQ5B,WACI,OAAO/Q,KAAK+Q,KAAO,IAAM/Q,KAAKiD,S,KAahC+N,E,wBAOF,WAAYrO,EAAMsO,GAAS,UACvBjR,KAAKiD,KAAOyG,EAAMhH,MAAMC,GACxB3C,KAAKiR,QAAUA,E,gCAQnB,WACI,KAAM,2C,kBAQV,WACI,KAAM,4C,KAIRC,E,wBAEF,WAAYvO,GAAM,UACd3C,KAAKiD,KAAOyG,EAAMhH,MAAMC,G,gCAG5B,WACI,KAAM,2C,kBAGV,WACI,KAAM,4C,KAaRyI,E,2CAOF,WAAYzI,EAAM4H,EAAM0G,GAAS,wBAC7B,cAAMtO,EAAMsO,IACP1G,KAAOA,EAFiB,E,gCAWjC,WACI,IAAM4G,EAAQnR,KAAKuK,KAAK5G,SAClByN,EAAW1H,EAAMlG,sBAAsBxD,KAAKiR,SAElD,OAAOnQ,EAAOI,OAAO,CAACiQ,EAAOC,M,kBAQjC,WACI,IAAMC,EAAO,GACbA,EAAK3O,MAAQ1C,KAAKiD,KAClBoO,EAAK9G,KAAOvK,KAAKuK,KAAKwD,OAGtB,IADA,IAAMkD,EAAU,GACP1P,EAAI,EAAGA,EAAIvB,KAAKiR,QAAQzP,OAAQD,IACrC0P,EAAQtG,KACJ3K,KAAKiR,QAAQ1P,GAAGwM,QAKxB,OAFAsD,EAAKJ,QAAUA,EAERI,M,GA3CkBL,GAwD3B1F,E,2CACF,WAAY3I,EAAM0I,EAAU4F,GAAS,wBACjC,cAAMtO,EAAMsO,IACP5F,SAAW,IAAIyF,EAAQzF,GAFK,E,gCAWrC,WACI,IAAMiG,EAAYxQ,EAAOQ,KAAKtB,KAAKqL,SAASvI,UACtCsO,EAAW1H,EAAMlG,sBAAsBxD,KAAKiR,SAElD,OAAOnQ,EAAOI,OAAO,CAACoQ,EAAWF,M,kBAQrC,WACI,IAAMC,EAAO,GACbA,EAAK3O,MAAQ1C,KAAKiD,KAClBoO,EAAKhG,SAAWrL,KAAKqL,SAASvI,SAG9B,IADA,IAAMmO,EAAU,GACP1P,EAAI,EAAGA,EAAIvB,KAAKiR,QAAQzP,OAAQD,IACrC0P,EAAQtG,KACJ3K,KAAKiR,QAAQ1P,GAAGwM,QAIxB,OADAsD,EAAKJ,QAAUA,EACRI,M,GApCaL,GAyCtBlF,E,2CACF,WAAYnJ,EAAM4I,EAAUC,EAAKC,EAAUC,EAAOC,EAAMrB,EAAKsB,EAASC,GAAW,wBAC7E,cAAMlJ,IACD4I,SAAWA,EAChB,EAAKC,IAAM,IAAI9B,EAAM5J,WAAW0L,GAChC,EAAKC,SAAWA,EAChB,EAAKC,MAAQA,EACb,EAAKC,KAAO,IAAIjC,EAAM5J,WAAW6L,GACjC,EAAKrB,IAAMA,EACX,EAAKsB,QAAUA,EACf,EAAKC,UAAYA,EAT4D,E,gCAYjF,WASI,IARA,IAAM0F,EAAMzQ,EAAOQ,KAAKtB,KAAKuL,UACvBiG,EAAOxR,KAAKwL,IAAIiF,QAChBgB,EAAS3Q,EAAOQ,KAAKtB,KAAKyL,UAC1BiG,EAAS5Q,EAAOQ,KAAKtB,KAAK0L,OAC1BiG,EAAQ3R,KAAK2L,KAAK8E,QAClBC,EAAO5P,EAAOQ,KAAKtB,KAAKsK,KAE1BsH,EAAW9Q,EAAOC,MAAM,GACpBQ,EAAI,EAAGA,EAAIvB,KAAK4L,QAAQpK,OAAQD,IACpCqQ,EAAW9Q,EAAOI,OAAO,CAAC0Q,EAAU9Q,EAAOQ,KAAKtB,KAAK4L,QAAQrK,MAIjE,IADA,IAAIsQ,EAAU/Q,EAAOC,MAAM,GACnBQ,EAAI,EAAGA,EAAIvB,KAAK6L,UAAUrK,OAAQD,IACtCsQ,EAAU/Q,EAAOI,OAAO,CAAC2Q,EAAS/Q,EAAOQ,KAAKtB,KAAK6L,UAAUtK,MAGjE,OAAOT,EAAOI,OAAO,CAACqQ,EAAKC,EAAMC,EAAQC,EAAQC,EAAOjB,EAAMkB,EAAUC,M,kBAG5E,WACI,IAAMR,EAAO,GAUb,OATAA,EAAK3O,MAAQ1C,KAAKiD,KAClBoO,EAAKS,SAAW9R,KAAKuL,SACrB8F,EAAKU,WAAa,GAAK/R,KAAKwL,IAAIrL,MAChCkR,EAAK5F,SAAWzL,KAAKyL,SACrB4F,EAAK3F,MAAQ1L,KAAK0L,MAClB2F,EAAK1F,KAAO,GAAK3L,KAAK2L,KAAKxL,MAC3BkR,EAAKzF,QAAU5L,KAAK4L,QACpByF,EAAKxF,UAAY7L,KAAK6L,UACtBwF,EAAKR,SAAW7Q,KAAKsK,IACd+G,M,GA7CmBH,GAiD5BlF,E,2CACF,WAAYrJ,EAAMoJ,EAAOP,EAAKlB,GAAK,wBAC/B,cAAM3H,IACDoJ,MAAQ,IAAI+E,EAAQ/E,GACzB,EAAKP,IAAM,IAAI9B,EAAM5J,WAAW0L,GAChC,EAAKlB,IAAMA,EAJoB,E,gCAOnC,WACI,IAAMkH,EAAOxR,KAAKwL,IAAIiF,QAChBuB,EAASlR,EAAOQ,KAAKtB,KAAK+L,MAAMjJ,UAChC4N,EAAO5P,EAAOQ,KAAKtB,KAAKsK,KAC9B,OAAOxJ,EAAOI,OAAO,CAACsQ,EAAMQ,EAAQtB,M,kBAGxC,WACI,IAAMW,EAAO,GAKb,OAJAA,EAAK3O,MAAQ1C,KAAKiD,KAClBoO,EAAKU,WAAa,GAAK/R,KAAKwL,IAAIrL,MAChCkR,EAAKtF,MAAQ/L,KAAK+L,MAAMjJ,SACxBuO,EAAKR,SAAW7Q,KAAKsK,IACd+G,M,GArBiBH,GAyB1BjF,E,2CACF,WAAYtJ,EAAMoJ,EAAOV,EAAUG,EAAKlB,GAAK,wBACzC,cAAM3H,IACDoJ,MAAQ,IAAI+E,EAAQ/E,GACzB,EAAKV,SAAW,IAAIyF,EAAQzF,GAC5B,EAAKG,IAAM,IAAI9B,EAAM5J,WAAW0L,GAChC,EAAKlB,IAAMA,EAL8B,E,gCAQ7C,WACI,IAAMkH,EAAOxR,KAAKwL,IAAIiF,QAChBuB,EAASlR,EAAOQ,KAAKtB,KAAK+L,MAAMjJ,UAChCwO,EAAYxQ,EAAOQ,KAAKtB,KAAKqL,SAASvI,UACtC4N,EAAO5P,EAAOQ,KAAKtB,KAAKsK,KAC9B,OAAOxJ,EAAOI,OAAO,CAACsQ,EAAMQ,EAAQV,EAAWZ,M,kBAGnD,WACI,IAAMW,EAAO,GAMb,OALAA,EAAK3O,MAAQ1C,KAAKiD,KAClBoO,EAAKU,WAAa,GAAK/R,KAAKwL,IAAIrL,MAChCkR,EAAKtF,MAAQ/L,KAAK+L,MAAMjJ,SACxBuO,EAAKhG,SAAWrL,KAAKqL,SAASvI,SAC9BuO,EAAKR,SAAW7Q,KAAKsK,IACd+G,M,GAxBqBH,GAmC9Be,E,wBAKF,WAAYtP,GAAM,UACd3C,KAAKiD,KAAOyG,EAAMhH,MAAMC,GACxB3C,KAAKkS,MAAQxI,EAAMvG,e,gCAQvB,WACI,KAAM,2C,kBAQV,WACI,KAAM,0C,2BAOV,WACInD,KAAKqN,KAAO3D,EAAMzF,OAAOjE,KAAK2D,c,KAchCyI,E,2CAMF,WAAYF,EAAQC,GAAO,wBACvB,cACIxC,EAAMlF,6BAELyH,OAAS,IAAI4E,EAAQ5E,GAC1B,EAAKC,MAAQA,EAEb,EAAKgG,gBAPkB,E,gCAiB3B,WACI,IAAMC,EAAStR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,eAChC8O,EAAUvR,EAAOQ,KAAKtB,KAAKkM,OAAOpJ,UAClCwP,EAAS5I,EAAMlG,sBAAsBxD,KAAKmM,OAEhD,OAAOrL,EAAOI,OAAO,CAACkR,EAAQC,EAASC,M,kBAQ3C,WACI,IAAM7F,EAAO,GACbA,EAAK/J,MAAQ1C,KAAKiD,KAClBwJ,EAAKY,KAAOxD,EAAK6D,OAAO1N,KAAKqN,MAC7BZ,EAAKyF,MAAQpR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,cAAe,QAAQqN,SAAS,UACpEnE,EAAKP,OAASlM,KAAKkM,OAAOpJ,SAG1B,IADA,IAAMqJ,EAAQ,GACL5K,EAAI,EAAGA,EAAIvB,KAAKmM,MAAM3K,OAAQD,IACnC4K,EAAMxB,KACF3K,KAAKmM,MAAM5K,GAAGwM,QAKtB,OAFAtB,EAAKN,MAAQA,EAENM,M,GAnDkBwF,GAkE3B3F,E,2CAOF,WAAYD,EAAQ/B,EAAKC,GAAM,wBAC3B,cACIZ,EAAMhF,wBAEL0H,OAAS,IAAIyE,EAAQzE,GAC1B,EAAK/B,IAAMA,EACX,EAAKC,KAAOA,EAEZ,EAAK4H,gBARsB,E,gCAiB/B,WACI,IAAMC,EAAStR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,eAChCgP,EAAUzR,EAAOQ,KAAKtB,KAAKqM,OAAOvJ,UAClCqO,EAAQnR,KAAKuK,KAAK5G,SAClB+M,EAAO5P,EAAOQ,KAAKtB,KAAKsK,KAE9B,OAAOxJ,EAAOI,OAAO,CAACkR,EAAQG,EAASpB,EAAOT,M,kBAQlD,WACI,IAAMjE,EAAO,GAOb,OANAA,EAAK/J,MAAQ1C,KAAKiD,KAClBwJ,EAAKY,KAAOxD,EAAK6D,OAAO1N,KAAKqN,MAC7BZ,EAAKyF,MAAQpR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,cAAe,QAAQqN,SAAS,UACpEnE,EAAKJ,OAASrM,KAAKqM,OAAOvJ,SAC1B2J,EAAKlC,KAAOvK,KAAKuK,KAAKwD,OACtBtB,EAAKoE,SAAW7Q,KAAKsK,IACdmC,M,GA9CcwF,GA4DvB1F,E,2CAMF,WAAYL,EAAQC,GAAO,wBACvB,cACIxC,EAAMtF,uBAEL6H,OAAS,IAAI4E,EAAQ5E,GAC1B,EAAKC,MAAQA,EAEb,EAAKgG,gBAPkB,E,gCAgB3B,WACI,IAAMC,EAAStR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,eAChC8O,EAAUvR,EAAOQ,KAAKtB,KAAKkM,OAAOpJ,UAClCwP,EAAS5I,EAAMlG,sBAAsBxD,KAAKmM,OAEhD,OAAOrL,EAAOI,OAAO,CAACkR,EAAQC,EAASC,M,kBAS3C,WACI,IAAM7F,EAAO,GACbA,EAAK/J,MAAQ1C,KAAKiD,KAClBwJ,EAAKY,KAAOxD,EAAK6D,OAAO1N,KAAKqN,MAC7BZ,EAAKyF,MAAQpR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,cAAe,QAAQqN,SAAS,UACpEnE,EAAKP,OAASlM,KAAKkM,OAAOpJ,SAG1B,IADA,IAAMqJ,EAAQ,GACL5K,EAAI,EAAGA,EAAIvB,KAAKmM,MAAM3K,OAAQD,IACnC4K,EAAMxB,KACF3K,KAAKmM,MAAM5K,GAAGwM,QAKtB,OAFAtB,EAAKN,MAAQA,EAENM,M,GAnDawF,GAuDtBzF,E,2CACF,WAAY7J,EAAMuJ,EAAQC,GAAO,wBAC7B,cAAMxJ,IACDuJ,OAAS,IAAI4E,EAAQ5E,GAC1B,EAAKC,MAAQA,EACb,EAAKxJ,KAAOA,EAEZ,EAAKwP,gBANwB,E,gCASjC,WACI,IAAMC,EAAStR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,eAChC8O,EAAUvR,EAAOQ,KAAKtB,KAAKkM,OAAOpJ,UAClCwP,EAAS5I,EAAMlG,sBAAsBxD,KAAKmM,OAEhD,OAAOrL,EAAOI,OAAO,CAACkR,EAAQC,EAASC,M,kBAG3C,WACI,IAAM7F,EAAO,GACbA,EAAK/J,MAAQ1C,KAAKiD,KAClBwJ,EAAKY,KAAOxD,EAAK6D,OAAO1N,KAAKqN,MAC7BZ,EAAKyF,MAAQpR,EAAOQ,KAAKtB,KAAKkS,MAAM3O,cAAe,QAAQqN,SAAS,UACpEnE,EAAKP,OAASlM,KAAKkM,OAAOpJ,SAG1B,IADA,IAAMqJ,EAAQ,GACL5K,EAAI,EAAGA,EAAIvB,KAAKmM,MAAM3K,OAAQD,IACnC4K,EAAMxB,KACF3K,KAAKmM,MAAM5K,GAAGwM,QAKtB,OAFAtB,EAAKN,MAAQA,EAENM,M,GAjCawF,GA+CtBtF,E,wBAQF,WAAY5C,EAAOpH,EAAM+J,EAAMD,GAAM,UACjCzM,KAAK+J,MAAQA,EACb/J,KAAKiD,KAAOyG,EAAMhH,MAAMC,GACxB3C,KAAK0M,KAAOA,EACZ1M,KAAKyM,KAAOA,EACZzM,KAAKwS,WAAa,GAClBxS,KAAKqN,UAAO+B,E,2CAShB,SAAkBxC,GACd,OAAOnD,EAAMgG,YACT3O,EAAOI,OAAO,CACVlB,KAAKyM,KAAKY,KACVvM,EAAOQ,KAAKtB,KAAK+J,SAErB6C,K,2BASR,WACI5M,KAAKqN,KAAO3D,EAAMzF,OAAOjE,KAAK2D,Y,qBAQlC,SAAQiJ,GACJ5M,KAAKwS,WAAW7H,KACZ3K,KAAKyS,kBAAkB7F,EAAI5M,KAAK+J,QAEpC/J,KAAKmS,kB,oBAST,WACI,GAAInS,KAAKwS,WAAWhR,OAAS,EACzB,KAAM,2BAGV,IAAMkR,EAAQ1S,KAAKyM,KAAKY,KAClBqC,EAAWhG,EAAMlG,sBAAsBxD,KAAKwS,YAC5C3C,EAAQ/O,EAAOQ,KAAKtB,KAAK0M,MAE/B,OAAO5L,EAAOI,OAAO,CAACwR,EAAOhD,EAAUG,M,kBAQ3C,WACI,IAAM8C,EAAO,GACbA,EAAKjG,KAAO1M,KAAK0M,KACjBiG,EAAKjQ,MAAQ1C,KAAKiD,KAClB0P,EAAKlG,KAAOzM,KAAKyM,KAAKsB,OACtB4E,EAAKtF,KAAOxD,EAAK6D,OAAO1N,KAAKqN,MAG7B,IADA,IAAMmF,EAAa,GACVjR,EAAI,EAAGA,EAAIvB,KAAKwS,WAAWhR,OAAQD,IACxCiR,EAAW7H,KACP3K,KAAKwS,WAAWjR,GAAGwM,QAK3B,OAFA4E,EAAKH,WAAaA,EAEXG,M,KAIfnQ,EAAOC,QAAU,CACbwI,SACA6F,UACA1F,qBACAE,gBACAQ,sBACAE,oBACAC,wBACAG,qBACAE,iBACAC,gBACAC,gBACAG,e,osCCrsBWiG,EAnCX,aAAwD,IAA5C7B,EAA2C,uDAAtC,KAAM8B,EAAgC,uDAA3B,KAAMC,EAAqB,uDAAjB,KAAMC,EAAW,uDAAN,KAC7C,GADmD,qBAC/ChC,IAAS8B,IAASC,IAAQC,EAC1B,MAAM,IAAI/Q,MAAM,4CAIpBhC,KAAKgT,QAAUjC,EACf/Q,KAAKiT,WAAaJ,EAClB7S,KAAKkT,YAAS9D,EAEdpP,KAAKmT,WAAaJ,EAAKK,UAAU7I,KAAKA,KAAK8I,KAAI,SAAAC,GAAO,MAAO,CAAElJ,IAAKkJ,EAAElJ,IAAKC,OAAQiJ,EAAEjJ,WACrFrK,KAAKuT,SAAWR,EAAKK,UAAUI,QAAQH,KAAI,SAAAC,GAAO,MAAO,CAAEzC,SAAUyC,EAAEzC,SAAUF,OAAQ2C,EAAE3C,WAC3F3Q,KAAKyT,YAAczT,KAAKmT,WAAW3R,OAAS,EAAI,QAAU,SAE1DxB,KAAKuT,SAASG,MAAK,SAACJ,EAAGK,GAAJ,OAAUL,EAAEzC,SAAS+C,cAAcD,EAAE9C,aACxD7Q,KAAKmT,WAAWO,MAAK,SAACJ,EAAGK,GAAJ,OAAUL,EAAElJ,IAAIwJ,cAAcD,EAAEvJ,QAErDpK,KAAK6T,UAAYf,EAEjB,IAAMzQ,EAAMwQ,EAAK/Q,QAAQ,KACnBmB,EAAO4P,EAAK3Q,UAAUG,EAAM,GAClC,OAAQY,GACJ,IAAI,GAAJ,OAAQmH,MAAI0J,IAAIjB,KAAhB,YAAwBkB,UAEpB,YADA/T,KAAK6T,UAAYf,EAAM,IAAM1I,MAAI0J,IAAIhB,IAApBA,WAErB,IAAI,GAAJ,OAAQ1I,MAAI4J,MAAMnB,KAAlB,YAA0BkB,UAEtB,YADA/T,KAAK6T,UAAYf,EAAM,IAAM1I,MAAI4J,MAAMlB,IAAtBA,WAErB,IAAI,GAAJ,OAAQ1I,MAAI6J,QAAQpB,KAApB,YAA4BkB,UAExB,YADA/T,KAAK6T,UAAYf,EAAM,IAAM1I,MAAI6J,QAAQnB,IAAxBA,a,OC9BpBoB,EAAsB,sBACtBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAe,eAGfC,EAAa,aAEbC,EAAY,YAMZC,EAAe,eACfC,EAAe,eAEfC,EAAsBC,YAAUC,eAAVD,UACtBE,EAAkBF,YAAUG,WAAVH,UAClBI,EAAgBJ,YAAUK,SAAVL,UCiCdM,E,WA9CX,WAAYC,EAASC,GAAK,oBACtBnV,KAAKmV,GAAKA,EACVnV,KAAKoV,QAAUF,EAAQG,SACvBrV,KAAKsV,YAAcJ,EAAQK,aAE3BvV,KAAK2U,UAAYO,EAAQP,UACzB3U,KAAK2C,KAAOuS,EAAQP,UAAUjS,MAC9B1C,KAAKsP,SAAW4F,EAAQP,UAAUlI,KAAKY,KAEvCrN,KAAKwV,W,4CAGT,WAAW,IAAD,OACN,GAAKxV,KAAK2C,OAAS+R,GAAuB1U,KAAK2C,OAASoS,EAAxD,CAKA,IAAM5I,EAAQnM,KAAK2U,UAAUlI,KAAKN,MAAMkH,KACpC,SAAAC,GAAC,MAAK,CACFjI,SAAU,EAAK1I,OAAS+R,GAzBjBe,EAyBqDnC,EAAE/I,KAAK8C,KAxBvEoI,EAAU,IAAMzC,UAAhByC,WAwB+EnC,EAAEjI,SAC7E4F,QAASqC,EAAErC,QAAQoC,KACf,SAAAM,GAAC,MAAK,CACF9C,SAAU8C,EAAE9C,SACZF,OAAQgD,EAAEhD,YA7BZ,IAAC8E,KAoCf,GADAzV,KAAKkM,OAASlM,KAAK2U,UAAUlI,KAAKP,OAC/BlM,KAAKkM,SAAWlM,KAAKmV,GACpBnV,KAAKmM,MAAQA,MAEb,CACAnM,KAAKmM,MAAQ,GACb,IAAK,IAAI5K,EAAI,EAAGA,EAAI4K,EAAM3K,OAAQD,IAC9B,GAAG4K,EAAM5K,GAAG8J,WAAarL,KAAKmV,GAAI,CAC9BnV,KAAKmM,MAAMxB,KAAKwB,EAAM5K,IACtB,aAzBRvB,KAAKmM,WAAQiD,M,KCnBZsG,EAAQ,QACRC,EAAS,SACTC,EAAc,cACdC,EAAgB,gBAEhBC,EAAgB,gBAChBC,EAAe,eAEfC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAc,cAEdC,EAAc,cACdC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAmB,mBAEzB,SAASC,EAAMvD,EAASC,EAAYY,EAAWd,GAClD,IAAM0C,EAAU,IAAI7C,EAAQI,EAASC,EAAYY,EAAWd,GAC5D,MAAO,CACHpQ,KAAM+S,EACND,QAAS,CACLzC,QAASyC,EAAQzC,QACjBS,YAAagC,EAAQhC,YACrBI,UAAW4B,EAAQ5B,UACnBV,WAAYsC,EAAQtC,WACpBI,SAAUkC,EAAQlC,SAClBN,WAAYwC,EAAQxC,WACpBuD,gBAAYpH,IAKjB,SAASqH,IACZ,MAAO,CACH9T,KAAMgT,GA2CP,SAASe,IACZ,MAAO,CACH/T,KAAMkT,GAIP,SAASc,EAAahC,EAAWiC,GACpC,MAAO,CACHjU,KAAMmT,EACNnB,YACAiC,QAID,SAASC,EAAYC,EAAaC,EAAWC,EAAKC,EAAQlE,GAC7D,MAAO,CACHpQ,KAAMoT,EACNe,cACAC,YACAC,MACAC,SACAlE,QCpGR,IAAMmE,EAAe,CACjBC,SAAS,EACT1B,aAASrG,EACT8F,aAAS9F,EACTgI,eAAe,GCUJC,MAhBf,SAAkBT,GACd,GAAKA,GAASU,OAAOC,UAAUC,eAAeC,KAAKb,EAAM,QAAzD,CAIA,IAAIc,EACJ,IACIA,EAAO,IAAIC,KAAK,CAACrR,KAAK4H,UAAU0I,EAAM,KAAM,IAArC,UAA6CA,EAAKvJ,MAAQ,CAAE1K,KAAM,qBAC3E,MAAO0N,GAEL,YADAuH,MAAM,yGAIV,OAAOC,IAAIC,gBAAgBJ,KCTzBR,EAAe,CACjBvC,UAAWoD,EACXnB,KAAM,KACN7D,KAAM,GACNsE,cAAUjI,EACV4I,SAAU,GACVlB,aAAa,EACbC,WAAW,EACXC,SAAK5H,EACL6H,OAAQ,KCVNC,EAAe,CACjBe,MAAO,I,WCHP,aAAe,oBACXjY,KAAKiY,MAAQ,G,yCAGjB,SAAM5G,GACFrR,KAAKiY,MAAMtN,KAAK0G,K,mBAGpB,WACIrR,KAAKiY,MAAMC,U,qBAGf,WACI,OAAGlY,KAAKiY,Q,mBAMZ,WACIjY,KAAKiY,MAAQ,K,kBAGjB,WACI,OAAOjY,KAAKiY,MAAMzW,S,kBAGtB,WACI,OAAGxB,KAAKmY,UACG,KAEJnY,KAAKiY,MAAM,O,OC9BpBf,EAAe,CACjBkB,QAASrE,+BACTsE,eAAgBtE,uCAChBuE,iBAAkBvE,2CAClBwE,kBAAmBxE,+CACnByE,UAAWzE,SCOA0E,EAPKC,YAAgB,CAChCnC,MNCmB,WAAmC,IAAlCoC,EAAiC,uDAAzBzB,EAAc0B,EAAW,uCACrD,OAAQA,EAAOjW,MACX,KAAKkW,EACD,OAAO,2BACAF,GADP,IAEIxB,SAAS,EACT1B,QAASmD,EAAOnD,UAExB,KAAKoD,EACD,OAAO,2BACAF,GADP,IAEIxB,SAAS,EACT1B,aAASrG,IAEjB,KAAKyJ,EACD,OAAO,2BACAF,GADP,IAEIzD,QAAS0D,EAAO1D,QAChBkC,eAAe,IAEvB,KAAKyB,EACD,OAAO,2BACAF,GADP,IAEIzD,aAAS9F,EACTgI,eAAe,IAEvB,QACI,OAAOuB,IM3BfhE,UJOmB,WAAmC,IAAlCgE,EAAiC,uDAAzBzB,EAAc0B,EAAW,uCACrD,OAAQA,EAAOjW,MACX,KAAKkW,EACD,OAAGD,EAAOjE,YAAcoD,EACbb,EAGJ,2BACAyB,GADP,IAEIhE,UAAWiE,EAAOjE,UAClBiC,KAAMgC,EAAOhC,KACbS,SAAUA,EAASuB,EAAOhC,MAC1BoB,SAAUY,EAAOhC,KAAKvJ,OAE9B,KAAKwL,EACD,OAAO,2BACAF,GADP,IAEI7B,YAAa8B,EAAO9B,YACpBC,UAAW6B,EAAO7B,UAClBC,IAAK4B,EAAO5B,IACZC,OAAQ2B,EAAO3B,OACflE,KAAM6F,EAAO7F,OAErB,QACI,OAAO4F,II9BfV,MHHmB,WAAmC,IAAlCU,EAAiC,uDAAzBzB,EAAc0B,EAAW,uCACrD,OAAQA,EAAOjW,MACX,KAAKkW,EAED,OADAF,EAAMV,MAAMa,MAAMF,EAAOvH,MAClB,2BACAsH,GADP,IAEIV,MAAOU,EAAMV,QAErB,KAAKY,EAED,OADAF,EAAMV,MAAMc,QACL,2BACAJ,GADP,IAEIV,MAAOU,EAAMV,QAErB,KAAKY,EAED,OADAF,EAAMV,MAAMe,QACL,2BACAL,GADP,IAEIV,MAAOU,EAAMV,QAErB,QACI,OAAOU,IGjBfP,QDDmB,WAAmC,IAAlCO,EAAiC,uDAAzBzB,EAAc0B,EAAW,uCACrD,OAAQA,EAAOjW,MACX,KAAKkW,EACD,OAAO,2BACAF,GADP,IAEIP,QAASQ,EAAOR,QAChBC,eAAgBO,EAAOR,QAAU,YACjCE,iBAAkBM,EAAOR,QAAU,gBACnCG,kBAAmBK,EAAOR,QAAU,gBAE5C,KAAKS,EACD,OAAO,2BACAF,GADP,IAEIP,QAASrE,+BACTsE,eAAgBtE,uCAChBuE,iBAAkBvE,2CAClBwE,kBAAmBxE,iDAE3B,KAAK8E,EACD,OAAO,2BACAF,GADP,IAEIH,UAAWI,EAAOK,KAE1B,KAAKJ,EACD,OAAO,2BACAF,GADP,IAEIH,UAAWzE,UAEnB,QACI,OAAO4E,ME/BJO,EAJDC,YACVV,EACA,I,wCCNW,I,cAAA,IAA0B,wC,QC2C1BW,G,kDApCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACTW,YAAY,GAJD,E,2CAQnB,WACItZ,KAAKuZ,SAAS,CACVD,YAAY,M,oBAIpB,WAAU,IAAD,OACL,OAAItZ,KAAK2Y,MAAMW,WACJ,eAAC,KAAD,CAAUE,GAAG,WAIpB,sBAAKC,UAAU,iBAAf,SACI,uBAAKA,UAAU,eACXC,QAAS,kBAAM,EAAKA,WADxB,UAEI,uBAAKD,UAAU,qBAAf,UACI,sBAAKE,IAAKC,GAAYC,IAAI,SAC1B,sBAAKJ,UAAU,aAAf,SACI,wDAGR,sBAAKA,UAAU,YAAf,kC,GA9BDK,IAAMC,W,mGCgBVC,OAjBf,SAAqBX,GACjB,OACI,yBAAQI,UAAU,2BACdQ,MAAO,CAAEC,QAASb,EAAMc,QAAU,QAAU,QAC5CC,WAAUf,EAAMe,SAChBV,QAASL,EAAMK,QAHnB,SAIKL,EAAMgB,YCkDJC,G,kDApDX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACTxY,MAAO,IAJI,E,4CAQnB,SAASkQ,GACLrQ,KAAKuZ,SAAS,CACVpZ,MAAOkQ,EAAEhE,OAAOlM,U,oBAIxB,WAAU,IAAD,OACL,OACI,uBAAKsZ,UAAW,OAASzZ,KAAKqZ,MAAM1N,KAApC,UACI,wBAAO8N,UAAU,YACb9W,KAAK,aACL4X,KAAK,YACLC,aAAa,MACbC,YAAY,MACZC,eAAe,MACfC,SAAS,MACTC,UAAU,MACVX,MAAO,CACHY,cAAe,QAEnB1a,MAAOH,KAAK2Y,MAAMxY,MAAQH,KAAK2Y,MAAMxY,MAAQH,KAAKqZ,MAAMlZ,MACxDia,SAAUpa,KAAKqZ,MAAMe,SACrBU,SAAU9a,KAAKqZ,MAAMyB,SAAW9a,KAAKqZ,MAAMyB,SAAW,kBAAM,EAAKA,YACjEC,YAAa/a,KAAKqZ,MAAM0B,YAAc/a,KAAKqZ,MAAM0B,YAAc,KACnE,eAAC,GAAD,CACIZ,QAASna,KAAKqZ,MAAM2B,QACpBtB,QAAS,WACLuB,KAAK,EAAK5B,MAAMlZ,OAChByX,MAAM,YAJd,yB,GAjCOkC,IAAMC,WCedmB,I,mKAjBX,WACI,OACI,yBAAQzB,UAAU,iBACdQ,MAAO,CAAEkB,QAASnb,KAAKqZ,MAAMe,SAAW,GAAM,GAC9CV,QAAS1Z,KAAKqZ,MAAMK,QACpBU,WAAUpa,KAAKqZ,MAAMe,SAHzB,SAIKpa,KAAKqZ,MAAMgB,e,GAPAP,IAAMC,YCkDnBqB,G,kDA9CX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACT1F,WAAY,GACZwC,QAAS,GACT1C,UAAM3D,GANK,E,mDAUnB,SAAgBiB,GACZrQ,KAAKuZ,SAAS,CACVtG,WAAY5C,EAAEhE,OAAOlM,U,6BAI7B,SAAgBkQ,GACZrQ,KAAKuZ,SAAS,CACV9D,QAASpF,EAAEhE,OAAOlM,U,oBAI1B,WAAU,IAAD,OACL,OACI,uBAAKsZ,UAAU,0BAAf,UACI,uBAAKA,UAAU,0BAAf,UACI,eAAC,GAAD,CAAUW,UAAU,EAAOY,SAAS,EAAOrP,KAAK,MAC5CmP,SAAU,SAACzK,GAAQ,EAAKgL,gBAAgBhL,IACxClQ,MAAOH,KAAK2Y,MAAMlD,QAClBsF,YAAY,kBACZO,MAAM,oBACV,eAAC,GAAD,CAAUlB,UAAU,EAAOY,SAAS,EAAOrP,KAAK,MAC5CmP,SAAU,SAACzK,GAAD,OAAO,EAAKkL,gBAAgBlL,IACtClQ,MAAOH,KAAK2Y,MAAM1F,WAClB8H,YAAY,cACZO,MAAM,mBAEd,eAAC,GAAD,CACIlB,UAAYpa,KAAK2Y,MAAM1F,aAAcjT,KAAK2Y,MAAMlD,QAChDiE,QAAS,WACL,EAAKL,MAAMmC,QAAQ,EAAK7C,MAAMlD,QAAQgG,OAAQ,EAAK9C,MAAM1F,WAAWwI,SAH5E,yB,GAvCiB3B,IAAMC,WCExB2B,G,4JANX,WACI,OACI,0D,GAHqB5B,IAAMC,W,SCC1B4B,GAAc,SAAC/E,GAExB,QAAKA,OAEDU,OAAOC,UAAUC,eAAeC,KAAKb,EAAM,WAAaA,EAAKlU,YAI5D4U,OAAOC,UAAUC,eAAeC,KAAKb,EAAM,UAAYA,EAAKvJ,UAI5DiK,OAAOC,UAAUC,eAAeC,KAAKb,EAAM,aAI3CU,OAAOC,UAAUC,eAAeC,KAAKb,EAAM,UAAYA,EAAKnK,SAI5D6K,OAAOC,UAAUC,eAAeC,KAAKb,EAAM,mBAkHvCgF,GAAmB,SAACC,GAE7B,GAAsB,kBAAVA,EACR,OAAO,EAGX,IAAMxZ,EAAMwZ,EAAK/Z,QAAQ,KACzB,GAAIO,EAAM,EACN,OAAO,EAGX,IAAM+H,EAAMyR,EAAK3Z,UAAU,EAAGG,GACxBY,EAAO4Y,EAAK3Z,UAAUG,EAAM,GAElC,IAAI,eAAeyZ,KAAK1R,GACpB,OAAO,EAGX,OAAQnH,GACJ,IAAI,GAAJ,OAAQ8Y,MAAQjI,IAAIhB,IAApB,YAA2BiB,UAC3B,IAAI,GAAJ,OAAQgI,MAAQ/H,MAAMlB,IAAtB,YAA6BiB,UAC7B,IAAI,GAAJ,OAAQgI,MAAQ9H,QAAQnB,IAAxB,YAA+BiB,UAC3B,OAAO,EACX,QACI,OAAO,IAINiI,GAAiB,SAACjL,GAE3B,GAAsB,kBAAVA,EACR,OAAO,EAGX,IAAM1O,EAAM0O,EAAKjP,QAAQ,KACzB,GAAIO,EAAM,EACN,OAAO,EAGX,IAAMY,EAAO8N,EAAK7O,UAAUG,EAAM,GAC5B2Q,EAAUjC,EAAK7O,UAAU,EAAGG,GAClC,OAAIY,IAAI,UAAQgZ,UAAR,YAAuBlI,aAI3B,eAAe+H,KAAK9I,IAOtBkJ,GAAQ,SAAChc,GACX,QAAKA,KAID,SAAS4b,KAAK5b,OAIb,cAAc4b,KAAK5b,MAIpBA,EAAI4B,QAAQ,MAAQ,MAOfqa,GAAmB,SAACC,GAC7B,IAAKF,GAAME,GACP,OAAO,EAGX,IAAK,kBAAkBN,KAAKM,GACxB,OAAO,EAGX,IAAMC,EAAW5b,SAAS2b,GAC1B,QAAIC,EAAW,GAAKA,EAAW,MAOtBC,GAAgB,SAACjS,GAC1B,OAAO6R,GAAM7R,IAGJkS,GAAwB,SAACC,EAASJ,GAE3C,IAAKD,GAAiBC,GAClB,OAAO,EAIX,IADA,IAAIK,EAAQ,EACHlb,EAAI,EAAGA,EAAIib,EAAQhb,OAAQD,IAAK,CACrC,IAAK+a,GAAcE,EAAQjb,IACvB,OAAO,EAEXkb,GAAShc,SAAS+b,EAAQjb,IAG9B,QAAIkb,EAAQhc,SAAS2b,KAOZM,GAAkB,SAAC7L,EAAU8L,GAEtC,SAAI9L,IAAa8L,GAAcA,EAAWnb,OAAS,KAI1B,kBAAdqP,MAIP,aAAaiL,KAAKjL,IAIf+L,GAAY/L,EAAU8L,MAGpBE,GAAgB,SAAClM,GAC1B,OAAOuL,GAAMvL,IAGJiM,GAAc,SAACvQ,EAAQyQ,GAEhC,IAAIzQ,IAAWyQ,EACX,OAAO,EAGX,IAAI,IAAIvb,EAAI,EAAGA,EAAIub,EAAKtb,OAAQD,IAC5B,IAAgC,IAA7B8K,EAAOvK,QAAQgb,EAAKvb,IACnB,OAAO,EAIf,OAAO,GCnQIwb,I,mKApBX,WACI,MAAwC/c,KAAKqZ,MAArC2D,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASvR,EAAzB,EAAyBA,MAAO7H,EAAhC,EAAgCA,IAChC,OACI,sBAAK4V,UAAWuD,EAAS,8BAAgC,cAAzD,SACKA,EACG,qCACI,oCACKtR,EACD,yBAAQ+N,UAAU,QAAQC,QAASuD,EAAnC,uBAEJ,gCACI,oBAAGhE,GAAG,YAAN,SAAmBpV,SAG3B,W,GAhBKiW,IAAMC,YCazBmD,G,kDACF,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IAEGA,MAAMlC,SACX,EAAKqE,QAAQ,EAAKnC,MAAM5D,QAAQzC,QAAS,EAAKqG,MAAM5D,QAAQxC,YAGhE,EAAK0F,MAAQ,CACTZ,KAAMvD,EACN2I,QAAQ,EACRC,UAAU,EAEVC,aAAa,EACbC,WAAY,GACZC,SAAU,GAEVC,YAAY,EACZlE,YAAY,GAjBD,E,kGAqBnB,WAA4B7D,GAA5B,UAAAgI,EAAA,sEACiBC,KAAMC,IAAI3d,KAAKqZ,MAAMhB,eAAiB5C,GADvD,wF,+HAIA,WAAwBA,GAAxB,UAAAgI,EAAA,sEACiBC,KAAMC,IAAN,UAAa3d,KAAKqZ,MAAMhB,gBAAxB,OAAyC5C,EAAzC,0BADjB,wF,8EAIA,SAAU/J,EAAO7H,GACb7D,KAAKuZ,SAAS,CACV8D,aAAa,EACbC,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACV8D,aAAa,M,qBAIrB,SAAQO,EAAOC,GAAQ,IAAD,OACZ9M,EAAO6M,EAAMnC,OACb5I,EAAOgL,EAAMpC,OAEnB,GAAKO,GAAejL,IF8CK,SAAC+M,GAE9B,GAAoB,kBAARA,EACR,OAAO,EAGX,IAAMzb,EAAMyb,EAAGhc,QAAQ,KACvB,GAAIO,EAAM,EACN,OAAO,EAEX,IAAM+H,EAAM0T,EAAG5b,UAAU,EAAGG,GACtBY,EAAO6a,EAAG5b,UAAUG,EAAM,GAEhC,IAAI,eAAeyZ,KAAK1R,GACpB,OAAO,EAGX,OAAQnH,GACJ,IAAI,GAAJ,OAAQ8Y,MAAQjI,IAAIjB,KAApB,YAA4BkB,UAC5B,IAAI,GAAJ,OAAQgI,MAAQ/H,MAAMnB,KAAtB,YAA8BkB,UAC9B,IAAI,GAAJ,OAAQgI,MAAQ9H,QAAQpB,KAAxB,YAAgCkB,UAC5B,OAAO,EACX,QACI,OAAO,GErEmBgK,CAAkBlL,GAAhD,CAKA,IAAImL,EACJ,IACIA,EAASzN,qBAAUsC,EAAM,IAAI1F,eAC/B,MAAOkD,GAEL,YADArQ,KAAKie,UAAU,4CAAe,+EAIlCje,KAAKke,kBAAkBnN,GAClBoN,MACG,SAAAnH,GACI,EAAKqC,MAAM+E,WAAWpH,EAAIjE,KAAMhC,MAGvCsN,OACG,SAAAhO,GACI,EAAKgJ,MAAM+E,WAAW,KAAMrN,MAIxC/Q,KAAKse,sBAAsBvN,GACtBoN,MACG,SAAAnH,GAEI,IADA,IAAMuH,EAAUvH,EAAIjE,KAAKK,UAAU7I,KAAKA,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAElJ,OAC/C7I,EAAI,EAAGA,EAAIgd,EAAQ/c,OAAQD,IAChC,GAAIgd,EAAQhd,KAAOyc,EAEf,YADA,EAAK3E,MAAMmF,OAAOzN,EAAM8B,EAAMmL,EAAQhH,EAAIjE,MAIlD,EAAKkL,UAAU,4CAAf,wBAAqClN,EAArC,+GAGPsN,OACG,SAAAhO,GACI9B,QAAQjO,IAAI+P,GACZ,EAAK4N,UAAU,4CAAe,mMAxCtCje,KAAKie,UAAU,4CAAe,4G,sBA6CtC,WACI,IAAMQ,EAAQC,SAASC,cAAc,6BAA6Bxe,MAE9DH,KAAK2Y,MAAMyE,UACXpd,KAAKuZ,SAAS,CACVxB,KAAM0G,M,wBAMlB,WAAc,IAAD,OAET,OADiBze,KAAK2Y,MAAdZ,MAEJ,KAAKvD,EACD,OAAO,eAAC,GAAD,CACHgH,QAAS,SAACzK,EAAM8B,GAAP,OAAgB,EAAK+L,aAAa7N,EAAM8B,MACzD,KAAK4B,EACD,OAAO,eAAC,GAAD,IACX,QACI,OAAO,eAAC,GAAD,CACH+G,QAAS,SAACzK,EAAM8B,GAAP,OAAgB,EAAK+L,aAAa7N,EAAM8B,S,qBAIjE,WACQ7S,KAAK2Y,MAAMyE,UACXpd,KAAKuZ,SAAS,CACV4D,QAASnd,KAAK2Y,MAAMwE,W,mEAMhC,WAAmBpM,EAAM8B,GAAzB,UAAA4K,EAAA,sDACIzd,KAAKuZ,SAAS,CACViE,YAAY,IAGhBxd,KAAKwb,QAAQzK,EAAM8B,GAEb7S,KAAKqZ,MAAMlC,SAAWnX,KAAKqZ,MAAMjC,eACnCpX,KAAKuZ,SAAS,CACViE,YAAY,IATxB,gD,6EAcA,WAAU,IAAD,OACL,OAAIxd,KAAKqZ,MAAMlC,SAAWnX,KAAKqZ,MAAMjC,cAC1B,eAAC,KAAD,CAAUoC,GAAE,kBAAaxZ,KAAKqZ,MAAM5D,QAAQzC,WAInD,uBAAKyG,UAAU,kBAAf,UACI,uBAAKR,GAAG,aACJgB,MAAO,CACHC,QAASla,KAAK2Y,MAAM6E,WAAa,OAAS,QAFlD,UAII,8CACA,uBAAK/D,UAAU,cAAcQ,MAAOja,KAAK2Y,MAAMyE,SAAW,GAAK,CAAElD,QAAS,QAA1E,UACI,yBAAOT,UAAU,YAAjB,UACI,wBAAO9W,KAAK,QAAQ8W,UAAU,YAAYtZ,MAAOqU,EAAc+F,KAAK,MAChEO,SAAU,kBAAM,EAAKA,YAAYpB,QAAS,kBAAM,EAAKA,WAAWmF,QAAS7e,KAAK2Y,MAAMwE,SACxF,sBAAK1D,UAAU,eACf,sBAAKA,UAAU,WAAf,4BAGJ,yBAAOA,UAAU,YAAjB,UACI,wBAAO9W,KAAK,QAAQ8W,UAAU,YAAYtZ,MAAOsU,EAAc8F,KAAK,MAChEO,SAAU,kBAAM,EAAKA,YAAYpB,QAAS,kBAAM,EAAKA,WAAWmF,SAAU7e,KAAK2Y,MAAMwE,SACzF,sBAAK1D,UAAU,eACf,sBAAKA,UAAU,WAAf,+BAGR,eAAC,GAAD,CAAYuD,OAAQhd,KAAK2Y,MAAM0E,YAAaJ,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,WACjDvd,KAAK+e,gBAEV,sBAAK9F,GAAG,aACJgB,MAAO,CACHC,QAASla,KAAK2Y,MAAM6E,WAAa,OAAS,QAFlD,SAII,mD,GAjLA1D,IAAMC,WAsMXiF,gBAAWC,aAdF,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,QACrB1B,QAASkD,EAAMpC,MAAMd,QACrBP,QAASyD,EAAMpC,MAAMrB,QACrBkC,cAAeuB,EAAMpC,MAAMa,cAC3BiB,eAAgBM,EAAMP,QAAQC,mBAGP,SAAA6G,GAAQ,MAAK,CACpCV,OAAQ,SAACxL,EAASC,EAAYY,EAAWd,GAAjC,OAA0CmM,EAAS3I,EAAMvD,EAASC,EAAYY,EAAWd,KACjGqL,WAAY,SAACrL,EAAMoC,GAAP,OAAc+J,ElBxKvB,SAAoBnM,EAAMoC,GAC7B,IAAIpC,EACA,MAAO,CACHpQ,KAAMiT,EACNV,QAAS,IAOjB,IAHA,IAAMiK,EAAYpM,EAAKK,UAAUC,KAAI,SAAAC,GAAC,OAAI,IAAI2B,EAAQ3B,EAAEF,UAAW+B,MAC7DiK,EAAiB,GAEf7d,EAAI,EAAGA,EAAI4d,EAAU3d,OAAQD,IAAI,CACrC,IAAM8d,EAAKF,EAAU5d,GACrB,GAAI8d,EAAGlT,MAGP,IAAI,IAAImT,EAAI,EAAGA,EAAID,EAAGlT,MAAM3K,OAAQ8d,IAEhC,IADA,IAAMC,EAAKF,EAAGlT,MAAMmT,GACZvd,EAAI,EAAGA,EAAIwd,EAAGtO,QAAQzP,OAAQO,IAAK,CACvC,IAAMyd,EAAKD,EAAGtO,QAAQlP,GACtBqd,EAAezU,KAAK,CAChB0C,KAAMgS,EAAG/P,SACTmQ,aAAcJ,EAAGjK,QAAU,UAAY,OACvCsK,UAAWvK,IAAOkK,EAAGnT,OAAS,OAAS,UACvCoJ,YAAa+J,EAAG/J,YAChBjJ,OAAQ8I,IAAOkK,EAAGnT,OAASqT,EAAGlU,SAAWgU,EAAGnT,OAC5C2E,SAAU2O,EAAG3O,SACbF,OAAQ6O,EAAG7O,UAM3B,MAAO,CACHhO,KAAMiT,EACNV,QAASkK,GkBqIsBhB,CAAWrL,EAAMoC,KACpDuB,aAAc,kBAAMwI,EAASxI,SAGPuI,CAGxB/B,KCrMayC,I,0KAdX,WACI,OACI,yBAAQlG,UAAU,gBACdC,QAAS1Z,KAAKqZ,MAAMK,QADxB,SAEK1Z,KAAKqZ,MAAMgB,e,GALDP,IAAMC,YCY3B6F,I,mKAEF,WACI,MAAqC5f,KAAKqZ,MAAlC2D,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASxH,EAAzB,EAAyBA,QACzB,OACI,sBAAKgE,UAAWuD,EAAS,0BAA4B,YAArD,SACKA,EACG,qCACI,sDAEI,yBAAQvD,UAAU,QAAQC,QAASuD,EAAnC,uBAEJ,gCACI,8BACKxH,EAAQtC,WAAWE,KAAI,SAAAC,GAAC,OAxB5CuM,EAwBoDvM,EAAElJ,IAtB3D,qBACIsP,QAAS,WACLuB,KAAK4E,GACLjI,MAAM,WAHd,SAIQiI,GAJCA,GAFL,IAACA,YA4BO,W,GAlBS/F,IAAMC,YA4BpBiF,gBAAWC,aAJF,SAAAtG,GAAK,MAAK,CAC9BlD,QAASkD,EAAMpC,MAAMd,WAKrB,KAFsBwJ,CAGxBW,KCtBIE,I,mKAEF,WACI,MAAmC9f,KAAKqZ,MAAhC2D,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAAShF,EAAzB,EAAyBA,MACzB,OACI,sBAAKwB,UAAWuD,EAAS,4BAA8B,aAAvD,SACKA,EACG,qCACI,oEAEI,yBAAQvD,UAAU,QAAQC,QAASuD,EAAnC,uBAEJ,gCACI,8BACKhF,EAAMA,MAAM5E,KAAI,SAAAC,GAAC,OAhCtC,SAACA,GACT,OACI,sBACIoG,QAAS,WAAQuB,KAAK3H,EAAEjG,MAAOuK,MAAM,WADzC,UAEI,6BAAItE,EAAEyM,gBACN,6BAAIzM,EAAEqB,YAAcT,EACd,iBAEEZ,EAAEqB,YAAcP,EACV,WACA,eAGd,6BAAId,EAAEjG,SAXDiG,EAAEjG,MA8BmC2S,CAAI1M,aAItC,W,GAlBOwG,IAAMC,YA4BlBiF,gBAAWC,aAJF,SAAAtG,GAAK,MAAK,CAC9BV,MAAOU,EAAMV,MAAMA,SAKnB,KAFsBgH,CAGxBa,KCrDaG,OAJf,SAAeC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OC0ChDI,GAAa,CACfpG,QAAS,OACTqG,cAAe,MACfC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,OAAQ,IACRC,QAAS,KAGPlV,GAAQ,SAACmV,GACX,OACI,uBAAK5H,GAAG,YAAYgB,MAAOqG,GAA3B,UACI,sBAAKrH,GAAG,SACR,oBAAGA,GAAG,OAAN,SAAc4H,IACd,sBAAK5H,GAAG,aAKd6H,G,kDAEF,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IAqGV0H,gBAAkB,WACV,EAAKC,UAAUC,SACf,EAAKD,UAAUC,QAAQC,eAAe,CAAEC,SAAU,YArGtD,EAAKH,UAAYI,sBAEjB,EAAKzI,MAAQ,CACTnC,gBAAYpH,EAEZiS,gBAAgB,EAChBC,iBAAiB,EACjBC,cAAe,EAEfjI,YAAY,EAAKD,MAAMlC,QACvBqK,SAAU,EAAKnI,MAAMlC,aAAU/H,EAAYkF,EAC3CK,eAAWvF,GAdA,E,2FAkBnB,WAAqB/B,GAArB,UAAAoQ,EAAA,sEACiBC,KAAMC,IAAI3d,KAAKqZ,MAAMd,kBAAoBlL,GAD1D,wF,0HAIA,sCAAAoQ,EAAA,yDACYzd,KAAKqZ,MAAMpB,MAAME,UAD7B,oBAEc9L,EAASrM,KAAKqZ,MAAMpB,MAAM5L,OAFxC,mDAQYoV,GAAW,EACfzhB,KAAK0hB,eAAerV,EAAOgB,MACtB8Q,MACG,SAAAnH,GAC+B,MAAvBA,EAAI2K,QAAQ1K,SACZ,EAAKoC,MAAMuI,YACX,EAAKrI,SAAS,CAAEgI,cAAe,EAAK5I,MAAM4I,cAAgB,QAIrElD,OACG,SAAAhO,GACI9B,QAAQjO,IAAI+P,MAGnBwR,SAAQ,WACLJ,GAAW,KAxB3B,UA2BgBA,EA3BhB,iCA4BkBxB,GAAM,KA5BxB,8F,+EAiCA,WACIjgB,KAAKuZ,SAAS,CACVuI,iBAAkB9hB,KAAK2Y,MAAMmJ,oB,yBAIrC,SAAYzV,GACR,GAAIA,IAAWmI,EACXxU,KAAKuZ,SAAS,CACVwI,eAAgB/hB,KAAK2Y,MAAMoJ,oBAG9B,IAAI1V,IAAWoI,EAMhB,OALAzU,KAAKuZ,SAAS,CACVyI,cAAehiB,KAAK2Y,MAAMqJ,kB,sBAQtC,SAASrP,GACDA,IAASuB,GACNvB,IAASwB,GACTxB,IAASyB,GACZpU,KAAKuZ,SAAS,CACVD,YAAY,EACZkI,SAAUjN,EACVI,UAAWhC,M,+BAKvB,WAAqB,IAAD,OAChB3S,KAAK+gB,kBACL/gB,KAAKiiB,eAEL5B,YAAW,WACP,EAAK6B,YACN,O,gCAGP,WACIliB,KAAK+gB,oB,2BAST,WACI/gB,KAAKuZ,SAAS,CAAE8H,gBAAgB,M,0BAGpC,WACIrhB,KAAKuZ,SAAS,CAAE8H,gBAAgB,M,4BAGpC,WACIrhB,KAAKuZ,SAAS,CAAE+H,iBAAiB,M,2BAGrC,WACIthB,KAAKuZ,SAAS,CAAE+H,iBAAiB,M,qBAGrC,WACIthB,KAAKuZ,SAAS,CACVD,YAAY,EACZkI,SAAUlN,M,oBAIlB,WAAU,IPvHiBmB,EOuHlB,OAEL,IAAKzV,KAAKqZ,MAAM5D,YPzHOA,EOyHoBzV,KAAKqZ,MAAM5D,UPnHrD6B,OAAOC,UAAUC,eAAeC,KAAKhC,EAAS,YAAeA,EAAQzC,SAIrEsE,OAAOC,UAAUC,eAAeC,KAAKhC,EAAS,gBAAmBA,EAAQhC,aAIzE6D,OAAOC,UAAUC,eAAeC,KAAKhC,EAAS,eAAkBA,EAAQtC,YAIxEmE,OAAOC,UAAUC,eAAeC,KAAKhC,EAAS,aAAgBA,EAAQlC,UAItE+D,OAAOC,UAAUC,eAAeC,KAAKhC,EAAS,eAAkBA,EAAQxC,YOoGrE,OAAO,eAAC,KAAD,CAAUuG,GAAG,WAGxB,GAAIxZ,KAAK2Y,MAAMW,WAAY,CACvB,GAAItZ,KAAK2Y,MAAM6I,WAAajN,EACxB,OAAO,eAAC,KAAD,CAAUiF,GAAI,CACjB2I,SAAU,aACVxJ,MAAO,CACHhE,UAAW3U,KAAK2Y,MAAMhE,cAI7B,GAAI3U,KAAK2Y,MAAM6I,WAAalN,EAC7B,OAAO,eAAC,KAAD,CAAUkF,GAAG,WAI5B,OACI,uBAAKC,UAAU,mBAAf,UACI,sBAAKA,UAAU,aAAa2I,IAAKpiB,KAAKghB,YACtC,sBAAK/H,GAAG,iBAAR,SAAyB,oBAAGS,QAAS,kBAAM,EAAKwI,WAAvB,sBACzB,uBAAKzI,UAAU,cAAf,UACK/N,GAAM,WAAgD,UAAnC1L,KAAKqZ,MAAM5D,QAAQhC,YAA0B,WAAa,cAC9E,oBAAGwF,GAAG,UAAUS,QAAS,kBAAM,EAAK2I,gBAApC,SAAqDriB,KAAKqZ,MAAM5D,QAAQzC,UACxE,2BAASyG,UAAU,gBAAnB,UACK/N,GAAM,WACP,gCACK1L,KAAKqZ,MAAM5D,QAAQlC,UAAWvT,KAAKqZ,MAAM5D,QAAQlC,SAASF,KAAI,SAAAC,GAAC,OAhN3EgP,EAgNuFhP,EA9MhG,gCACI,oBAAGmG,UAAU,WAAb,SAAyB6I,EAAIzR,WAC7B,oBAAG4I,UAAU,SAAb,SAAuB6I,EAAI3R,WAFtB2R,EAAIzR,UAFL,IAACyR,aAoND,uBAAK7I,UAAU,mBAAf,UACI,eAAC,GAAD,CAAc9N,KAAK,OAAO+N,QAAS,kBAAM,EAAK6I,SAASrO,IAAvD,4BACA,eAAC,GAAD,CAAcvI,KAAK,OAAO+N,QAAS,kBAAM,EAAK6I,SAASpO,IAAvD,wBACA,eAAC,GAAD,CAAcxI,KAAK,OAAO+N,QAAS,kBAAM,EAAK6I,SAASnO,IAAvD,yBAEJ,uBAAKqF,UAAU,iBAAf,UACK/N,GAAM,WACP,8BACK1L,KAAKqZ,MAAMnE,QAAQ1T,OAAS,GAAIxB,KAAKqZ,MAAMnE,QAAQ7B,KAAI,SAAAC,GAAC,OAnNhEkP,EAmN4ElP,EAjNrF,sBAAkCoG,QAAS,WACvCuB,KAAKuH,EAAKnV,MACVuK,MAAM,sBAFV,UAII,oBAAGqB,GAAIuJ,EAAK/C,aAAZ,SAA2B+C,EAAK/C,eAChC,oBAAGxG,GAAIuJ,EAAK9C,UAAZ,SAAwB8C,EAAK9C,YAC7B,oBAAGzG,GAAG,eAAN,SAAsBuJ,EAAKlN,cAC3B,oBAAG2D,GAAG,SAAN,SAAgBuJ,EAAKnW,SACrB,oBAAG4M,GAAG,WAAN,SAAkBuJ,EAAK3R,WACvB,oBAAGoI,GAAG,SAAN,SAAgBuJ,EAAK7R,WAThB6R,EAAKnV,KAAOmV,EAAKnW,QAFlB,IAACmW,OAqNG,oBAAGvJ,GAAG,OAAOS,QAAS,kBAAM,EAAK+I,iBAAjC,WACKziB,KAAK2Y,MAAM4I,eAAX,UAA8BvhB,KAAKqZ,MAAMpB,MAAMzW,OAA/C,gFAGT,eAAC,GAAD,CAAgByb,QAAS,kBAAM,EAAKyF,iBAAiB1F,OAAQhd,KAAK2Y,MAAM0I,iBACxE,eAAC,GAAD,CAAcpE,QAAS,kBAAM,EAAK0F,kBAAkB3F,OAAQhd,KAAK2Y,MAAM2I,yB,GAtLlExH,IAAMC,WAyMZiF,gBAAWC,aAbF,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,QACrB1B,QAASkD,EAAMpC,MAAMd,QACrBP,QAASyD,EAAMpC,MAAMrB,QACrB+C,MAAOU,EAAMV,MAAMA,MACnBM,kBAAmBI,EAAMP,QAAQG,sBAGV,SAAA2G,GAAQ,MAAK,CACpCV,OAAQ,SAACxL,EAASC,EAAYF,GAAtB,OAA+BmM,EAAS3I,EAAMvD,EAASC,EAAYF,KAC3E6O,UAAW,kBAAM1C,EvBnJV,CACHvc,KAAMsT,QuBqJYgJ,CAGxB6B,KCzNa8B,I,yDAnCX,WAAYvJ,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACTkK,QAAS,GACT7E,OAAQ,IALG,E,0CASnB,SAAO7S,GACH,IAAM2B,EAAUC,sBAAW5B,GAE3BnL,KAAKuZ,SAAS,CACVsJ,QAAS/V,EAAQgW,gBACjB9E,OAAQlR,EAAQK,mB,oBAIxB,WAAU,IAAD,OACL,OACI,uBAAKsM,UAAU,oBAAf,UACI,uBAAKA,UAAU,eAAf,UACI,eAAC,GAAD,CAAcC,QAAS,kBAAM,EAAKqJ,OA5BtC,QA4BI,iBACA,eAAC,GAAD,CAAcrJ,QAAS,kBAAM,EAAKqJ,OA5BpC,UA4BE,mBACA,eAAC,GAAD,CAAcrJ,QAAS,kBAAM,EAAKqJ,OA5BlC,YA4BA,wBAEJ,uBAAKtJ,UAAU,YAAf,UACI,eAAC,GAAD,CAAU6B,MAAM,cAAclB,UAAU,EAAMY,SAAS,EAAMrP,KAAK,MAAMxL,MAAOH,KAAK2Y,MAAMkK,UAC1F,eAAC,GAAD,CAAUvH,MAAM,aAAalB,UAAU,EAAMY,SAAS,EAAMrP,KAAK,MAAMxL,MAAOH,KAAK2Y,MAAMqF,mB,GA9BxFlE,IAAMC,Y,uBCMZlP,OAff,YAAgC,IAAhBN,EAAe,EAAfA,KAAMmB,EAAS,EAATA,MAClB,OACI,2BAAS+N,UAAU,gBAAnB,UACI,oBAAGR,GAAG,OAAN,SAAcvN,IACd,uBAAK+N,UAAU,QAAf,UACI,oBAAGR,GAAG,MAAN,iBACA,oBAAGA,GAAG,SAAN,uBAEJ,gCACK1O,GAAOA,EAAK8I,KAAI,SAAAC,GAAC,OCJf,SAAAA,GACf,OACI,gCACI,oBAAG2F,GAAG,MAAN,SAAa3F,EAAElJ,MACf,oBAAG6O,GAAG,SAAN,SAAgB3F,EAAEjJ,WAFbiJ,EAAElJ,KDEmBA,CAAIkJ,Y,OEM3B0P,OAff,YAAmD,IAAzB5G,EAAwB,EAAxBA,MAAO6G,EAAiB,EAAjBA,cAE7B,OACI,0BAASxJ,UAAU,4BAAnB,SACI,uBAAKA,UAAU,kBAAf,UACI,6CACA,eAAC,GAAD,CACI9N,KAAK,QAAQqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,YAC1D5a,MAAOic,EACPtB,SAAUmI,U,OC0BfC,OAlCf,SAAkB7J,GAEd,IAAQ8J,EAA6E9J,EAA7E8J,YAAaC,EAAgE/J,EAAhE+J,eAAgBC,EAAgDhK,EAAhDgK,MAAOC,EAAyCjK,EAAzCiK,cAAexQ,EAA0BuG,EAA1BvG,IAAKzI,EAAqBgP,EAArBhP,OAAQkZ,EAAalK,EAAbkK,SAExE,OACI,2BAAS9J,UAAU,sBAAnB,UACI,uBAAKA,UAAU,YAAf,UACI,eAAC,GAAD,CAAU9N,KAAK,SAASqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,aACjE5a,MAAO2S,EACPgI,SAAUqI,IACd,eAAC,GAAD,CAAUxX,KAAK,QAAQqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,SAChE5a,MAAOkK,EACPyQ,SAAUsI,IACd,eAAC,GAAD,CACIjJ,SAAS,EACTC,SAAUkJ,EACV5J,QAAS2J,EAHb,sBAKHE,GAEO,uBAAK9J,UAAU,cAAf,UACI,4CACA,eAAC,GAAD,CACI9N,KAAK,QAAQqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,YAC1D5a,MAAOkZ,EAAM+C,MACbtB,SAAUzB,EAAM4J,uBCRtCO,G,kDAEF,WAAYnK,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACTpO,KAAM,GACNC,UAAW,GACXqG,SAAU,GAEVgD,UAAW,GACXxJ,OAAQ,GAERoZ,aAAa,EACbnG,WAAY,GACZC,SAAU,GAEVvK,QAAS,IAfE,E,6CAmBnB,SAAUtH,EAAO7H,GACb7D,KAAKuZ,SAAS,CACVkK,aAAa,EACbnG,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACVkK,aAAa,M,yBAIrB,SAAYpT,GACRrQ,KAAKuZ,SAAS,CACV1F,UAAWxD,EAAEhE,OAAOlM,U,4BAI5B,SAAekQ,GACXrQ,KAAKuZ,SAAS,CACVlP,OAAQgG,EAAEhE,OAAOlM,U,2BAIzB,SAAckQ,GACVrQ,KAAKuZ,SAAS,CACV/O,UAAW6F,EAAEhE,OAAOlM,U,8BAI5B,SAAiBkQ,GACbrQ,KAAKuZ,SAAS,CACV1I,SAAUR,EAAEhE,OAAOlM,U,oBAI3B,WACSgc,GAAiBnc,KAAK2Y,MAAMnO,UAAUiR,QAKtCG,GAAiB5b,KAAK2Y,MAAM9E,UAAU4H,QAKtCa,GAActc,KAAK2Y,MAAMtO,OAAOoR,QAKjCmB,GAAY5c,KAAK2Y,MAAM9E,UAAU4H,OAAQzb,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAElJ,QACpEpK,KAAKie,UAAU,qEAAoB,yGAIvCje,KAAKuZ,SAAS,CACVhP,KAAK,GAAD,oBAAMvK,KAAK2Y,MAAMpO,MAAjB,CAAuB,CACvBH,IAAKpK,KAAK2Y,MAAM9E,UAAU4H,OAC1BpR,OAAQrK,KAAK2Y,MAAMtO,OAAOoR,UAE9B5H,UAAW,GACXxJ,OAAQ,KAfRrK,KAAKie,UAAU,qEAAoB,gDALnCje,KAAKie,UAAU,qEAAoB,oDALnCje,KAAKie,UAAU,qEAAoB,8I,wBA6B3C,WACI,GAAK1B,GAAsBvc,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAEjJ,UAASrK,KAAK2Y,MAAMnO,UAAUiR,QAApF,CAKA,IAAMiI,EAAY,IAAI5Z,aAAU9J,KAAKqZ,MAAMb,WACrC9N,EAAQ1K,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAwM,GAAC,OAAI6D,EAAUC,UAAU9D,EAAEzV,IAAK3J,SAASof,EAAExV,YACvEE,EAAOmZ,EAAUE,WAAWlZ,EAAOjK,SAAST,KAAK2Y,MAAMnO,YAE7DxK,KAAKuZ,SAAS,CACVvG,QAASzI,EAAKyI,eATdhT,KAAKie,UAAU,yFAAyB,+G,mBAahD,WACIje,KAAKuZ,SAAS,CACVhP,KAAM,GACNsJ,UAAW,GACXxJ,OAAQ,GACRG,UAAW,GACXwI,QAAS,O,oBAIjB,WAAU,IAAD,OACL,OACI,uBAAKyG,UAAU,wBAAf,UACI,wDACA,uBAAKA,UAAU,yBAAf,UACI,sBAAK2I,IAAKpiB,KAAK6jB,aACf,uBAAKpK,UAAU,mBAAf,UACI,eAAC,GAAD,CAAM/N,MAAM,WAAWnB,KAAMvK,KAAK2Y,MAAMpO,OACxC,2BAASkP,UAAU,qBAAnB,UACI,eAAC,GAAD,CACI0J,YAAa,SAAC9S,GAAD,OAAO,EAAKyT,YAAYzT,IACrC+S,eAAgB,SAAC/S,GAAD,OAAO,EAAK0T,eAAe1T,IAC3CgT,MAAO,kBAAM,EAAKW,UAClBV,gBAAiBtjB,KAAK2Y,MAAM9E,WAAa7T,KAAK2Y,MAAMtO,QACpDyI,IAAK9S,KAAK2Y,MAAM9E,UAAWxJ,OAAQrK,KAAK2Y,MAAMtO,OAC9CkZ,UAAU,IACd,eAAC,GAAD,CACIN,cAAe,SAAC5S,GAAD,OAAO,EAAK4T,cAAc5T,IACzC+L,MAAOpc,KAAK2Y,MAAMnO,qBAIlC,uBAAKiP,UAAU,sBAAf,UACI,eAAC,GAAD,CACIW,WAC+B,IAA3Bpa,KAAK2Y,MAAMpO,KAAK/I,QAAgBxB,KAAK2Y,MAAM3F,SACpChT,KAAK2Y,MAAMnO,WAAaxK,KAAK2Y,MAAM9E,WACnC7T,KAAK2Y,MAAMtO,QAEtBqP,QAAS,kBAAM,EAAKV,SANxB,mBAOA,eAAC,GAAD,CACIoB,SAAUpa,KAAK2Y,MAAMpO,KAAK/I,OAAS,GAA8B,KAAzBxB,KAAK2Y,MAAMnO,UACnDkP,QAAS,kBAAM,EAAKwK,cAFxB,uBAIJ,uBAAKzK,UAAU,sBAAf,UACI,oBAAGR,GAAG,SAAN,qBACA,oBAAGA,GAAG,OAAOS,QAAS,kBA5J1B7V,EA4JuC,EAAK8U,MAAM3F,QA3J9DiI,KAAKpX,QACL+T,MAAM,WAFK,IAAC/T,GA4JI,SAAyD7D,KAAK2Y,MAAM3F,QAAUhT,KAAK2Y,MAAM3F,QAAU,SAEvG,eAAC,GAAD,CAAYgK,OAAQhd,KAAK2Y,MAAM8K,YAAaxG,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,kB,GA1JzCzD,IAAMC,WAoKhBiF,gBAAWC,aAJF,SAAAtG,GAAK,MAAK,CAC9BH,UAAWG,EAAMP,QAAQI,aAKzB,KAFsByG,CAGxBuE,K,OClLaW,OARf,WACI,OACI,sBAAK1K,UAAU,gBAAf,SACI,+CCNG,I,OAAA,IAA0B,iD,UCMzC2K,KAAMC,oBAAoBC,UAA1B,kDAAiFF,KAAMG,QAAvF,kB,IAwGeC,G,kDApGX,WAAYnL,GAAQ,IAAD,8BACf,cAAMA,IAgBVoL,aAAe,kBACX,EAAKlL,UAAS,SAAAZ,GAAK,MAAK,CAAE+L,WAAY/L,EAAM+L,WAAa,OAlB1C,EAmBnBC,aAAe,kBACX,EAAKpL,UAAS,SAAAZ,GAAK,MAAK,CAAE+L,WAAY/L,EAAM+L,WAAa,OApB1C,EAgCnBE,YAAc,WACN,EAAKC,OAAO5D,SAAW,EAAKtI,MAAMmM,WAClC,EAAKD,OAAO5D,QAAQC,eAAe,CAAEC,SAAU,YA/BnD,EAAK0D,OAASzD,sBAEd,EAAKzI,MAAQ,CACTmM,WAAW,EAEXC,SAAU,KACVL,WAAY,GATD,E,yDAanB,YAAqC,IAAbK,EAAY,EAAZA,SACpB/kB,KAAKuZ,SAAS,CAAEwL,e,wEASpB,uBAAAtH,EAAA,sEAEUwC,GAAM,KAFhB,OAGIjgB,KAAKuZ,SAAS,CACVuL,WAAW,IAEf9kB,KAAK4kB,cANT,gD,sFAeA,WACI5kB,KAAK4kB,gB,oBAGT,WAAU,IAAD,OACL,EAAiC5kB,KAAK2Y,MAA9B+L,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,SAEpB,OACI,uBAAKtL,UAAU,iBAAf,UACI,sBAAKR,GAAG,aACJgB,MAAO,CACHC,QAASla,KAAK2Y,MAAMmM,UAAY,OAAS,QAFjD,SAII,4CAEJ,sBAAK1C,IAAKpiB,KAAK6kB,SACf,uBAAK5L,GAAG,gBACJgB,MAAO,CACHC,QAASla,KAAK2Y,MAAMmM,UAAY,OAAS,QAFjD,UAII,oBAAG7L,GAAG,OAAO5M,OAAO,SAChBgL,SAAS,aACT2N,KAAMC,GACNC,IAAI,aAHR,6BAMA,eAAC,KAAD,CACIxN,KAAMuN,GACNE,cAAe,gBAAGJ,EAAH,EAAGA,SAAH,OAAkB,EAAKK,sBAAsB,CAAEL,cAFlE,SAGI,eAAC,KAAD,CAAML,WAAYA,MAEtB,qBAAGzL,GAAG,SAAN,UACI,uBAAMA,GAAG,OACLS,QAAS,kBACL,EAAKf,MAAM+L,WAAa,EAClB,EAAKnL,SAAS,CACZwL,SAAU,EAAKpM,MAAMoM,SACrBL,WAAY,EAAK/L,MAAM+L,WAAa,IAEtC,MAPd,eAUA,kCAAOA,EAAP,MAAsBK,KACtB,uBAAM9L,GAAG,QACLS,QAAS,kBACL,EAAKf,MAAM+L,WAAaK,EAEpB,EAAKxL,SAAS,CACVwL,SAAU,EAAKpM,MAAMoM,SACrBL,WAAY,EAAK/L,MAAM+L,WAAa,IAEtC,MARd,kBAYJ,oBAAGzL,GAAG,MAAN,gS,GA/FDa,IAAMC,W,SCInBsL,I,uEAEF,WAAYhM,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACTW,YAAY,GAJD,E,sFAQnB,WAAgB3E,GAAhB,UAAA8I,EAAA,yDACS9B,GAAYhH,GADrB,8CAEevF,GAFf,uBAKiBsO,KAAM4H,KAAKtlB,KAAKqZ,MAAMf,iBAAkB3D,GALzD,wF,2EAQA,SAAOiC,GAAO,IAAD,OACT5W,KAAKulB,UAAU3O,GAAMuH,MACjB,SAAAnH,GACI,GAA2B,MAAvBA,EAAI2K,QAAQ1K,OAAgB,CAC5B,IAAIlE,OAAO3D,EACX,OAAQ,EAAKiK,MAAM1E,WACf,KAAKT,EACDnB,EAAO6D,EAAKnK,KAAKN,MAAMkH,KAAI,SAAAC,GAAC,OAAIA,EAAE/I,KAAK8C,KAAO,IAAMpK,EAAK+P,QAAzBM,aAChC,MACJ,KAAKa,EACDpB,EAAO6D,EAAKnK,KAAKY,KACjB,MACJ,KAAK+G,EACL,QACIrB,OAAO3D,EAEf,EAAKiK,MAAMmM,WAAU,GAAM,EAAOxO,EAAIjE,KAAM,IAAKA,QAGjD,EAAKsG,MAAMmM,WAAU,GAAO,EAAOxO,EAAIjE,KAAMiE,EAAI2K,QAAQ1K,YAAQ7H,GAErE,EAAKmK,SAAS,CAAED,YAAY,OAElC+E,OACE,SAAAhO,GAEI,IACI,EAAKgJ,MAAMmM,WAAU,GAAO,EAAOnV,EAAEoV,SAAS1S,KAAM1C,EAAEoV,SAAS1S,KAAKkE,YAAQ7H,GAEhF,MAAOd,GACH,EAAK+K,MAAMmM,WAAU,GAAO,EAAO,CAC/B9Z,MAAO,qBACR,SAAK0D,GAEZ,EAAKmK,SAAS,CAAED,YAAY,S,oBAKxC,WAAU,IAAD,OACL,EAAsDtZ,KAAKqZ,MAAnD2D,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASrG,EAAzB,EAAyBA,KAAMoB,EAA/B,EAA+BA,SAAUX,EAAzC,EAAyCA,SAEzC,GAAIrX,KAAK2Y,MAAMW,WAEX,OADsBtZ,KAAKqZ,MAAnB1E,WAEJ,KAAKT,EACL,KAAKE,EACD,OAAO,eAAC,KAAD,CAAUoF,GAAG,cACxB,KAAKrF,EACD,OAAO,eAAC,KAAD,CAAUqF,GAAG,aACxB,QAEI,OADA5B,MAAM,sKACC,eAAC,KAAD,CAAU4B,GAAG,WAIhC,OACI,sBAAKC,UAAWuD,EAAS,4BAA8B,aAAvD,SACKA,EACG,qCACI,4GAEI,yBAAQvD,UAAU,QAAQC,QAASuD,EAAnC,uBAEJ,kCACI,oBAAGhE,GAAG,WAAN,oJACA,oBAAGA,GAAG,WAAN,6EACA,kCACI,oBAAGQ,UAAU,oBAAoBR,GAAG,KAAKS,QAASuD,EAAlD,SAA4D,oBAC5D,oBAAGxD,UAAU,oBAAoBR,GAAG,KAAK5M,OAAO,SAASgL,SAAQ,UAAKW,EAAL,SAC7DgN,KAAM3N,EAAU6N,IAAI,aADxB,SAEK,kDAEL,oBAAGzL,UAAU,oBAAoBR,GAAG,MAAMS,QAAS,kBAAM,EAAKgM,OAAO9O,IAArE,SAA6E,6BAIzF,W,GA/FWkD,IAAMC,YAoHtBiF,gBAAWC,aAfF,SAAAtG,GAAK,MAAK,CAC9BhE,UAAWgE,EAAMhE,UAAUA,UAC3BiC,KAAM+B,EAAMhE,UAAUiC,KACtBS,SAAUsB,EAAMhE,UAAU0C,SAC1BW,SAAUW,EAAMhE,UAAUqD,SAC1BjF,KAAM4F,EAAMhE,UAAU5B,KACtBiE,IAAK2B,EAAMhE,UAAUqC,IACrBC,OAAQ0B,EAAMhE,UAAUsC,OACxBqB,iBAAkBK,EAAMP,QAAQE,qBAGT,SAAA4G,GAAQ,MAAK,CACpCsG,UAAW,SAAC1O,EAAaC,EAAWC,EAAKC,EAAQlE,GAAtC,OAA+CmM,EAASrI,EAAYC,EAAaC,EAAWC,EAAKC,EAAQlE,QAG9FkM,CAGxBoG,K,OC9GaM,OAjBf,YAAiD,IAA7BpS,EAA4B,EAA5BA,SAAU7H,EAAkB,EAAlBA,MAAOka,EAAW,EAAXA,QACjC,OACI,2BAASnM,UAAU,oBAAnB,UACI,oBAAGR,GAAG,OAAN,SAAcvN,MACbka,GACG,uBAAKnM,UAAU,QAAf,UACI,oBAAGR,GAAG,WAAN,yBACA,oBAAGA,GAAG,SAAN,uBAGR,qBAAIQ,UAAWmM,EAAU,OAAS,OAAlC,WACKrS,GAAWA,EAASF,KAAI,SAAAC,GAAC,ORfnB,SAAAA,GACnB,OACI,gCACI,oBAAG2F,GAAG,WAAN,SAAkB3F,EAAEzC,WACpB,oBAAGoI,GAAG,SAAN,SAAgB3F,EAAE3C,WAFb2C,EAAEzC,UQa2B2C,CAAQF,Y,OCcvCuS,OAxBf,SAAqBxM,GAEjB,IAAQyM,EAA6EzM,EAA7EyM,iBAAkBC,EAA2D1M,EAA3D0M,eAAgBlV,EAA2CwI,EAA3CxI,SAAUF,EAAiC0I,EAAjC1I,OAAQ2S,EAAyBjK,EAAzBiK,cAAeD,EAAUhK,EAAVgK,MAE3E,OACI,0BAAS5J,UAAU,yBAAnB,SACI,uBAAKA,UAAU,eAAf,UACI,eAAC,GAAD,CACI9N,KAAK,QAAQqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,WAC1DD,SAAUgL,EACV3lB,MAAO0Q,IACX,eAAC,GAAD,CACIlF,KAAK,SAASqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,SAC3D5a,MAAOwQ,EACPmK,SAAUiL,IACd,eAAC,GAAD,CACI5L,SAAS,EACTC,SAAUkJ,EACV5J,QAAS2J,EAHb,uBCGV2C,G,kDACF,WAAY3M,GAAQ,IAAD,EAMf,OANe,qBACf,cAAMA,IAwLV4M,cAAgB,WAER,EAAKpC,WAAW5C,UAAY,EAAKtI,MAAMpO,KAAK/I,OAAS,GAAK,EAAKmX,MAAM1H,QAAQzP,OAAS,GACtF,EAAKqiB,WAAW5C,QAAQC,eAAe,CAAEC,SAAU,WAE9C,EAAK+E,SAASjF,SACnB,EAAKiF,SAASjF,QAAQC,eAAe,CAAEC,SAAU,YA5LrD,EAAK0C,WAAazC,sBAClB,EAAK8E,SAAW9E,sBAEX9J,OAAOC,UAAUC,eAAeC,KAAK,EAAK4B,MAAO,YAAe,EAAKA,MAAM5D,SAKhF,EAAKkD,MAAQ,CACTW,YAAY,EAEZ/O,KAAM,GACN0G,QAAS,GACTzG,UAAW,GAEXqJ,UAAW,GACXxJ,OAAQ,GACRwG,SAAU,GACVF,OAAQ,GAERwV,aAAa,EACb1C,aAAa,EACbnG,WAAY,GACZC,SAAU,IA1BC,IAOX,EAAK5E,MAAQ,CAAEW,YAAY,GAC3B,iB,6CAsBR,SAAU5N,EAAO7H,GACb7D,KAAKuZ,SAAS,CACVkK,aAAa,EACbnG,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACVkK,aAAa,M,wBAIrB,WACIzjB,KAAKuZ,SAAS,CAAE4M,aAAa,M,qBAGjC,WACI,GAAK5J,GAAsBvc,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAEjJ,UAASrK,KAAK2Y,MAAMnO,WAK1E,IACI,IAAMkZ,EAAY,IAAI5Z,aAAU9J,KAAKqZ,MAAMb,WACrC/C,EAAUzV,KAAKqZ,MAAM5D,QAErBlL,EAAOmZ,EAAUE,WACnB5jB,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OACjBoQ,EAAUC,UAAUrQ,EAAElJ,IAAK3J,SAAS6S,EAAEjJ,YAC1C5J,SAAST,KAAK2Y,MAAMnO,YAGlByG,EAAUyS,EAAU0C,cACtBpmB,KAAK2Y,MAAM1H,QAAQoC,KAAI,SAAAC,GAAC,OACpBoQ,EAAU2C,aAAa5lB,SAAS6S,EAAE3C,QAAS2C,EAAEzC,cAG/CyV,EAAqB5C,EAAU6C,yBACjC9Q,EAAQzC,QACR,CAAC0Q,EAAU8C,yBACPjc,EAAM0G,KAIRwV,EAAiB/C,EAAUgD,gBAAgBJ,EAAoB,IACrEG,EAAeE,QAAQlR,EAAQxC,YAE/B,IAAM2T,EAAUH,EAAe1Y,OAE/B/N,KAAKqZ,MAAMwN,QAAQD,GACnB5mB,KAAKuZ,SAAS,CAAE4M,aAAa,IAEjC,MAAO9V,GACH9B,QAAQjO,IAAI+P,GACZrQ,KAAKie,UAAU,2EAAqB,wGApCpCje,KAAKie,UAAU,2EAAqB,+G,yBAwC5C,SAAY5N,GACRrQ,KAAKuZ,SAAS,CACV1F,UAAWxD,EAAEhE,OAAOlM,U,4BAI5B,SAAekQ,GACXrQ,KAAKuZ,SAAS,CACVlP,OAAQgG,EAAEhE,OAAOlM,U,8BAIzB,SAAiBkQ,GACbrQ,KAAKuZ,SAAS,CACV1I,SAAUR,EAAEhE,OAAOlM,U,4BAI3B,SAAekQ,GACXrQ,KAAKuZ,SAAS,CACV5I,OAAQN,EAAEhE,OAAOlM,U,2BAIzB,SAAckQ,GACVrQ,KAAKuZ,SAAS,CACV/O,UAAW6F,EAAEhE,OAAOlM,U,oBAI5B,WACSgc,GAAiBnc,KAAK2Y,MAAMnO,UAAUiR,QAKtCG,GAAiB5b,KAAK2Y,MAAM9E,UAAU4H,QAKtCa,GAActc,KAAK2Y,MAAMtO,OAAOoR,QAKjCmB,GAAY5c,KAAK2Y,MAAM9E,UAAU4H,OAAQzb,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAElJ,QACpEpK,KAAKie,UAAU,qEAAoB,yGAIvCje,KAAKuZ,SAAS,CACVhP,KAAK,GAAD,oBAAMvK,KAAK2Y,MAAMpO,MAAjB,CAAuB,CACvBH,IAAKpK,KAAK2Y,MAAM9E,UAAU4H,OAC1BpR,OAAQrK,KAAK2Y,MAAMtO,OAAOoR,UAE9B5H,UAAW,GACXxJ,OAAQ,KAfRrK,KAAKie,UAAU,qEAAoB,gDALnCje,KAAKie,UAAU,qEAAoB,oDALnCje,KAAKie,UAAU,qEAAoB,8I,uBA6B3C,WACSvB,GAAgB1c,KAAK2Y,MAAM9H,SAAS4K,OAAQzb,KAAKqZ,MAAM5D,QAAQlC,SAASF,KAAI,SAAAC,GAAC,OAAIA,EAAEzC,aAKnFgM,GAAc7c,KAAK2Y,MAAMhI,OAAO8K,QAKjCmB,GAAY5c,KAAK2Y,MAAM9H,SAAS4K,OAAQzb,KAAK2Y,MAAM1H,QAAQoC,KAAI,SAAAC,GAAC,OAAIA,EAAEzC,aACtE7Q,KAAKie,UAAU,uFAAuB,8GAI1Cje,KAAKuZ,SAAS,CACVtI,QAAQ,GAAD,oBAAMjR,KAAK2Y,MAAM1H,SAAjB,CAA0B,CAC7BJ,SAAU7Q,KAAK2Y,MAAM9H,SAAS4K,OAC9B9K,OAAQ3Q,KAAK2Y,MAAMhI,OAAO8K,UAE9B5K,SAAU,GACVF,OAAQ,KAfR3Q,KAAKie,UAAU,uFAAuB,yDALtCje,KAAKie,UAAU,uFAAuB,uD,+BAwB9C,WACIje,KAAKimB,kB,gCAGT,WACIjmB,KAAKimB,kB,oBAaT,WAAU,IAAD,OACCxQ,EAAUzV,KAAKqZ,MAAM5D,QAE3B,OAAIzV,KAAK2Y,MAAMW,WACJ,eAAC,KAAD,CAAUE,GAAG,WAIpB,uBAAKC,UAAU,eAAf,UACI,sBAAK2I,IAAKpiB,KAAKkmB,WACf,iDACA,sBAAKzM,UAAU,kBAAf,SACI,eAAC,GAAD,CAAU/N,MAAM,uBAAuBka,SAAS,EAAOrS,SAAUkC,EAAQlC,aAE7E,uBAAKkG,UAAU,gBAAf,UACI,sBAAK2I,IAAKpiB,KAAK6jB,aACf,uBAAKpK,UAAU,UAAf,UACI,eAAC,GAAD,CAAM/N,MAAM,WAAWnB,KAAMvK,KAAK2Y,MAAMpO,KAAMqb,SAAS,IACvD,eAAC,GAAD,CACIzC,YAAa,SAAC9S,GAAD,OAAO,EAAKyT,YAAYzT,IACrC+S,eAAgB,SAAC/S,GAAD,OAAO,EAAK0T,eAAe1T,IAC3C4S,cAAe,SAAC5S,GAAD,OAAO,EAAK4T,cAAc5T,IACzCgT,MAAO,kBAAM,EAAKW,UAClBV,gBAAiBtjB,KAAK2Y,MAAM9E,WAAa7T,KAAK2Y,MAAMtO,QACpDyI,IAAK9S,KAAK2Y,MAAM9E,UAAWxJ,OAAQrK,KAAK2Y,MAAMtO,OAAQ+R,MAAOpc,KAAK2Y,MAAMnO,UACxE+Y,UAAU,OAGlB,uBAAK9J,UAAU,aAAf,UACI,eAAC,GAAD,CAAU/N,MAAM,cAAc6H,SAAUvT,KAAK2Y,MAAM1H,QAAS2U,SAAS,IACrE,eAAC,GAAD,CACIE,iBAAkB,SAACzV,GAAD,OAAO,EAAKyW,iBAAiBzW,IAC/C0V,eAAgB,SAAC1V,GAAD,OAAO,EAAK0W,eAAe1W,IAC3CQ,SAAU7Q,KAAK2Y,MAAM9H,SACrBF,OAAQ3Q,KAAK2Y,MAAMhI,OACnB2S,gBAAiBtjB,KAAK2Y,MAAM9H,UAAY7Q,KAAK2Y,MAAMhI,QACnD0S,MAAO,kBAAM,EAAK2D,qBAG9B,eAAC,GAAD,CACI5M,SAAUpa,KAAK2Y,MAAM1H,QAAQzP,OAAS,GAAKxB,KAAK2Y,MAAMpO,KAAK/I,OAAS,GAA8B,KAAzBxB,KAAK2Y,MAAMnO,UACpFkP,QAAS,kBAAM,EAAKA,WAFxB,oBAIA,eAAC,GAAD,CAAkBsD,OAAQhd,KAAK2Y,MAAMwN,YAAalJ,QAAS,kBAAM,EAAKgK,gBACtE,eAAC,GAAD,CAAYjK,OAAQhd,KAAK2Y,MAAM8K,YAAaxG,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,kB,GAjPtCzD,IAAMC,WA+PnBiF,gBAAWC,aARF,SAAAtG,GAAK,MAAK,CAC9BH,UAAWG,EAAMP,QAAQI,cAGF,SAAA0G,GAAQ,MAAK,CACpC2H,QAAS,SAACjQ,GAAD,OAAUsI,EAASvI,EAAazC,EAAqB0C,QAGxCqI,CAGxB+G,K,cC/PakB,OAtBf,YAA2E,IAArD9K,EAAoD,EAApDA,MAAOvL,EAA6C,EAA7CA,SAAUiV,EAAmC,EAAnCA,iBAAkB7C,EAAiB,EAAjBA,cAErD,OACI,2BAASxJ,UAAU,wBAAnB,UACI,uBAAKA,UAAU,cAAf,UACI,6CACA,eAAC,GAAD,CACI9N,KAAK,QAAQqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,YAC1D5a,MAAOic,EACPtB,SAAUmI,OAElB,uBAAKxJ,UAAU,iBAAf,UACI,8CACA,eAAC,GAAD,CACI9N,KAAK,QAAQqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,WAC1D5a,MAAO0Q,EACPiK,SAAUgL,WCExBqB,G,kDAEF,WAAY9N,GAAQ,IAAD,EAMf,OANe,qBACf,cAAMA,IAwJV4M,cAAgB,WACR,EAAKpC,WAAW5C,SAAW,EAAKtI,MAAMpO,KAAK/I,OAAS,EACpD,EAAKqiB,WAAW5C,QAAQC,eAAe,CAAEC,SAAU,WAE9C,EAAK+E,SAASjF,SACnB,EAAKiF,SAASjF,QAAQC,eAAe,CAAEC,SAAU,YA3JrD,EAAK0C,WAAazC,sBAClB,EAAK8E,SAAW9E,sBAEX9J,OAAOC,UAAUC,eAAeC,KAAK,EAAK4B,MAAO,YAAe,EAAKA,MAAM5D,SAKhF,EAAKkD,MAAQ,CACTW,YAAY,EAEZ/O,KAAM,GACNC,UAAW,GACXqG,SAAU,GAEVgD,UAAW,GACXxJ,OAAQ,GAERuc,aAASxX,EACT+W,aAAa,EAEb1C,aAAa,EACbnG,WAAY,GACZC,SAAU,GAEVlG,cAAUjI,EACV4I,SAAU,IA7BC,IAOX,EAAKW,MAAQ,CAAEW,YAAY,GAC3B,iB,6CAyBR,SAAU5N,EAAO7H,GACb7D,KAAKuZ,SAAS,CACVkK,aAAa,EACbnG,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACVkK,aAAa,M,wBAIrB,WACIzjB,KAAKuZ,SAAS,CAAE4M,aAAa,M,qBAGjC,WACI,GAAKzJ,GAAgB1c,KAAK2Y,MAAM9H,SAAS4K,OAAQzb,KAAKqZ,MAAM5D,QAAQlC,SAASF,KAAI,SAAAC,GAAC,OAAIA,EAAEzC,aAKxF,GAAK0L,GAAsBvc,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAEjJ,UAASrK,KAAK2Y,MAAMnO,UAAUiR,QAKpF,IACI,IAAMiI,EAAY,IAAI5Z,aAAU9J,KAAKqZ,MAAMb,WAErC/C,EAAUzV,KAAKqZ,MAAM5D,QACrBlL,EAAOmZ,EAAUE,WACnB5jB,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OACjBoQ,EAAUC,UAAUrQ,EAAElJ,IAAK3J,SAAS6S,EAAEjJ,YAC1C5J,SAAST,KAAK2Y,MAAMnO,UAAUiR,SAG5B2L,EAAiB1D,EAAU2D,qBAC7B5R,EAAQzC,QAAShT,KAAK2Y,MAAM9H,SAAS4K,OAAQlR,GAG3C+c,EAAa5D,EAAUgD,gBAAgBU,EAAgB,IAC7DE,EAAWX,QAAQlR,EAAQxC,YAE3B,IAAM2T,EAAUU,EAAWvZ,OAE3B/N,KAAKqZ,MAAMwN,QAAQD,GACnB5mB,KAAKuZ,SAAS,CAAE4M,aAAa,IAEjC,MAAO9V,GACH9B,QAAQjO,IAAI+P,GACZrQ,KAAKie,UAAU,2EAAqB,wGA5BpCje,KAAKie,UAAU,2EAAqB,kHALpCje,KAAKie,UAAU,2EAAqB,uD,yBAqC5C,SAAY5N,GACRrQ,KAAKuZ,SAAS,CACV1F,UAAWxD,EAAEhE,OAAOlM,U,4BAI5B,SAAekQ,GACXrQ,KAAKuZ,SAAS,CACVlP,OAAQgG,EAAEhE,OAAOlM,U,2BAIzB,SAAckQ,GACVrQ,KAAKuZ,SAAS,CACV/O,UAAW6F,EAAEhE,OAAOlM,U,8BAI5B,SAAiBkQ,GACbrQ,KAAKuZ,SAAS,CACV1I,SAAUR,EAAEhE,OAAOlM,U,oBAI3B,WACSgc,GAAiBnc,KAAK2Y,MAAMnO,UAAUiR,QAKtCG,GAAiB5b,KAAK2Y,MAAM9E,UAAU4H,QAKtCa,GAActc,KAAK2Y,MAAMtO,OAAOoR,QAKjCmB,GAAY5c,KAAK2Y,MAAM9E,UAAU4H,OAAQzb,KAAK2Y,MAAMpO,KAAK8I,KAAI,SAAAC,GAAC,OAAIA,EAAElJ,QACpEpK,KAAKie,UAAU,qEAAoB,yGAIvCje,KAAKuZ,SAAS,CACVhP,KAAK,GAAD,oBAAMvK,KAAK2Y,MAAMpO,MAAjB,CAAuB,CACvBH,IAAKpK,KAAK2Y,MAAM9E,UAAU4H,OAC1BpR,OAAQrK,KAAK2Y,MAAMtO,OAAOoR,UAE9B5H,UAAW,GACXxJ,OAAQ,KAfRrK,KAAKie,UAAU,qEAAoB,gDALnCje,KAAKie,UAAU,qEAAoB,oDALnCje,KAAKie,UAAU,qEAAoB,8I,+BA6B3C,WACIje,KAAKimB,kB,gCAGT,WACIjmB,KAAKimB,kB,oBAYT,WAAU,IAAD,OACCxQ,EAAUzV,KAAKqZ,MAAM5D,QAE3B,OAAIzV,KAAK2Y,MAAMW,WACJ,eAAC,KAAD,CAAUE,GAAG,WAIpB,uBAAKC,UAAU,eAAf,UACI,sBAAK2I,IAAKpiB,KAAKkmB,WACf,6CACA,sBAAKzM,UAAU,eAAf,SACI,eAAC,GAAD,CAAM/N,MAAM,mBAAmBnB,KAAMkL,EAAQtC,eAEjD,uBAAKsG,UAAU,gBAAf,UACI,sBAAK2I,IAAKpiB,KAAK6jB,aACf,uBAAKpK,UAAU,UAAf,UACI,eAAC,GAAD,CAAM/N,MAAM,eAAenB,KAAMvK,KAAK2Y,MAAMpO,OAC5C,2BAASkP,UAAU,gBAAnB,UACI,eAAC,GAAD,CACI0J,YAAa,SAAC9S,GAAD,OAAO,EAAKyT,YAAYzT,IACrC+S,eAAgB,SAAC/S,GAAD,OAAO,EAAK0T,eAAe1T,IAC3CgT,MAAO,kBAAM,EAAKW,UAClBV,gBAAiBtjB,KAAK2Y,MAAM9E,WAAa7T,KAAK2Y,MAAMtO,QACpDyI,IAAK9S,KAAK2Y,MAAM9E,UAAWxJ,OAAQrK,KAAK2Y,MAAMtO,OAC9CkZ,UAAU,IACd,eAAC,GAAD,CACIN,cAAe,SAAC5S,GAAD,OAAO,EAAK4T,cAAc5T,IACzCyV,iBAAkB,SAACzV,GAAD,OAAO,EAAKyW,iBAAiBzW,IAC/C+L,MAAOpc,KAAK2Y,MAAMnO,UAAWqG,SAAU7Q,KAAK2Y,MAAM9H,oBAIlE,eAAC,GAAD,CACIuJ,SAAUpa,KAAK2Y,MAAMpO,KAAK/I,OAAS,GAA8B,KAAzBxB,KAAK2Y,MAAMnO,WAA4C,KAAxBxK,KAAK2Y,MAAM9H,SAClF6I,QAAS,kBAAM,EAAKA,WAFxB,oBAGA,eAAC,GAAD,CAAkBsD,OAAQhd,KAAK2Y,MAAMwN,YAAalJ,QAAS,kBAAM,EAAKgK,gBACtE,eAAC,GAAD,CAAYjK,OAAQhd,KAAK2Y,MAAM8K,YAAaxG,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,kB,GA1M1CzD,IAAMC,WAwNfiF,gBAAWC,aARF,SAAAtG,GAAK,MAAK,CAC9BH,UAAWG,EAAMP,QAAQI,cAGF,SAAA0G,GAAQ,MAAK,CACpC2H,QAAS,SAACjQ,GAAD,OAAUsI,EAASvI,EAAaxC,EAAiByC,QAGpCqI,CAGxBkI,KC5NII,I,yDAEF,WAAYlO,GAAQ,IAAD,EAMf,OANe,qBACf,cAAMA,IA0IV4M,cAAgB,WAER,EAAKpC,WAAW5C,SAAW,EAAKtI,MAAM1H,QAAQzP,OAAS,EACvD,EAAKqiB,WAAW5C,QAAQC,eAAe,CAAEC,SAAU,WAE9C,EAAK+E,SAASjF,SACnB,EAAKiF,SAASjF,QAAQC,eAAe,CAAEC,SAAU,YA9IrD,EAAK0C,WAAazC,sBAClB,EAAK8E,SAAW9E,sBAEX9J,OAAOC,UAAUC,eAAeC,KAAK,EAAK4B,MAAO,YAAe,EAAKA,MAAM5D,SAKhF,EAAKkD,MAAQ,CACTW,YAAY,EAEZrI,QAAS,GAETJ,SAAU,GACVF,OAAQ,GACRqC,QAAS,GAET4T,aAASxX,EACT+W,aAAa,EAEb1C,aAAa,EACbnG,WAAY,GACZC,SAAU,GAEVlG,cAAUjI,EACV4I,SAAU,IA5BC,IAOX,EAAKW,MAAQ,CAAEW,YAAY,GAC3B,iB,6CAwBR,SAAU5N,EAAO7H,GACb7D,KAAKuZ,SAAS,CACVkK,aAAa,EACbnG,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACVkK,aAAa,M,wBAIrB,WACIzjB,KAAKuZ,SAAS,CAAE4M,aAAa,M,qBAGjC,WACI,GAAKnK,GAAehc,KAAK2Y,MAAM3F,QAAQyI,QAKvC,IACI,IAAMiI,EAAY,IAAI5Z,aAAU9J,KAAKqZ,MAAMb,WAErC/C,EAAUzV,KAAKqZ,MAAM5D,QACrBxE,EAAUyS,EAAU0C,cACtBpmB,KAAK2Y,MAAM1H,QAAQoC,KAAI,SAAAC,GAAC,OACpBoQ,EAAU2C,aAAa5lB,SAAS6S,EAAE3C,QAAS2C,EAAEzC,cAG/C2W,EAAgB9D,EAAU+D,oBAC5BhS,EAAQzC,QACR,CAAC0Q,EAAUgE,oBACP1nB,KAAK2Y,MAAM3F,QAAQyI,OAAQxK,KAI7B0W,EAAYjE,EAAUgD,gBAAgBc,EAAe,IAC3DG,EAAUhB,QAAQlR,EAAQxC,YAE1B,IAAM2T,EAAUe,EAAU5Z,OAE1B/N,KAAKqZ,MAAMwN,QAAQD,GACnB5mB,KAAKuZ,SAAS,CAAE4M,aAAa,IAEjC,MAAO9V,GACH9B,QAAQjO,IAAI+P,GACZrQ,KAAKie,UAAU,2EAAqB,wGA9BpCje,KAAKie,UAAU,2EAAqB,4F,8BAmC5C,SAAiB5N,GACbrQ,KAAKuZ,SAAS,CACV1I,SAAUR,EAAEhE,OAAOlM,U,4BAI3B,SAAekQ,GACXrQ,KAAKuZ,SAAS,CACV5I,OAAQN,EAAEhE,OAAOlM,U,6BAIzB,SAAgBkQ,GACZrQ,KAAKuZ,SAAS,CACVvG,QAAS3C,EAAEhE,OAAOlM,U,uBAI1B,WACSuc,GAAgB1c,KAAK2Y,MAAM9H,SAAS4K,OAAQzb,KAAKqZ,MAAM5D,QAAQlC,SAASF,KAAI,SAAAC,GAAC,OAAIA,EAAEzC,aAKnFgM,GAAc7c,KAAK2Y,MAAMhI,OAAO8K,QAKjCmB,GAAY5c,KAAK2Y,MAAM9H,SAAS4K,OAAQzb,KAAK2Y,MAAM1H,QAAQoC,KAAI,SAAAC,GAAC,OAAIA,EAAEzC,aACtE7Q,KAAKie,UAAU,uFAAuB,8GAI1Cje,KAAKuZ,SAAS,CACVtI,QAAQ,GAAD,oBAAMjR,KAAK2Y,MAAM1H,SAAjB,CAA0B,CAC7BJ,SAAU7Q,KAAK2Y,MAAM9H,SAAS4K,OAC9B9K,OAAQ3Q,KAAK2Y,MAAMhI,OAAO8K,UAE9B5K,SAAU,GACVF,OAAQ,KAfR3Q,KAAKie,UAAU,uFAAuB,yDALtCje,KAAKie,UAAU,uFAAuB,uD,+BAwB9C,WACIje,KAAKimB,kB,gCAGT,WACIjmB,KAAKimB,kB,oBAaT,WAAU,IAAD,OACCxQ,EAAUzV,KAAKqZ,MAAM5D,QAE3B,OAAIzV,KAAK2Y,MAAMW,WACJ,eAAC,KAAD,CAAUE,GAAG,WAIpB,uBAAKC,UAAU,eAAf,UACI,sBAAK2I,IAAKpiB,KAAKkmB,WACf,2CACA,sBAAKzM,UAAU,kBAAf,SACI,eAAC,GAAD,CAAU/N,MAAM,uBAAuBka,SAAS,EAAOrS,SAAUkC,EAAQlC,aAE7E,uBAAKkG,UAAU,gBAAf,UACI,sBAAK2I,IAAKpiB,KAAK6jB,aACf,uBAAKpK,UAAU,aAAf,UACI,eAAC,GAAD,CAAU/N,MAAM,cAAcka,SAAS,EAAMrS,SAAUvT,KAAK2Y,MAAM1H,UAClE,eAAC,GAAD,CACI6U,iBAAkB,SAACzV,GAAD,OAAO,EAAKyW,iBAAiBzW,IAC/C0V,eAAgB,SAAC1V,GAAD,OAAO,EAAK0W,eAAe1W,IAC3CQ,SAAU7Q,KAAK2Y,MAAM9H,SACrBF,OAAQ3Q,KAAK2Y,MAAMhI,OACnB2S,gBAAiBtjB,KAAK2Y,MAAM9H,UAAY7Q,KAAK2Y,MAAMhI,QACnD0S,MAAO,kBAAM,EAAK2D,eACtB,uBAAKvN,UAAU,mBAAf,UACI,qDACA,eAAC,GAAD,CACI9N,KAAK,SAASqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,iBAC3D5a,MAAOH,KAAK2Y,MAAMnO,UAClBsQ,SAAU,SAACzK,GAAD,OAAO,EAAKgL,gBAAgBhL,eAItD,eAAC,GAAD,CACI+J,SAAUpa,KAAK2Y,MAAM1H,QAAQzP,OAAS,GAA4B,KAAvBxB,KAAK2Y,MAAM3F,QACtD0G,QAAS,kBAAM,EAAKA,WAFxB,sBAIA,eAAC,GAAD,CAAkBsD,OAAQhd,KAAK2Y,MAAMwN,YAAalJ,QAAS,kBAAM,EAAKgK,gBACtE,eAAC,GAAD,CAAYjK,OAAQhd,KAAK2Y,MAAM8K,YAAaxG,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,kB,GA/L3CzD,IAAMC,YA6MdiF,gBAAWC,aARF,SAAAtG,GAAK,MAAK,CAC9BH,UAAWG,EAAMP,QAAQI,cAGF,SAAA0G,GAAQ,MAAK,CACpC2H,QAAS,SAACjQ,GAAD,OAAUsI,EAASvI,EAAavC,EAAewC,QAGlCqI,CAGxBsI,KCxNI5a,G,kDACF,WAAY0M,GAAQ,IAAD,ExBqBMV,EwBlBrB,OAHe,oBACf,cAAMU,IxBoBeV,EwBlBH,EAAKU,QxBwBtB/B,OAAOC,UAAUC,eAAeC,KAAKkB,EAAO,aAAgBA,EAAMiP,UAIlEtQ,OAAOC,UAAUC,eAAeC,KAAKkB,EAAMiP,SAAU,UAAajP,EAAMiP,SAASjP,OwB3B1ErB,OAAOC,UAAUC,eAAeC,KAAK,EAAK4B,MAAMuO,SAASjP,MAAO,cAAiB,EAAKU,MAAMuO,SAASjP,MAAMhE,WAC3G,EAAK0E,MAAMlC,SASnB,EAAKwB,MAAQ,CACTW,YAAY,EACZ3E,UAAW,EAAK0E,MAAMuO,SAASjP,MAAMhE,WAhB1B,IAOX,EAAKgE,MAAQ,CACTW,YAAY,EACZ3E,eAAWvF,GAEf,iB,mDASR,WACI,OAAQpP,KAAK2Y,MAAMhE,WACf,KAAKT,EACD,OAAO,eAAC,GAAD,CAAeuB,QAASzV,KAAKqZ,MAAM5D,UAC9C,KAAKtB,EACD,OAAO,eAAC,GAAD,CAAWsB,QAASzV,KAAKqZ,MAAM5D,UAC1C,KAAKrB,EACD,OAAO,eAAC,GAAD,CAAUqB,QAASzV,KAAKqZ,MAAM5D,UACzC,QACI,OAAO,eAAC,KAAD,CAAU+D,GAAE,kBAAaxZ,KAAKqZ,MAAM5D,QAAQzC,c,oBAI/D,WACI,OAAKhT,KAAKqZ,MAAMlC,QAGZnX,KAAK2Y,MAAMW,WACJ,eAAC,KAAD,CAAUE,GAAE,kBAAaxZ,KAAKqZ,MAAM5D,QAAQzC,WAInD,sBAAKyG,UAAU,iBAAf,SACKzZ,KAAK6nB,oBARH,eAAC,KAAD,CAAUrO,GAAG,e,GApCRM,IAAMC,WAuDfkF,gBALS,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,QACrB1B,QAASkD,EAAMpC,MAAMd,WAGVwJ,CAEbtS,IC9CImb,I,OAAW,CACb5N,QAAS,QACT0G,QAAS,YACTD,OAAQ,IACRoH,SAAU,UACVC,WAAY,aAGVC,GAAuB,SAACtlB,GAC1B,OAAQA,GACJ,KAAK+R,EACD,OAAOR,EACX,KAAKW,EACD,OAAOV,EACX,KAAKY,EACD,OAAOX,EACX,QACI,OAAOC,IAIb6T,G,kDAEF,WAAY7O,GAAQ,IAAD,8BACf,cAAMA,IA8CV8O,aAAe,WACP,EAAKC,QAAQnH,SAAW,EAAKtI,MAAM0P,WACnC,EAAKD,QAAQnH,QAAQC,eAAe,CAAEC,SAAU,WAE3C,EAAKmH,QAAQrH,SAAW,EAAKtI,MAAM/B,OAAS,EAAK+B,MAAM0P,WAC5D,EAAKC,QAAQrH,QAAQC,eAAe,CAAEC,SAAU,WAE3C,EAAK0C,WAAW5C,SACrB,EAAK4C,WAAW5C,QAAQC,eAAe,CAAEC,SAAU,YApDvD,EAAK0C,WAAazC,sBAClB,EAAKkH,QAAUlH,sBACf,EAAKgH,QAAUhH,sBAEf,EAAK/H,MAAMwN,QAAQxS,EAAc,MAEjC,EAAKsE,MAAQ,CACTW,YAAY,EAEZ6M,aAAa,EACbkC,YAAY,EAEZ5E,aAAa,EACbnG,WAAY,GACZC,SAAU,IAjBC,E,6CAqBnB,SAAU7R,EAAO7H,GACb7D,KAAKuZ,SAAS,CACVkK,aAAa,EACbnG,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACVkK,aAAa,M,wBAIrB,WACIzjB,KAAKuZ,SAAS,CAAE4M,aAAa,M,+BAGjC,WACInmB,KAAKmoB,iB,gCAGT,WACInoB,KAAKmoB,iB,sBAeT,WAAY,IAAD,OACP,OACI,sBAAK1O,UAAU,YAAf,SACOzZ,KAAKqZ,MAAM1E,YAAcN,GAEpB,sBAAK4F,MAAO6N,GACRpO,QAAS,kBA7FrB7V,EA6FkCyC,KAAK4H,UAAU,EAAKmL,MAAMzC,KAAM,KAAM,GA5FpFqE,KAAKpX,QACL+T,MAAM,WAFK,IAAC/T,GA4FQ,SAEKyC,KAAK4H,UAAUlO,KAAKqZ,MAAMzC,KAAM,KAAM,S,wBAO/D,SAAWvG,GAAI,IAAD,OACJqH,EAAOrH,EAAEhE,OAAOkc,MAAM,GACtBC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WACZ,IAAM9R,EAAO,EAAKyC,MAAMzC,KACxB,IACI,IAAM7T,EAASuD,KAAK2I,MAAMuZ,EAAOG,QACjC,GAAKhN,GAAY5Y,GAGZ,CACD,IAAM4R,EAAYsT,GAAqBllB,EAAOL,OAC9C,EAAK2W,MAAMwN,QAAQlS,EAAW5R,QAJ9B,EAAKkb,UAAU,2EAAqB,iIAO5C,MAAO5N,GACH,GAAIuG,EAAM,CACN,IAAMjC,EAAYsT,GAAqBrR,EAAKlU,OAC5C,EAAK2W,MAAMwN,QAAQlS,EAAWiC,GAElC,EAAKqH,UAAU,2EAAqB,uFAG5CuK,EAAOI,WAAWlR,EAAM,W,yBAI5B,WACI1X,KAAKuZ,SAAS,CACV4M,aAAa,M,yBAIrB,WACI,IAAI9Z,EAASrM,KAAKqZ,MAAMzC,KAExB,GAAK+E,GAAYtP,GAIjB,GAAGuQ,GAAY5c,KAAKqZ,MAAM5D,QAAQ5B,UAAW7T,KAAKqZ,MAAMzC,KAAKpE,WAAWa,KAAI,SAAAC,GAAC,OAAIA,EAAE1F,WAC/E5N,KAAKie,UAAU,4CAAe,wEADlC,CAKA,IAAMrQ,EAAS,IAAIiB,UAAO7O,KAAKqZ,MAAMb,UAAWxY,KAAKqZ,MAAM5D,QAAQxC,YAEnE,IACI,IAAM2D,EAAOhJ,EAAOib,cAAcxc,GAC5BsI,EAAYsT,GAAqBrR,EAAKlU,OAE5C1C,KAAKqZ,MAAMwN,QAAQlS,EAAWiC,GAC9B5W,KAAKie,UAAU,4CAAe,qFAElC,MAAO5N,GACH,IAAMsE,EAAYsT,GAAqB5b,EAAO3J,OAC9C1C,KAAKqZ,MAAMwN,QAAQlS,EAAWtI,GAC9BrM,KAAKie,UAAU,4CAAe,+H,sBAItC,WACIje,KAAKuZ,SAAS,CACV8O,YAAaroB,KAAK2Y,MAAM0P,e,oBAIhC,WAAU,IAAD,OAEL,OAAGroB,KAAK2Y,MAAMW,WACH,eAAC,KAAD,CAAUE,GAAG,WAIpB,uBAAKC,UAAU,iBAAf,UACI,sBAAK2I,IAAKpiB,KAAK6jB,aACf,wDACA,sBAAKzB,IAAKpiB,KAAKsoB,UACf,uBAAK7O,UAAU,iBAAf,UACI,uBAAKA,UAAU,YAAf,UACI,wBAAMR,GAAG,QAAT,UACI,oBAAGA,GAAG,OAAN,uBACA,oBAAGA,GAAG,OAAN,SAEQjZ,KAAKqZ,MAAMzC,MAAQU,OAAOC,UAAUC,eAAeC,KAAKzX,KAAKqZ,MAAMzC,KAAM,QACnE5W,KAAKqZ,MAAMzC,KAAKnK,KAAKY,KACrB,YAIlB,wBAAM4L,GAAG,QAAT,UACI,oBAAGA,GAAG,OAAN,kBACA,oBAAGA,GAAG,OAAN,SAAcjZ,KAAKqZ,MAAMzC,KAAO5W,KAAKqZ,MAAMzC,KAAKlU,MAAQ,YAE5D,wBAAMuW,GAAG,MAAT,UACI,oBAAGA,GAAG,OAAN,wBACA,oBAAGA,GAAG,OAAN,SAAcjZ,KAAKqZ,MAAMzC,MAC6B,IAAlD5W,KAAKqZ,MAAMzC,KAAKpE,WAAWa,KAAI,SAAAC,GAAC,OAAIA,KAAG9R,OAEmB,IAAlDxB,KAAKqZ,MAAMzC,KAAKpE,WAAWa,KAAI,SAAAC,GAAC,OAAIA,KAAG9R,OAAvC,UACSxB,KAAKqZ,MAAMzC,KAAKpE,WAAWa,KAAI,SAAAC,GAAC,OAAIA,KAAG9R,OADhD,wBAESxB,KAAKqZ,MAAMzC,KAAKpE,WAAWa,KAAI,SAAAC,GAAC,OAAIA,KAAG9R,OAFhD,eAKR,uBAGZ,sBAAK4gB,IAAKpiB,KAAKooB,YACdpoB,KAAKqZ,MAAMzC,MAEJ,sBAAK6C,UAAU,iBACXC,QAAS,kBAAM,EAAKoP,YADxB,SAEI,6BAAI9oB,KAAK2Y,MAAM0P,WAAa,QAAU,kBAGjDroB,KAAK2Y,MAAM0P,YAAaroB,KAAK+oB,WAC9B,sBAAKtP,UAAU,aAAf,SACI,wBAAO9W,KAAK,OAAOmY,SAAU,SAACzK,GAAD,OAAO,EAAK2Y,WAAW3Y,WAG5D,uBAAKoJ,UAAU,eAAf,UACI,eAAC,GAAD,CAAeW,SAAUpa,KAAKqZ,MAAM1E,YAAcN,EAAcqF,QAAS,kBAAM,EAAKuP,eAApF,kBACA,eAAC,GAAD,CAAe7O,SAAUpa,KAAKqZ,MAAM1E,YAAcN,EAAcqF,QAAS,kBAAM,EAAKwP,eAApF,qBAEJ,eAAC,GAAD,CAAkBlM,OAAQhd,KAAK2Y,MAAMwN,YAAalJ,QAAS,kBAAM,EAAKgK,gBACtE,eAAC,GAAD,CAAYjK,OAAQhd,KAAK2Y,MAAM8K,YAAaxG,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,kB,GA1M/CzD,IAAMC,WA8NViF,gBAAWC,aAdF,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,QACrB1B,QAASkD,EAAMpC,MAAMd,QAErBd,UAAWgE,EAAMhE,UAAUA,UAC3BiC,KAAM+B,EAAMhE,UAAUiC,KAEtB4B,UAAWG,EAAMP,QAAQI,cAGF,SAAA0G,GAAQ,MAAK,CACpC2H,QAAS,SAAClS,EAAWiC,GAAZ,OAAqBsI,EAASvI,EAAahC,EAAWiC,QAGzCqI,CAGxBiJ,KCzQEiB,I,QAAU,GAERC,G,kDACF,WAAY/P,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACT0Q,KAAM,GAJK,E,yCAQnB,WACIF,IAAU,EACVnpB,KAAKuZ,SAAS,CAAE8P,KAAMrpB,KAAK2Y,MAAM0Q,KAAO,M,mBAG5C,WACI,QAAIF,KACAA,IAAU,EACH,eAAC,KAAD,CAAU3P,GAAG,e,oBAO5B,WAAU,IAAD,OACL,EAA6BxZ,KAAKqZ,MAA1BlC,EAAR,EAAQA,QAAS1B,EAAjB,EAAiBA,QACX1E,EAAO0E,EAAUA,EAAQzC,QAAQ9Q,UAAU,EAAG,IAAM,0BAAuBkN,EAEjF,OACI,uBAAKqK,UAAU,MAAf,YACKzZ,KAAK2Y,MAAM0Q,MAAOrpB,KAAKspB,QACxB,eAAC,IAAD,CAAM7P,UAAU,YAAYD,GAAG,IAA/B,SACI,oDAEJ,eAAC,IAAD,CAAMC,UAAW,cAAgBtC,EAAU,KAAO,OAAQqC,GAAG,SAA7D,SACI,iDAEHrC,GAAU,oBAAGuC,QAAS,kBAAM,EAAK6P,SAAStQ,GAAG,WAAnC,SAA+ClI,MACzDoG,GAEO,eAAC,IAAD,CAAMsC,UAAU,WAAWD,GAAG,QAA9B,SACI,kDAGZ,eAAC,IAAD,CAAMC,UAAU,OAAOD,GAAG,gBAA1B,SACI,oDAEJ,eAAC,IAAD,CAAMC,UAAU,OAAOD,GAAG,eAA1B,SACI,kDAEH/D,IAAWA,EAAQe,aAEZ,eAAC,IAAD,CAAMiD,UAAU,OAAOD,GAAG,oBAA1B,SACI,wDAGZ,eAAC,IAAD,CAAMC,UAAU,gBAAgBD,GAAG,QAAnC,SACI,wCAEJ,eAAC,IAAD,CAAMC,UAAU,UAAUD,GAAG,WAA7B,SACI,kD,GA5DKM,IAAMC,WAwEhBkF,gBALS,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,QACrB1B,QAASkD,EAAMpC,MAAMd,WAGVwJ,CAEbmK,IC1EII,I,yDACF,WAAYnQ,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAMoQ,UACX,EAAKpQ,MAAM3C,eACX,EAAK2C,MAAMqQ,aAJI,E,0CAOnB,WACI,OAAI1pB,KAAKqZ,MAAMlC,QAIR,4CAHI,eAAC,KAAD,CAAUqC,GAAG,e,GAVXM,IAAMC,YA4BZkF,gBAVS,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,YAGE,SAAA+H,GAAQ,MAAK,CACpCuK,QAAS,kBAAMvK,EAASzI,MACxBC,aAAc,kBAAMwI,EAASxI,MAC7BgT,WAAY,kBAAMxK,E3CwFX,CACHvc,KAAMuT,Q2CtFC+I,CAGbuK,IC7BIG,I,yDAEF,WAAYtQ,GAAQ,IAAD,8BACf,cAAMA,IACDV,MAAQ,CACT8K,aAAa,EACbnG,WAAY,GACZC,SAAU,GAEVnF,QAAS,EAAKiB,MAAMjB,QACpBI,UAAW,EAAKa,MAAMb,WARX,E,8CAYnB,WACIxY,KAAKqZ,MAAMuQ,WAAW5pB,KAAK2Y,MAAMP,SACjCpY,KAAKie,UAAU,sEAAf,8DAAmDje,KAAK2Y,MAAMP,Y,0BAGlE,WACIpY,KAAKqZ,MAAMwQ,aAAa7pB,KAAK2Y,MAAMH,WACnCxY,KAAKie,UAAU,4DAAf,oDAAmDje,KAAK2Y,MAAMH,c,0BAGlE,WACIxY,KAAKqZ,MAAMyQ,eACX9pB,KAAKie,UAAU,sEAAf,8DAAmDlK,mC,4BAGvD,WACI/T,KAAKqZ,MAAM0Q,iBACX/pB,KAAKie,UAAU,4DAAf,oDAAmDlK,Y,6BAGvD,SAAgB1D,GACZrQ,KAAKuZ,SAAS,CACVnB,QAAS/H,EAAEhE,OAAOlM,U,+BAI1B,SAAkBkQ,GACdrQ,KAAKuZ,SAAS,CACVf,UAAWnI,EAAEhE,OAAOlM,U,uBAI5B,SAAUuL,EAAO7H,GACb7D,KAAKuZ,SAAS,CACVkK,aAAa,EACbnG,WAAY5R,EACZ6R,SAAU1Z,M,wBAIlB,WACI7D,KAAKuZ,SAAS,CACVkK,aAAa,EAEbrL,QAASpY,KAAKqZ,MAAMjB,QACpBI,UAAWxY,KAAKqZ,MAAMb,c,oBAI9B,WAAU,IAAD,OACL,OACI,uBAAKiB,UAAU,oBAAf,UACI,0CACA,uBAAKA,UAAU,wBAAf,UACI,8CACA,2BAASR,GAAG,gBAAZ,UACI,eAAC,GAAD,CAAUtN,KAAK,SAASqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,kBACjE5a,MAAOH,KAAK2Y,MAAMP,QAClB0C,SAAU,SAACzK,GAAD,OAAO,EAAK2Z,gBAAgB3Z,MAC1C,eAAC,GAAD,CACI8J,SAAS,EACTC,UAAU,EACVV,QAAS,kBAAM,EAAKkQ,cAHxB,iBAIA,eAAC,GAAD,CACIzP,SAAS,EACTC,UAAU,EACVV,QAAS,kBAAM,EAAKoQ,gBAHxB,yBAMR,uBAAKrQ,UAAU,2BAAf,UACI,iDACA,2BAASR,GAAG,mBAAZ,UACI,eAAC,GAAD,CAAUtN,KAAK,SAASqP,SAAS,EAAOZ,UAAU,EAAOW,YAAY,aACjE5a,MAAOH,KAAK2Y,MAAMH,UAClBsC,SAAU,SAACzK,GAAD,OAAO,EAAK4Z,kBAAkB5Z,MAC5C,eAAC,GAAD,CACI8J,SAAS,EACTC,UAAU,EACVV,QAAS,kBAAM,EAAKmQ,gBAHxB,iBAIA,eAAC,GAAD,CACI1P,SAAS,EACTC,UAAU,EACVV,QAAS,kBAAM,EAAKqQ,kBAHxB,yBAMR,uBAAKtQ,UAAU,uBAAf,UACI,kDACA,+CAAe1F,eAEnB,eAAC,GAAD,CAAYiJ,OAAQhd,KAAK2Y,MAAM8K,YAAaxG,QAAS,kBAAM,EAAK6B,cAC5DpT,MAAO1L,KAAK2Y,MAAM2E,WAAYzZ,IAAK7D,KAAK2Y,MAAM4E,kB,GAxGtCzD,IAAMC,YA0HnBiF,gBAAWC,aAZF,SAAAtG,GAAK,MAAK,CAC9BP,QAASO,EAAMP,QAAQA,QACvBI,UAAWG,EAAMP,QAAQI,cAGF,SAAA0G,GAAQ,MAAK,CACpC0K,WAAY,SAACxR,GAAD,OAAa8G,E5COtB,SAAoB9G,GACvB,MAAO,CACHzV,KAAMwT,EACNiC,W4CV8BwR,CAAWxR,KAC7CyR,aAAc,SAACrR,GAAD,OAAe0G,E5CAtB,CACHvc,KAAM0T,EACN4C,G4CF+CT,KACnDsR,aAAc,kBAAM5K,E5CmBb,CACHvc,KAAMyT,K4CnBV2T,eAAgB,kBAAM7K,E5CYf,CACHvc,KAAM2T,Q4CVY2I,CAGxB0K,K,OC1HaO,OATf,WACI,OACI,uBAAKzQ,UAAU,mBAAf,UACI,mDAAmB1F,YACnB,oBAAGiR,KAAK,kDAAR,iECFNmF,I,4KAEF,WACInqB,KAAKqZ,MAAMoQ,UACXzpB,KAAKqZ,MAAM4D,Y,oBAGf,WAAU,IAAD,OACGD,EAAWhd,KAAKqZ,MAAhB2D,OACR,OACI,sBAAKvD,UAAWuD,EAAS,gCAAkC,eAA3D,SACKA,EACG,qCACI,oDAEI,yBAAQvD,UAAU,QAAQC,QAAS,kBAAM,EAAK0Q,YAA9C,uBAEJ,kCACI,oBAAGnR,GAAG,aAAN,sKACA,oBAAGA,GAAG,aAAN,+IACA,gCACI,oBAAGQ,UAAU,sBAAsBR,GAAG,UAAUS,QAAS,kBAAM,EAAK0Q,YAApE,kCAIZ,W,GAzBQtQ,IAAMC,YAmCnBkF,eACX,MALuB,SAAAC,GAAQ,MAAK,CACpCuK,QAAS,kBAAMvK,EAASzI,SAGbwI,CAGbkL,IC5BInX,GAAU,SAACqX,GACb,OACI,8BACI,oBAAG3Q,QAAS,kBARR7V,EAQqBwmB,EAPjCpP,KAAKpX,QACL+T,MAAM,WAFK,IAAC/T,GAQJ,SAAoCwmB,KAD/BA,IAMXC,G,kDAEF,WAAYjR,GAAQ,IAAD,sBAGf,IAAMkR,GAFN,cAAMlR,IAEiBA,MAAM1E,YAAcR,EAH5B,OAKVoW,GAAa,EAAKlR,MAAMvC,aACzB,EAAKuC,MAAMmR,OAAO,CACd7V,UAAW,EAAK0E,MAAM1E,UACtBtH,KAAM,EAAKgM,MAAMzC,KAAKnK,KAAKY,KAC3B0S,eAAe,IAAI3c,MAAOG,gBAIlC,EAAKoV,MAAQ,CACTW,YAAY,EACZ6M,YAAaoE,EACbA,aAhBW,E,8CAoBnB,WACIvqB,KAAKuZ,SAAS,CAAE4M,aAAa,M,4BAGjC,WACI,MAAyCnmB,KAAKqZ,MAAtCrC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAAQtC,EAArB,EAAqBA,UAAW5B,EAAhC,EAAgCA,KAEhC,OAAQkE,GACJ,KAAK,IACD,OACI,2BAASwC,UAAW,qBAApB,UAEQ9E,IAAcR,EACR,yDACA,wDAEV,iCACKQ,IAAcT,GAEP,qCACI,uDACA,8BACKnB,EAAKM,KAAI,SAAAC,GAAC,OAAIN,GAAQM,QAE3B,gLAIXqB,IAAcP,GAEP,mCACI,wKAQ5B,KAAK,IACL,KAAK,IACL,QACI,OACI,2BAASqF,UAAW,kBAApB,UACI,8BAAK,eACL,6BAAInC,OAAOC,UAAUC,eAAeC,KAAKT,EAAK,SAAWA,EAAItL,MAAQ,0E,oBAMzF,WAAU,IAAD,OACL,OAAI1L,KAAK2Y,MAAMW,YACXtZ,KAAKqZ,MAAMoR,YACJ,eAAC,KAAD,CAAUjR,GAAG,YAIpB,uBAAKC,UAAU,gBAAf,UACKzZ,KAAK0qB,iBACN,eAAC,GAAD,CAAe1N,OAAQhd,KAAK2Y,MAAMwN,YAAalJ,QAAS,kBAAM,EAAKgK,uB,GAlF5DnN,IAAMC,WAwGdiF,gBAAWC,aAhBF,SAAAtG,GAAK,MAAK,CAC9BhE,UAAWgE,EAAMhE,UAAUA,UAC3BiC,KAAM+B,EAAMhE,UAAUiC,KACtB7D,KAAM4F,EAAMhE,UAAU5B,KACtBiE,IAAK2B,EAAMhE,UAAUqC,IACrBC,OAAQ0B,EAAMhE,UAAUsC,OACxBF,UAAW4B,EAAMhE,UAAUoC,UAC3BD,YAAa6B,EAAMhE,UAAUmC,gBAGN,SAAAoI,GAAQ,MAAK,CACpCuL,UAAW,kBAAMvL,EAASvI,EAAatC,EAAc,MACrDmR,UAAW,SAAC1O,EAAaC,EAAWC,EAAKC,EAAQlE,GAAtC,OAA+CmM,EAASrI,EAAYC,EAAaC,EAAWC,EAAKC,EAAQlE,KACpHyX,OAAQ,SAACnd,GAAD,OAAU6R,E/CjBX,CACHvc,KAAMqT,EACN3E,K+CewChE,QAGtB4R,CAGxBqL,KC1HIK,I,yDAEF,WAAYtR,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACTW,YAAa,EAAKD,MAAMvC,YACxB8T,QAAS,GALE,E,+CASnB,WAAe,IAAD,OACV,GAAI5qB,KAAK2Y,MAAMiS,QAAU,GAAI,CACzB,MAAmC5qB,KAAKqZ,MAAhCtG,EAAR,EAAQA,KAAMiE,EAAd,EAAcA,IAAKF,EAAnB,EAAmBA,YAEb+T,EAAS,yCAAG,WAAOC,EAAOC,EAAMjU,GAApB,UAAA2G,EAAA,yDACV3G,EADU,uBAEV,EAAKyC,SAAS,CACVD,YAAY,IAHN,0CASDoE,KAAMC,IAAI,EAAKtE,MAAMd,kBAAoBuS,GACjD3M,MACG,SAAAsH,GACQA,EAAS1S,KAAKK,UAAUiC,UACxB,EAAKgE,MAAMmM,WAAU,GAAM,EAAMuF,EAAM,IAAKD,GAC5C,EAAKvR,SAAS,CACVD,YAAY,MAIhB,EAAKD,MAAMmM,WAAU,GAAM,EAAO,CAC9B9Z,MAAO+Z,EAAS1S,KAAKK,UAAU4X,OAAOnnB,KACvC,IAAKinB,GACR,EAAKvR,SAAS,CACVD,YAAY,QAK3B+E,OACG,SAAAhO,GAE8B,MAAtBA,EAAEoV,SAASxO,QAAwC,MAAtB5G,EAAEoV,SAASxO,OACxC,EAAKsC,SAAS,CACVqR,QAAS,EAAKjS,MAAMiS,QAAU,KAIlC,EAAKvR,MAAMmM,WAAU,GAAM,EAAOnV,EAAEoV,SAAS1S,KAAM,IAAK+X,GACxD,EAAKvR,SAAS,CACVD,YAAY,QAvClB,mFAAH,0DAkDf,OAJA+G,YAAW,SAAC4K,EAAIC,EAAIC,GAChBN,EAAUI,EAAIC,EAAIC,KACnB,IAAMpY,EAAMiE,EAAKF,GAEb,kBAAM,EAAKsU,eAGlBprB,KAAKqZ,MAAMmM,WAAU,GAAM,EAAO,CAC9B9Z,MAAO,oFACR,IAAK1L,KAAKqZ,MAAMtG,MACnB/S,KAAKuZ,SAAS,CACVD,YAAY,M,+BAKxB,WACItZ,KAAKorB,gB,oBAGT,WACI,OAAIprB,KAAK2Y,MAAMW,WACJ,eAAC,KAAD,CAAUE,GAAG,cAIpB,sBAAKC,UAAU,iBAAf,SACI,2BAASA,UAAU,cAAnB,UACI,6CACA,6BAAI,oKACJ,sDAAsBzZ,KAAK2Y,MAAMiS,oB,GA3FzB9Q,IAAMC,YA8GnBiF,gBAAWC,aAZF,SAAAtG,GAAK,MAAK,CAC9B5F,KAAM4F,EAAMhE,UAAU5B,KACtBiE,IAAK2B,EAAMhE,UAAUqC,IACrBC,OAAQ0B,EAAMhE,UAAUsC,OACxBH,YAAa6B,EAAMhE,UAAUmC,YAC7ByB,kBAAmBI,EAAMP,QAAQG,sBAGV,SAAA2G,GAAQ,MAAK,CACpCsG,UAAW,SAAC1O,EAAaC,EAAWC,EAAKC,EAAQlE,GAAtC,OAA+CmM,EAASrI,EAAYC,EAAaC,EAAWC,EAAKC,EAAQlE,QAG9FkM,CAGxB0L,KCpHExB,I,QAAU,GAERkC,G,kDACF,WAAYhS,GAAQ,IAAD,8BACf,cAAMA,IAEDV,MAAQ,CACT0Q,KAAM,EACNiC,WAAW,GALA,E,yCASnB,WACInC,IAAU,EACVnpB,KAAKuZ,SAAS,CAAE8P,KAAMrpB,KAAK2Y,MAAM0Q,KAAO,M,mBAG5C,WACI,QAAIF,KACAA,IAAU,EACH,eAAC,KAAD,CAAU3P,GAAG,e,wBAO5B,WACIxZ,KAAKuZ,SAAS,CACV+R,WAAW,M,qBAInB,WACItrB,KAAKuZ,SAAS,CACV+R,WAAYtrB,KAAK2Y,MAAM2S,c,oBAI/B,WAAU,IAAD,OACL,EAA6BtrB,KAAKqZ,MAA1BlC,EAAR,EAAQA,QAAS1B,EAAjB,EAAiBA,QACX1E,EAAO0E,EAAUA,EAAQzC,QAAQ9Q,UAAU,EAAG,IAAM,0BAAuBkN,EAEjF,OACI,uBAAKqK,UAAU,UAAf,YACKzZ,KAAK2Y,MAAM0Q,MAAOrpB,KAAKspB,QACxB,wBAAO7P,UAAU,eAAeR,GAAG,eAAetW,KAAK,WAAWkc,QAAS7e,KAAK2Y,MAAM2S,YACtF,wBAAO7R,UAAU,cAAc8R,IAAI,eAC/B7R,QAAS,kBAAM,EAAK8R,WADxB,SAEI,uBAAM/R,UAAU,oBAEpB,eAAC,IAAD,CAAMA,UAAU,gBAAgBD,GAAG,IAC/BE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,oDAEJ,sBAAKhS,UAAU,eAAf,SACI,uBAAKA,UAAU,OAAf,UACI,eAAC,IAAD,CAAMA,UAAW,cAAgBtC,EAAU,KAAO,OAAQqC,GAAG,SACzDE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,iDAEHtU,GAEO,eAAC,IAAD,CAAMsC,UAAW,cAAgBtC,EAAU,KAAO,OAAQqC,GAAG,QACzDE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,kDAGZ,eAAC,IAAD,CAAMhS,UAAU,OAAOD,GAAG,gBACtBE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,oDAEJ,eAAC,IAAD,CAAMhS,UAAU,OAAOD,GAAG,eACtBE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,kDAEHhW,IAAWA,EAAQe,aAEZ,eAAC,IAAD,CAAMiD,UAAU,OAAOD,GAAG,oBACtBE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,wDAGZ,eAAC,IAAD,CAAMhS,UAAU,OAAOD,GAAG,QACtBE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,wCAEJ,eAAC,IAAD,CAAMhS,UAAU,OAAOD,GAAG,WACtBE,QAAS,kBAAM,EAAK+R,cADxB,SAEI,6CAEHtU,GAAU,oBAAGuC,QAAS,kBAAM,EAAK6P,SAAStQ,GAAG,WAAnC,SAA+ClI,gB,GAzFtD+I,IAAMC,WAsGnBkF,gBALS,SAAAtG,GAAK,MAAK,CAC9BxB,QAASwB,EAAMpC,MAAMY,QACrB1B,QAASkD,EAAMpC,MAAMd,WAGVwJ,CAEboM,IC7DaK,G,4JA3Bb,WAEE,OACE,sBAAKjS,UAAU,gBAAf,SACE,gBAAC,IAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,KAAD,CAAOkS,OAAK,EAACC,KAAK,IAAIC,UAAWzS,KACjC,eAAC,KAAD,CAAOwS,KAAK,SAASC,UAAW3O,KAChC,eAAC,KAAD,CAAO0O,KAAK,mBAAmBC,UAAW/K,KAC1C,eAAC,KAAD,CAAO8K,KAAK,gBAAgBC,UAAWjJ,KACvC,eAAC,KAAD,CAAOgJ,KAAK,eAAeC,UAAWrI,KACtC,eAAC,KAAD,CAAOoI,KAAK,oBAAoBC,UAAW1H,KAC3C,eAAC,KAAD,CAAOyH,KAAK,QAAQC,UAAWrH,KAC/B,eAAC,KAAD,CAAOoH,KAAK,aAAaC,UAAWlf,KACpC,eAAC,KAAD,CAAOif,KAAK,QAAQC,UAAW3D,KAC/B,eAAC,KAAD,CAAO0D,KAAK,UAAUC,UAAWrC,KACjC,eAAC,KAAD,CAAOoC,KAAK,WAAWC,UAAWlC,KAClC,eAAC,KAAD,CAAOiC,KAAK,YAAYC,UAAWvB,KACnC,eAAC,KAAD,CAAOsB,KAAK,WAAWC,UAAWlB,KAClC,eAAC,GAAD,a,GArBQ7Q,IAAMC,WCVT+R,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7N,MAAK,YAAkD,IAA/C8N,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,eAAC,IAAD,CAAUrT,MAAOA,EAAjB,SACE,eAAC,GAAD,MAEFwF,SAAS8N,eAAe,SAG1BV,M,sECfMpiB,EAAQhK,EAAQ,KAChBiK,EAAQjK,EAAQ,KAChBkD,EAAUlD,EAAQ,KAAckD,QAGhCiH,EAAOnK,EAAQ,IACf+sB,EAAY/sB,EAAQ,KAGpBuU,EAAUvU,EAAQ,KAClBgtB,EAAWhtB,EAAQ,KAEnBitB,EAAK,IADMjtB,EAAQ,KACDitB,IAAG,aAUrBC,EAAU,SAACtZ,EAAGK,GAChB,OAAO7S,EAAO8rB,QAAQtZ,EAAElJ,IAAIvJ,UAAW8S,EAAEvJ,IAAIvJ,YAS3CgsB,E,wBAMF,WAAYziB,EAAKzH,GACb,GADmB,UACP,WAARA,EAAmB,CACnB,IAAMI,EAAS2G,EAAM7G,YAAYuH,GACjCpK,KAAKiD,KAAOF,EAAOE,KACnBjD,KAAKoK,IAAMrH,EAAOC,cAGlBhD,KAAKiD,KAAOyG,EAAMhH,MAAMC,GACxB3C,KAAKoK,IAAMA,E,gCASnB,WACI,OAAOpK,KAAKoK,IAAM,IAAMpK,KAAKiD,O,oBAQjC,WACI,OAAOnC,EAAOQ,KAAKtB,KAAK8C,Y,qBAQ5B,WACI,OAAOhC,EAAOQ,KAAKtB,KAAKoK,S,KAY1BQ,E,wBAMF,WAAYR,EAAK0iB,GAAG,UAChB9sB,KAAKiD,KAAOyG,EAAMhH,MAAMiH,EAAMpF,QAC9BvE,KAAKoK,IAAM,IAAIyiB,EAAQziB,EAAK,WAC5BpK,KAAKqK,OAAS,IAAIX,EAAM5J,WAAWgtB,G,gCASvC,WACI,OAAOhsB,EAAOI,OACV,CAAClB,KAAKoK,IAAIzG,SAAU3D,KAAKqK,OAAO1G,a,kBASxC,WACI,IAAMyG,EAAM,GAIZ,OAHAA,EAAI1H,MAAQ1C,KAAKiD,KACjBmH,EAAIC,OAASrK,KAAKqK,OAAOlK,MACzBiK,EAAIA,IAAMpK,KAAKoK,IAAItH,SACZsH,M,KAeTS,E,wBAMF,WAAYN,EAAMC,GAAW,UACzBxK,KAAKiD,KAAOyG,EAAMhH,MAAMiH,EAAMnF,SAC9BxE,KAAKuK,KAAOA,EACZvK,KAAKwK,UAAY,IAAId,EAAM5J,WAAW0K,GACtCxK,KAAKqN,KAAOrN,KAAKmS,gB,+BAGrB,WACI,OAAOtI,EAAK6D,OAAO1N,KAAKqN,MAAQ,IAAM1D,EAAMvF,WAAa,IAAMxB,I,oBAUnE,WAEI,IADA,IAAMmqB,EAAO,GACJxrB,EAAI,EAAGA,EAAIvB,KAAKuK,KAAK/I,OAAQD,IAClCwrB,EAAKpiB,KAAK3K,KAAKuK,KAAKhJ,IAExB,IAAMyrB,EAAaD,EAAKrZ,KAAKkZ,GACvBzb,EAAQzH,EAAMlG,sBAAsBwpB,GAEpCC,EAAajtB,KAAKwK,UAAU7G,SAElC,OAAO7C,EAAOI,OAAO,CAACiQ,EAAO8b,M,kBAQjC,WACI,IAAM1iB,EAAO,GACbA,EAAK7H,MAAQ1C,KAAKiD,KAClBsH,EAAK8C,KAAOxD,EAAK6D,OAAO1N,KAAKqN,MAG7B,IADA,IAAM3C,EAAQ,GACLnJ,EAAI,EAAGA,EAAIvB,KAAKuK,KAAK/I,OAAQD,IAClCmJ,EAAMC,KACF3K,KAAKuK,KAAKhJ,GAAGwM,QAMrB,OAHAxD,EAAKA,KAAOG,EACZH,EAAKC,UAAYxK,KAAKwK,UAAUrK,MAEzBoK,I,2BAQX,WACI,OAAOb,EAAMzF,OAAOjE,KAAK2D,c,KAc3BupB,E,wBAMF,WAAYrK,EAASlgB,GACjB,OADuB,UACfA,GACJ,KAAKgH,EAAM/C,YACP5G,KAAK6iB,QAAU,IAAIgK,EAAQhK,EAASlZ,EAAMhD,aAC1C,MACJ,KAAKgD,EAAM7C,cACP9G,KAAK6iB,QAAU,IAAIgK,EAAQhK,EAASlZ,EAAM9C,eAC1C,MACJ,KAAK8C,EAAMjD,gBACP1G,KAAK6iB,QAAU,IAAIgK,EAAQhK,EAASlZ,EAAMlD,iBAC1C,MACJ,QACI,KAAM,+BAEdzG,KAAKge,YAAS5O,EACdpP,KAAK8M,aAAUsC,EACfpP,KAAK2C,KAAOA,E,uCAGhB,WACI,OAAO3C,KAAK6iB,QAAQ/f,W,0BAQxB,WACI,OAAO9C,KAAKge,OAAS,IAAMtU,EAAMhH,MAAM1C,KAAK2C,Q,kBAShD,SAAKkB,GACD,KAAM,6C,gCAOV,WACI,KAAM,0D,KAcRqM,E,2CAKF,WAAY2S,GAAS,wBACjB,cAAMA,EAASlZ,EAAM/C,cAChBumB,qBAFY,E,8BAWrB,SAAKtpB,GACD,IAAMupB,EAAO1jB,EAAM9F,OAAO8F,EAAM9F,OAAOC,IACjC+I,EAAK5M,KAAK8M,QAAQugB,WAAW,OAEnC,OAAOvsB,EAAOQ,KAAKqrB,EAAGnf,KAAK4f,EAAMxgB,EAAI,MAAO,CAAE0gB,WAAW,IAAQC,W,gCAOrE,WACI,IAAMC,EAAMf,EAAU9d,OAAO3O,KAAK6iB,QAAQzY,KACpCqjB,EAAU3sB,EAAOQ,KAAKksB,EAAIE,MAAM,EAAGF,EAAIhsB,OAAS,IAEtDxB,KAAK8M,QAAU6f,EAAGgB,eAAeF,GACjCztB,KAAKge,OAASnU,EAAK6D,OAAOgf,EAASkB,oBAAoBH,Q,GAhCtCP,GA8CnB/c,E,2CAKF,WAAY0S,GAAS,wBACjB,cAAMA,EAASlZ,EAAM7C,gBAChBqmB,qBAFY,E,8BAUrB,SAAKtpB,GACD,IAAMupB,EAAO1jB,EAAM9F,OAAOC,GACpB+I,EAAK5M,KAAK8M,QAAQugB,WAAW,OAE7BQ,EAAMlB,EAAGnf,KAAK4f,EAAMxgB,EAAI,MAAO,CAAE0gB,WAAW,IAAQC,QAEpDO,EAAOD,EAAI,GACXE,EAAIF,EAAIH,MAAM,EAAG,EAAII,GACrBE,EAAOH,EAAI,EAAIC,GACfG,EAAIJ,EAAIH,MAAM,EAAII,GAGlBI,EADQ,IAAIxkB,EAAM5J,WAAWguB,GACfK,SAEd9sB,EAAMP,EAAOC,MAAM+sB,EAAOE,EAAO,GAKvC,OAJAE,EAAMjT,KAAK5Z,EAAK,EAAG,EAAG,GACtBP,EAAOQ,KAAKysB,GAAG9S,KAAK5Z,EAAK,EAAG,EAAGysB,GAC/BhtB,EAAOQ,KAAK2sB,GAAGhT,KAAK5Z,EAAKysB,EAAO,EAAG,EAAGE,GAE/B3sB,I,gCAOX,WACIrB,KAAK8M,QAAU6f,EAAGgB,eAAe3tB,KAAK6iB,QAAQzY,KAC9CpK,KAAKge,OAAShe,KAAK8M,QAAQshB,YAAY1gB,OAAO,W,GA3C7Bwf,GAyDnB9c,E,2CAKF,WAAYyS,GAAS,wBACjB,cAAMA,EAASlZ,EAAMjD,kBAChBymB,qBAFY,E,8BAWrB,SAAKtpB,GACD,OAAO7D,KAAK8M,QAAQU,KAAK3J,K,gCAO7B,WACI7D,KAAK8M,QAAUmH,EAAQiZ,QAAQmB,WAAWruB,KAAK6iB,QAAQzY,KACvDpK,KAAKge,OAAShe,KAAK8M,QAAQ+G,gB,GA1BNqZ,GA8F7B1qB,EAAOC,QAAU,CACbmI,MACAC,OACAqF,aACAC,aACAC,iBACArD,WAjDe,SAAC5B,GAChB,GAAa,OAATA,EACA,OAvBO,WACX,IAAMmjB,EAAMxtB,EAAOQ,KACf,KAAOqrB,EAAG4B,aAAalB,WAAW,OAAS,KAAM,OAEjDmB,EAAM9kB,EAAM9F,OAAO0qB,GACvBE,EAAM9kB,EAAM9F,OAAO4qB,GAEnB,IAAMC,EAAW3tB,EAAOQ,KAAKktB,EAAIE,SAAS,EAAG,IAC7C,OAAO,IAAIxe,EAAWrG,EAAK6D,OACvB5M,EAAOI,OAAO,CAACotB,EAAKG,MAcbE,GAEN,GAAa,SAATxjB,EACL,OAZG,IAAIgF,EAAWwc,EAAG4B,aAAalB,WAAW,QAc5C,GAAa,WAATliB,EACL,OAXG,IAAIiF,EAAe6D,EAAQiZ,QAAQ0B,SAASC,UAc/C,KAAM,qFAuCVte,UAnCc,SAACue,EAAM3jB,GACrB,IAAIxI,EAAOwI,EACPf,EAAM0kB,EACV,GAAa,IAAT3jB,EAAa,CACb,IAA2B,IAAvB2jB,EAAKhtB,QAAQ,KACb,KAAM,8IAGN,IAAMiB,EAAS2G,EAAM7G,YAAYisB,GACjC1kB,EAAMrH,EAAOC,SACbL,EAAO+G,EAAMxG,gBAAgBH,EAAOE,MAG5C,OAAQN,GACJ,IAAK,MACL,KAAKgH,EAAMhD,YACP,OAAO,IAAIuJ,EAAW9F,GAC1B,IAAK,QACL,KAAKT,EAAM9C,cACP,OAAO,IAAIsJ,EAAW/F,GAC1B,IAAK,UACL,KAAKT,EAAMlD,gBACP,OAAO,IAAI2J,EAAehG,GAC9B,QACI,KAAM,8B","file":"static/js/main.9a87d21f.chunk.js","sourcesContent":["const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst { Uint64BE } = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if (this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2) ? 1 : Math.ceil((Math.log(this.num) / Math.log(2)) / 8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if (this.byteSize() > 4) {\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4 - this.byteSize());\n\n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n\n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf) {\n        const _buf = Buffer.from(buf);\n        for (var i = 0; i < _buf.length / 2; i++) {\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if (hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx + 1);\n\n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    return ISOToUTC(date.toISOString());\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {string} iso - iso string to change\n * @return {string} - UTC-format date string\n */\nconst ISOToUTC = (iso) => {\n    const t = iso.indexOf('T');\n    let z = iso.indexOf('Z');\n    let rtime;\n\n    if(z < 0) {\n        z = iso.indexOf('+');\n    }\n\n    if(z < 0) {\n        throw new Error(\"Invalid ISO type for ISOtoUTC\");\n    }\n\n    let _time = iso.substring(t + 1, z);\n    if(_time.length > 12) {\n        _time = _time.substring(0, 12);\n    }\n\n    const dotIdx = _time.indexOf('.');\n    if (dotIdx < 0) {\n        rtime = _time;\n    }\n    else {\n        const decimal = _time.substring(9, _time.length);\n        const idx = decimal.lastIndexOf('0');\n        if (idx < 0 || idx != decimal.length - 1) {\n            rtime = _time;\n        }\n        else {\n            let startIdx = decimal.length - 1;\n            for (let i = decimal.length - 1; i > -1; i--) {\n                if (decimal[i] == '0') {\n                    startIdx = i;\n                }\n                else {\n                    break;\n                }\n            }\n\n            if(startIdx == 0) {\n                rtime = _time.substring(0, dotIdx);\n            }\n            else {\n                rtime = _time.substring(0, dotIdx) + '.' + decimal.substring(0, startIdx);    \n            }\n        }\n    }\n\n    return iso.substring(0, t) + ' ' + rtime + ' +0000 UTC';\n}\n\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for (var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\";\nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";\n\n// blocksign hint\nexports.MBS_CREATE_DOCUMENTS_SINGLE_FILE = \"mitum-blocksign-create-documents-single-file\"\nexports.MBS_CREATE_DOCUMENTS_OP_FACT = \"mitum-blocksign-create-documents-operation-fact\"\nexports.MBS_CREATE_DOCUMENTS_OP = \"mitum-blocksign-create-documents-operation\"\nexports.MBS_TRANSFER_ITEM_SINGLE_DOCUMENT = \"mitum-blocksign-transfer-item-single-document\"\nexports.MBS_TRANSFER_DOCUMENTS_OP_FACT = \"mitum-blocksign-transfer-documents-operation-fact\"\nexports.MBS_TRANSFER_DOCUMENTS_OP = \"mitum-blocksign-transfer-documents-operation\"\nexports.MBS_SIGN_ITEM_SINGLE_DOCUMENT = \"mitum-blocksign-sign-item-single-document\"\nexports.MBS_SIGN_DOCUMENTS_OP_FACT = \"mitum-blocksign-sign-documents-operation-fact\"\nexports.MBS_SIGN_DOCUMENTS_OP = \"mitum-blocksign-sign-documents-operation\"","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for (var i = 0; i < ks.length; i++) {\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for (var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n\n        this.BLOCKSIGN_CREATE_DOCUMENTS = \"CREATE-DOCUMENTS\";\n        this.BLOCKSIGN_SIGN_DOCUMENTS = \"SIGN_DOCUMENTS\";\n        this.BLOCKSIGN_TRANSFER_DOCUMENTS = \"TRANSFER_DOCUMENTS\";\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight) {\n        if (key.indexOf(':') === -1) {\n            throw '[ERROR] Invalid key';\n        }\n        if (typeof (weight) !== 'number') {\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid) {\n        if (typeof (big) !== 'number') {\n            throw '[ERROR] Invalid amount';\n        }\n        if (cid.length < 1) {\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold) {\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts) {\n        return _toAmounts(amts);\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    createCreateDocumentsItem(fileHash, did, signcode, title, size, cid, signers, signcodes) {\n        return new Xoper.CreateDocumentsItem(\n            Xhint.MBS_CREATE_DOCUMENTS_SINGLE_FILE,\n            fileHash,\n            did,\n            signcode,\n            title,\n            size,\n            cid,\n            signers,\n            signcodes\n        )\n    }\n\n    createSignDocumentsItem(owner, did, cid) {\n        return new Xoper.SignDocumentsItem(\n            Xhint.MBS_SIGN_ITEM_SINGLE_DOCUMENT,\n            owner,\n            did,\n            cid\n        )\n    }\n\n    createTransferDocumentsItem(owner, receiver, did, cid) {\n        return new Xoper.TransferDocumentsItem(\n            Xhint.MBS_TRANSFER_ITEM_SINGLE_DOCUMENT,\n            owner,\n            receiver,\n            did,\n            cid\n        )\n    }\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items) {\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys) {\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items) {\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    createBlockSignFact(type, sender, items) {\n        let _type;\n        switch(type) {\n            case this.BLOCKSIGN_CREATE_DOCUMENTS:\n                _type = Xhint.MBS_CREATE_DOCUMENTS_OP_FACT;\n                break;\n            case this.BLOCKSIGN_SIGN_DOCUMENTS:\n                _type = Xhint.MBS_SIGN_DOCUMENTS_OP_FACT;\n                break;\n            case this.BLOCKSIGN_TRANSFER_DOCUMENTS:\n                _type = Xhint.MBS_TRANSFER_DOCUMENTS_OP_FACT;\n                break;\n            default:\n                throw '[ERROR] Invalid block-sign fact type';\n        }\n        \n        return new Xoper.BlockSignFact(\n            _type,\n            sender,\n            items\n        )\n    }\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo) {\n        let _type;\n\n        if (fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if (fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if (fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else if (fact instanceof Xoper.BlockSignFact) {\n\n            switch (fact.type) {\n                case Xhint.MBS_CREATE_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_CREATE_DOCUMENTS_OP;\n                    break;\n                case Xhint.MBS_SIGN_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_SIGN_DOCUMENTS_OP;\n                    break;\n                case Xhint.MBS_TRANSFER_DOCUMENTS_OP_FACT:\n                    _type = Xhint.MBS_TRANSFER_DOCUMENTS_OP;\n                    break;\n                default:\n                    throw '[ERROR] Invalid fact object';\n            }\n\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers) {\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for (var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n\n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for (var i = 0; i < opers.length; i++) {\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if (error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for (var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof (f_oper) === typeof (\"\") ? JSON.parse(fs.readFileSync(f_oper))\n            : (typeof (f_oper) === typeof ({}) ? f_oper : undefined);\n        if (!before) {\n            return undefined;\n        }\n\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }\n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch (Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch (e) {\n        console.log(\"Fail to create new fact sign\");\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n\n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n\n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\nclass BlockSignItem {\n\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n    }\n\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\nclass CreateDocumentsItem extends BlockSignItem {\n    constructor(type, fileHash, did, signcode, title, size, cid, signers, signcodes) {\n        super(type);\n        this.fileHash = fileHash;\n        this.did = new Xutil.BigInteger(did);\n        this.signcode = signcode;\n        this.title = title;\n        this.size = new Xutil.BigInteger(size);\n        this.cid = cid;\n        this.signers = signers;\n        this.signcodes = signcodes;\n    }\n\n    buffer() {\n        const bfh = Buffer.from(this.fileHash);\n        const bdid = this.did.tight();\n        const bscode = Buffer.from(this.signcode);\n        const btitle = Buffer.from(this.title);\n        const bsize = this.size.tight();\n        const bcid = Buffer.from(this.cid);\n\n        let bsigners = Buffer.alloc(0);\n        for(let i = 0; i < this.signers.length; i++) {\n            bsigners = Buffer.concat([bsigners, Buffer.from(this.signers[i])]);\n        }\n\n        let bscodes = Buffer.alloc(0);\n        for(let i = 0; i < this.signcodes.length; i++) {\n            bscodes = Buffer.concat([bscodes, Buffer.from(this.signcodes[i])]);\n        }\n\n        return Buffer.concat([bfh, bdid, bscode, btitle, bsize, bcid, bsigners, bscodes]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.filehash = this.fileHash;\n        item.documentid = \"\" + this.did.value;\n        item.signcode = this.signcode;\n        item.title = this.title;\n        item.size = \"\" + this.size.value;\n        item.signers = this.signers;\n        item.signcodes = this.signcodes;\n        item.currency = this.cid;\n        return item;\n    }\n}\n\nclass SignDocumentsItem extends BlockSignItem {\n    constructor(type, owner, did, cid) {\n        super(type);\n        this.owner = new Address(owner);\n        this.did = new Xutil.BigInteger(did);\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bdid = this.did.tight();\n        const bowner = Buffer.from(this.owner.hinted());\n        const bcid = Buffer.from(this.cid);\n        return Buffer.concat([bdid, bowner, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.documentid = \"\" + this.did.value;\n        item.owner = this.owner.hinted();\n        item.currency = this.cid;\n        return item;\n    }\n}\n\nclass TransferDocumentsItem extends BlockSignItem {\n    constructor(type, owner, receiver, did, cid) {\n        super(type);\n        this.owner = new Address(owner);\n        this.receiver = new Address(receiver);\n        this.did = new Xutil.BigInteger(did);\n        this.cid = cid;\n    }\n\n    buffer() {\n        const bdid = this.did.tight();\n        const bowner = Buffer.from(this.owner.hinted());\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bcid = Buffer.from(this.cid);\n        return Buffer.concat([bdid, bowner, breceiver, bcid]);\n    }\n\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.documentid = \"\" + this.did.value;\n        item.owner = this.owner.hinted();\n        item.receiver = this.receiver.hinted();\n        item.currency = this.cid;\n        return item;\n    }\n}\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {\n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\nclass BlockSignFact extends OperationFact {\n    constructor(type, sender, items) {\n        super(type);\n        this.sender = new Address(sender);\n        this.items = items;\n        this.type = type;\n\n        this._generateHash();\n    }\n\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n}\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if (this.fact_signs.length < 1) {\n            throw '[ERROR] Empty fact sign!'\n        }\n        \n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n\n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */\n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for (var i = 0; i < this.fact_signs.length; i++) {\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateDocumentsItem,\n    SignDocumentsItem,\n    TransferDocumentsItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    BlockSignFact,\n    Operation,\n};\n","import { key } from '../text/hint.json';\n\nclass Account {\n    constructor(addr=null, priv=null, pub=null, data=null) {\n        if(!addr || !priv || !pub || !data) {\n            throw new Error('Wrong parameter with Account constructor');\n        }\n\n\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n\n        this.balances.sort((x, y) => x.currency.localeCompare(y.currency));\n        this.publicKeys.sort((x, y) => x.key.localeCompare(y.key));\n\n        this.publicKey = pub;\n\n        const idx = priv.indexOf(':');\n        const hint = priv.substring(idx + 1);\n        switch (hint) {\n            case `${key.btc.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.btc.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.ether.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.ether.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.stellar.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n        }\n    }\n}\n\nexport default Account;","import { operation } from './hint.json';\n\nexport const OPER_CREATE_ACCOUNT = 'OPER-CREATE-ACCOUNT';\nexport const OPER_UPDATE_KEY = 'OPER-UPDATE-KEY';\nexport const OPER_TRANSFER = 'OPER-TRANSFER';\nexport const OPER_DEFAULT = 'OPER-DEFAULT';\n\nexport const PAGE_HOME = 'PAGE-HOMEs'\nexport const PAGE_LOGIN = 'PAGE-LOGIN';\nexport const PAGE_WALLET = 'PAGE-WALLET';\nexport const PAGE_OPER = 'PAGE-OPER';\nexport const PAGE_SIGN = 'PAGE-SIGN';\nexport const PAGE_LOD = 'PAGE-LOD';\nexport const PAGE_RES = 'PAGE-RES';\nexport const PAGE_GEN = 'PAGE-GEN';\n\nexport const SHOW_PRIVATE = 'show-private';\nexport const SHOW_RESTORE = 'show-restore';\n\nexport const TYPE_CREATE_ACCOUNT = operation.create_account + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_UPDATE_KEY = operation.update_key + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_TRANSFER = operation.transfer + '-' + process.env.REACT_APP_VERSION;","import { TYPE_CREATE_ACCOUNT, TYPE_TRANSFER } from \"../text/mode\";\nimport { address } from '../text/hint.json';\n\nconst hintedAccount = (account) => {\n    return  account + ':' + address + '-' + process.env.REACT_APP_VERSION\n};\n\nclass History {\n    constructor(history, me) {\n        this.me = me;\n        this.inState = history.in_state;\n        this.confirmedAt = history.confirmed_at;\n        \n        this.operation = history.operation;\n        this.type = history.operation._hint;\n        this.factHash = history.operation.fact.hash;\n\n        this.setItems();\n    }\n\n    setItems(){\n        if(!(this.type === TYPE_CREATE_ACCOUNT || this.type === TYPE_TRANSFER)) {\n            this.items = undefined;\n            return;\n        }\n\n        const items = this.operation.fact.items.map(\n            x => ({\n                receiver: this.type === TYPE_CREATE_ACCOUNT ? hintedAccount(x.keys.hash) : x.receiver,\n                amounts: x.amounts.map(\n                    y => ({\n                        currency: y.currency,\n                        amount: y.amount\n                    })\n                )\n            })\n        );\n\n        this.sender = this.operation.fact.sender;\n        if(this.sender === this.me){\n            this.items = items;\n        }\n        else{\n            this.items = [];\n            for( let i = 0; i < items.length; i++ ){\n                if(items[i].receiver === this.me) {\n                    this.items.push(items[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default History;","import Account from '../../lib/Account';\nimport History from '../../lib/History';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_HISTORY = 'SET_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n\nexport const SET_OPERATION = 'SET_OPERATION';\nexport const SET_RESPONSE = 'SET_RESPONSE';\n\nexport const ENQUEUE_OPERATION = 'ENQUEUE_OPERATION';\nexport const DEQUEUE_OPERATION = 'DEQUEUE_OPERATION';\nexport const CLEAR_QUEUE = 'CLEAR_QUEUE';\n\nexport const SET_NETWORK = 'SET_NETWORK';\nexport const CLEAR_NETWORK = 'CLEAR_NETWORK';\nexport const SET_NETWORK_ID = 'SET_NETWORK_ID';\nexport const CLEAR_NETWORK_ID = 'CLEAR_NETWORK_ID';\n\nexport function login(address, privateKey, publicKey, data) {\n    const account = new Account(address, privateKey, publicKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKey: account.publicKey,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined,\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function setHistory(data, me) {\n    if(!data) {\n        return {\n            type: SET_HISTORY,\n            history: [],\n        }\n    }\n\n    const histories = data._embedded.map(x => new History(x._embedded, me));\n    const splitHistories = [];\n\n    for(let i = 0; i < histories.length; i++){\n        const _i = histories[i];\n        if(!_i.items){\n            continue;\n        }\n        for(let j = 0; j < _i.items.length; j++){\n            const _j = _i.items[j];\n            for(let z = 0; z < _j.amounts.length; z++) {\n                const _z = _j.amounts[z];\n                splitHistories.push({\n                    hash: _i.factHash,\n                    confirmation: _i.inState ? 'SUCCESS' : 'FAIL',\n                    direction: me === _i.sender ? 'SEND' : 'RECEIVE',\n                    confirmedAt: _i.confirmedAt,\n                    target: me === _i.sender ? _j.receiver : _i.sender,\n                    currency: _z.currency,\n                    amount: _z.amount\n                })\n            }\n        }\n    }\n\n    return {\n        type: SET_HISTORY,\n        history: splitHistories,\n    }\n}\n\nexport function clearHistory() {\n    return {\n        type: CLEAR_HISTORY\n    }\n}\n\nexport function setOperation(operation, json) {\n    return {\n        type: SET_OPERATION,\n        operation,\n        json,\n    }\n}\n\nexport function setResponse(isBroadcast, isStateIn, res, status, data) {\n    return {\n        type: SET_RESPONSE,\n        isBroadcast,\n        isStateIn,\n        res,\n        status,\n        data,\n    }\n}\n\nexport function enqueueOperation(item) {\n    return {\n        type: ENQUEUE_OPERATION,\n        item,\n    }\n}\n\nexport function dequeueOperation() {\n    return {\n        type: DEQUEUE_OPERATION\n    }\n}\n\nexport function clearQueue() {\n    return {\n        type: CLEAR_QUEUE\n    }\n}\n\nexport function setNetworkId(id) {\n    return {\n        type: SET_NETWORK_ID,\n        id,\n    }\n}\n\nexport function setNetwork(network) {\n    return {\n        type: SET_NETWORK,\n        network,\n    }\n}\n\nexport function clearNetworkId() {\n    return {\n        type: CLEAR_NETWORK_ID,\n    }\n}\n\nexport function clearNetwork() {\n    return {\n        type: CLEAR_NETWORK\n    }\n}\n\n","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined,\n    history: undefined,\n    isLoadHistory: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        case actions.SET_HISTORY:\n            return {\n                ...state,\n                history: action.history,\n                isLoadHistory: true\n            }\n        case actions.CLEAR_HISTORY:\n            return {\n                ...state,\n                history: undefined,\n                isLoadHistory: false\n            }\n        default:\n            return state;\n    }\n}","function download(json) {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('JSON 파일 다운로드 url을 얻을 수 없습니다. :(');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nexport default download;","import * as actions from '../actions';\nimport * as mode from '../../text/mode'; \nimport download from '../../lib/Url';\n\nconst initialState = {\n    operation: mode.OPER_DEFAULT,\n    json: null,\n    data: [],\n    download: undefined,\n    filename: \"\",\n    isBroadcast: false,\n    isStateIn: false,\n    res: undefined,\n    status: 400\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_OPERATION:\n            if(action.operation === mode.OPER_DEFAULT) {\n                return initialState;\n            }            \n\n            return {\n                ...state,\n                operation: action.operation,\n                json: action.json,\n                download: download(action.json),\n                filename: action.json.hash\n            }\n        case actions.SET_RESPONSE:\n            return {\n                ...state,\n                isBroadcast: action.isBroadcast,\n                isStateIn: action.isStateIn,\n                res: action.res,\n                status: action.status,\n                data: action.data,\n            }\n        default:\n            return state;\n    }\n}","import * as actions from '../actions';\nimport Queue from '../../lib/Queue';\n\nconst initialState = {\n    queue: new Queue()\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.ENQUEUE_OPERATION:\n            state.queue.enque(action.item);\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.DEQUEUE_OPERATION:\n            state.queue.deque();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.CLEAR_QUEUE:\n            state.queue.clear();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        default:\n            return state;\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    enque(item) {\n        this.queue.push(item);\n    }\n\n    deque() {\n        this.queue.shift();\n    }\n\n    isEmpty() {\n        if(this.queue) {\n            return false;\n        }\n        return true;\n    }\n\n    clear() {\n        this.queue = [];\n    }\n\n    get length() {\n        return this.queue.length;\n    }\n\n    get target() {\n        if(this.isEmpty()) {\n            return null\n        }\n        return this.queue[0];\n    }\n}\n\nexport default Queue;","import * as actions from '../actions';\n\nconst initialState = {\n    network: process.env.REACT_APP_API_URL,\n    networkAccount: process.env.REACT_APP_API_ACCOUNT,\n    networkBroadcast: process.env.REACT_APP_API_BROADCAST,\n    networkSearchFact: process.env.REACT_APP_API_SEARCH_FACT,\n    networkId: process.env.REACT_APP_NETWORK_ID,\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_NETWORK:\n            return {\n                ...state,\n                network: action.network,\n                networkAccount: action.network + '/account/',\n                networkBroadcast: action.network + '/builder/send',\n                networkSearchFact: action.network + '/operation/'\n            };\n        case actions.CLEAR_NETWORK:\n            return {\n                ...state,\n                network: process.env.REACT_APP_API_URL,\n                networkAccount: process.env.REACT_APP_API_ACCOUNT,\n                networkBroadcast: process.env.REACT_APP_API_BROADCAST,\n                networkSearchFact: process.env.REACT_APP_API_SEARCH_FACT,\n            }\n        case actions.SET_NETWORK_ID:\n            return {\n                ...state,\n                networkId: action.id\n            }\n        case actions.CLEAR_NETWORK_ID:\n            return {\n                ...state,\n                networkId: process.env.REACT_APP_NETWORK_ID\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\nimport { reducer as operationReducer } from './OperationReducer';\nimport { reducer as queueReducer } from './QueueReducer';\nimport { reducer as networkReducer } from './NetworkReducer';\n\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    operation: operationReducer,\n    queue: queueReducer,\n    network: networkReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"home-container\">\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"block\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\nexport default SmallButton;","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\n\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text/plain\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    autoCorrect=\"off\"\n                    autoCapitalize=\"off\"\n                    autoSave=\"off\"\n                    autoFocus=\"off\"\n                    style={{\n                        textTransform: \"none\"\n                    }}\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <button className=\"confirm-button\"\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                onClick={this.props.onClick}\n                disabled={this.props.disabled ? true : false}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"private key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => {\n                        this.props.onLogin(this.state.account.trim(), this.state.privateKey.trim());\n                    }}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import { key as keyHint } from '../text/hint.json';\nimport { address as addressHint } from '../text/hint.json';\n\nexport const isOperation = (json) => {\n\n    if (!json) { return false; }\n\n    if(!Object.prototype.hasOwnProperty.call(json, '_hint') || !json._hint) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'hash') || !json.hash) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'memo')) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact') || !json.fact) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact_signs')) {\n        return false;\n    }\n\n    // const signatures = json.fact_signs.map(x => x.signatures);\n    // if (signatures.length < 1) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isStateValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'location') || !state.location) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state.location, 'state') || !state.location.state) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isResponseValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'res') || !state.res) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'status') || !state.status) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'operation') || !state.operation) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'data')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAccountValid = (account) => {\n\n    if (!account) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'address') || !account.address) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'accountType') || !account.accountType) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'publicKeys') || !account.publicKeys) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'balances') || !account.balances) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'privateKey') || !account.privateKey) {\n        return false;\n    }\n\n    // if (!Object.prototype.hasOwnProperty.call(account, 'restoreKey') || !account.restoreKey) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isPrivateKeyValid = (pk) => {\n\n    if (typeof (pk) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = pk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n    const key = pk.substring(0, idx);\n    const hint = pk.substring(idx + 1);\n\n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isPublicKeyValid = (pubk) => {\n\n    if (typeof (pubk) !== typeof ('string')) {\n        return false;\n    }\n\n    const idx = pubk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const key = pubk.substring(0, idx);\n    const hint = pubk.substring(idx + 1);\n    \n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.pub}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isAddressValid = (addr) => {\n\n    if (typeof (addr) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = addr.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const hint = addr.substring(idx + 1);\n    const address = addr.substring(1, idx);\n    if (hint !== `${addressHint}-${process.env.REACT_APP_VERSION}`) {\n        return false;\n    }\n\n    if(!/[a-zA-Z0-9]+/.test(address)) {\n        return false;\n    }\n\n    return true;\n}\n\nconst isNum = (num) => {\n    if (!num) {\n        return false;\n    }\n\n    if (/[^0-9]/.test(num)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]*/.test(num)) {\n        return false;\n    }\n\n    if (num.indexOf('.') > -1) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isThresholdValid = (thres) => {\n    if (!isNum(thres)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]{0,2}/.test(thres)) {\n        return false;\n    }\n\n    const thresNum = parseInt(thres);\n    if (thresNum < 1 || thresNum > 100) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isWeightValid = (weight) => {\n    return isNum(weight);\n}\n\nexport const isWeightsValidToThres = (weights, thres) => {\n    \n    if (!isThresholdValid(thres)) {\n        return false;\n    }\n\n    let total = 0;\n    for (let i = 0; i < weights.length; i++) {\n        if (!isWeightValid(weights[i])) {\n            return false;\n        }\n        total += parseInt(weights[i]);\n    }\n\n    if (total < parseInt(thres)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isCurrencyValid = (currency, currencies) => {\n\n    if(!currency || !currencies || currencies.length < 1) {\n        return false;\n    }\n\n    if(typeof (currency) !== typeof ('string')) {\n        return false;\n    }\n\n    if(!/[A-Z]{3,3}/.test(currency)) {\n        return false;\n    }\n\n    return isDuplicate(currency, currencies);\n}\n\nexport const isAmountValid = (amount) => {\n    return isNum(amount);\n}\n\nexport const isDuplicate = (target, list) => {\n\n    if(!target || !list) {\n        return false;\n    }\n\n    for(let i = 0; i < list.length; i++) {\n        if(target.indexOf(list[i]) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}","import React from 'react';\nimport './AlertModal.scss';\n\nclass AlertModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, title, msg } = this.props;\n        return (\n            <div className={isOpen ? 'alert-openModal alert-modal' : 'alert-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {title}\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='alert-msg'>{msg}</p>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AlertModal;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { clearHistory, login, setHistory } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\nimport { SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\nimport { isAddressValid, isPrivateKeyValid } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.isLogin) {\n            this.onLogin(this.props.account.address, this.props.account.privateKey);\n        }\n\n        this.state = {\n            mode: SHOW_PRIVATE,\n            isPriv: true,\n            isActive: false,\n\n            isAlertShow: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            isShowLoad: false,\n            isRedirect: false,\n        }\n    }\n\n    async getAccountInformation(account) {\n        return await axios.get(this.props.networkAccount + account);\n    }\n\n    async getAccountHistory(account) {\n        return await axios.get(`${this.props.networkAccount}${account}/operations?reverse=1`);\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertShow: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertShow: false\n        });\n    }\n\n    onLogin(_addr, _priv) {\n        const addr = _addr.trim();\n        const priv = _priv.trim();\n\n        if (!isAddressValid(addr) || !isPrivateKeyValid(priv)) {\n            this.openAlert('지갑 열기 실패 :(', '주소 혹은 키 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        let pubKey;\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            this.openAlert('지갑 열기 실패 :(', '유효하지 않은 개인키입니다.');\n            return;\n        }\n\n        this.getAccountHistory(addr)\n            .then(\n                res => {\n                    this.props.setHistory(res.data, addr);\n                }\n            )\n            .catch(\n                e => {\n                    this.props.setHistory(null, addr);\n                }\n            )\n\n        this.getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, pubKey, res.data);\n                            return;\n                        }\n                    }\n                    this.openAlert('지갑 열기 실패 :(', `계정 [${addr}]의 멤버에 해당 키가 존재하지 않습니다.`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    this.openAlert('지갑 열기 실패 :(', '유효하지 않은 주소 혹은 네트워크 문제로 계정 조회에 실패하였습니다.');\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case SHOW_PRIVATE:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n            case SHOW_RESTORE:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    async onStartLogin(addr, priv) {\n        this.setState({\n            isShowLoad: true\n        });\n\n        this.onLogin(addr, priv)\n\n        if (!(this.props.isLogin && this.props.isLoadHistory)) {\n            this.setState({\n                isShowLoad: false\n            });\n        }\n    }\n\n    render() {\n        if (this.props.isLogin && this.props.isLoadHistory) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />\n        }\n\n        return (\n            <div className=\"login-container\">\n                <div id='login-main'\n                    style={{\n                        display: this.state.isShowLoad ? 'none' : 'flex'\n                    }}>\n                    <h1>OPEN WALLET</h1>\n                    <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_PRIVATE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Private Key</div>\n                        </label>\n\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_RESTORE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Restore Key</div>\n                        </label>\n                    </div>\n                    <AlertModal isOpen={this.state.isAlertShow} onClose={() => this.closeAlert()}\n                        title={this.state.alertTitle} msg={this.state.alertMsg} />\n                    {this.renderForm()}\n                </div>\n                <div id='login-load'\n                    style={{\n                        display: this.state.isShowLoad ? 'flex' : 'none'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    isLoadHistory: state.login.isLoadHistory,\n    networkAccount: state.network.networkAccount,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, publicKey, data) => dispatch(login(address, privateKey, publicKey, data)),\n    setHistory: (data, me) => dispatch(setHistory(data, me)),\n    clearHistory: () => dispatch(clearHistory())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PublicKeyModal.scss\";\n\nconst key = (k) => {\n    return (\n        <li key={k}\n            onClick={() => {\n                copy(k);\n                alert('copied');\n            }}>{k}</li>\n    );\n}\n\nclass PublicKeyModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, account } = this.props;\n        return (\n            <div className={isOpen ? 'pub-openModal pub-modal' : 'pub-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Public Key List\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {account.publicKeys.map(x => key(x.key))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    account: state.login.account\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PublicKeyModal));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PendingModal.scss\";\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER } from '../../text/mode';\n\nconst job = (x) => {\n    return (\n        <li key={x.hash}\n            onClick={() => { copy(x.hash); alert('copied'); }}>\n            <p>{x.broadcastedAt}</p>\n            <p>{x.operation === OPER_CREATE_ACCOUNT\n                ? 'CREATE-ACCOUNT'\n                : (\n                    x.operation === OPER_TRANSFER\n                        ? 'TRANSFER'\n                        : 'UPDATE-KEY'\n                )\n            }</p>\n            <p>{x.hash}</p>\n        </li>\n    );\n}\n\nclass PendingModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, queue } = this.props;\n        return (\n            <div className={isOpen ? 'pend-openModal pend-modal' : 'pend-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Operation Facts in Pending...\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {queue.queue.map(x => job(x))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    queue: state.queue.queue\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PendingModal));","function Sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Sleep;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { dequeueOperation, login } from '../store/actions';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport PublicKeyModal from '../components/modals/PublicKeyModal';\nimport PendingModal from '../components/modals/PendingModal';\nimport axios from 'axios';\n\nimport { isAccountValid } from '../lib/Validation';\n\nimport Sleep from '../lib/Sleep';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY, PAGE_LOGIN, PAGE_OPER, SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <p className=\"currency\">{bal.currency}</p>\n            <p className=\"amount\">{bal.amount}</p>\n        </li>\n    );\n}\n\nconst history = (hist) => {\n    return (\n        <li key={hist.hash + hist.target} onClick={() => {\n            copy(hist.hash);\n            alert('fact hash copied!');\n        }}>\n            <p id={hist.confirmation}>{hist.confirmation}</p>\n            <p id={hist.direction}>{hist.direction}</p>\n            <p id='confirmed-at'>{hist.confirmedAt}</p>\n            <p id='target'>{hist.target}</p>\n            <p id='currency'>{hist.currency}</p>\n            <p id='amount'>{hist.amount}</p>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '0',\n    padding: '0'\n}\n\nconst title = (content) => {\n    return (\n        <div id='container' style={titleStyle}>\n            <div id='line'></div>\n            <p id='body'>{content}</p>\n            <div id='line'></div>\n        </div>\n    )\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isPubModalOpen: false,\n            isPendModalOpen: false,\n            isQueueUpdate: 1,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PAGE_LOGIN,\n            operation: undefined\n        }\n    }\n\n    async getFactInState(hash) {\n        return await axios.get(this.props.networkSearchFact + hash);\n    }\n\n    async checkInState() {\n        while (!this.props.queue.isEmpty()) {\n            const target = this.props.queue.target;\n\n            if (!target) {\n                break;\n            }\n\n            var isResult = false;\n            this.getFactInState(target.hash)\n                .then(\n                    res => {\n                        if (res.request.status === 200) {\n                            this.props.deleteJob();\n                            this.setState({ isQueueUpdate: this.state.isQueueUpdate + 1 });\n                        }\n                    }\n                )\n                .catch(\n                    e => {\n                        console.log(e);\n                    }\n                )\n                .finally(() => {\n                    isResult = true;\n                });\n\n            while (!isResult) {\n                await Sleep(500);\n            }\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === OPER_CREATE_ACCOUNT\n            || oper === OPER_UPDATE_KEY\n            || oper === OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: PAGE_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n        this.checkInState();\n\n        setTimeout(() => {\n            this.refresh();\n        }, 5000);\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    closePubModal() {\n        this.setState({ isPubModalOpen: false });\n    }\n\n    openPubModal() {\n        this.setState({ isPubModalOpen: true });\n    }\n\n    closePendModal() {\n        this.setState({ isPendModalOpen: false });\n    }\n\n    openPendModal() {\n        this.setState({ isPendModalOpen: true });\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: PAGE_LOGIN\n        });\n    }\n\n    render() {\n        \n        if (!this.props.account || !isAccountValid(this.props.account)) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (this.state.isRedirect) {\n            if (this.state.redirect === PAGE_OPER) {\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            }\n            else if (this.state.redirect === PAGE_LOGIN) {\n                return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className=\"wallet-container\" >\n                <div className=\"wallet-ref\" ref={this.walletRef} ></div>\n                <div id='wallet-refresh'><p onClick={() => this.refresh()}>↻</p></div>\n                <div className=\"wallet-info\">\n                    {title(\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\"))}\n                    <p id='address' onClick={() => this.openPubModal()}>{this.props.account.address}</p>\n                    <section className=\"wallet-amount\">\n                        {title('BALANCE')}\n                        <ul>\n                            {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-history\">\n                    {title('HISTORY')}\n                    <ul>\n                        {this.props.history.length > 0 ? this.props.history.map(x => history(x)) : false}\n                    </ul>\n                    <p id='pend' onClick={() => this.openPendModal()}>\n                        {this.state.isQueueUpdate ? `${this.props.queue.length} 개의 작업을 처리 중입니다.` : false}\n                    </p>\n                </div>\n                <PublicKeyModal onClose={() => this.closePubModal()} isOpen={this.state.isPubModalOpen} />\n                <PendingModal onClose={() => this.closePendModal()} isOpen={this.state.isPendModalOpen} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    queue: state.queue.queue,\n    networkSearchFact: state.network.networkSearchFact\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    deleteJob: () => dispatch(dequeueOperation())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privKey: \"\",\n            pubKey: \"\",\n        }\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        this.setState({\n            privKey: keypair.getPrivateKey(),\n            pubKey: keypair.getPublicKey()\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport { key } from './SubInfo';\nimport './Keys.scss';\n\nfunction Keys({ keys, title }) {\n    return (\n        <section className='key-container'>\n            <p id='head'>{title}</p>\n            <div className='label'>\n                <p id='key'>KEY</p>\n                <p id='weight'>WEIGHT</p>\n            </div>\n            <ul>\n                {keys ? keys.map(x => key(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Keys;","export const balance = x => {\n    return (\n        <li key={x.currency}>\n            <p id='currency'>{x.currency}</p>\n            <p id='amount'>{x.amount}</p>\n        </li>\n    );\n}\n\nexport const key = x => {\n    return (\n        <li key={x.key}>\n            <p id='key'>{x.key}</p>\n            <p id='weight'>{x.weight}</p>\n        </li>\n    );\n}","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ThresholdAdder.scss';\n\nfunction ThresholdAdder({ thres, onThresChange }) {\n\n    return (\n        <section className='threshold-adder-container'>\n            <div className=\"threshold-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ThresholdAdder;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './KeyAdder.scss';\n\nfunction KeyAdder(props) {\n\n    const { onKeyChange, onWeightChange, onAdd, isAddDisabled, pub, weight, useThres } = props;\n\n    return (\n        <section className='key-adder-container'>\n            <div className=\"key-adder\">\n                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                    value={pub}\n                    onChange={onKeyChange} />\n                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                    value={weight}\n                    onChange={onWeightChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n            {useThres\n                ? (\n                    <div className=\"thres-adder\">\n                        <p>THRESHOLD:</p>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={props.thres}\n                            onChange={props.onThresChange} />\n                    </div>\n                )\n                : false\n            }\n        </section>\n    );\n}\n\nexport default KeyAdder;","import React from \"react\";\nimport './AddressGen.scss';\n\nimport Keys from \"../components/infos/Keys\";\nimport ThresholdAdder from \"../components/adders/ThresholdAdder\";\nimport KeyAdder from \"../components/adders/KeyAdder\";\nimport AlertModal from \"../components/modals/AlertModal\";\n\nimport { isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from \"../lib/Validation\";\n\nimport { Generator } from 'mitumc';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nimport copy from 'copy-to-clipboard';\nimport ConfirmButton from \"../components/buttons/ConfirmButton\";\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nclass AddressGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            address: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    getAddress() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('계정 주소를 계산할 수 없습니다. :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        const generator = new Generator(this.props.networkId);\n        const _keys = this.state.keys.map(k => generator.formatKey(k.key, parseInt(k.weight)));\n        const keys = generator.createKeys(_keys, parseInt(this.state.threshold));\n\n        this.setState({\n            address: keys.address\n        })\n    }\n\n    clear() {\n        this.setState({\n            keys: [],\n            publicKey: \"\",\n            weight: \"\",\n            threshold: \"\",\n            address: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"address-gen-container\">\n                <h1>GET ADDRESS WITH KEYS</h1>\n                <div className=\"address-gen-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"address-gen-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} />\n                        <section className='address-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ThresholdAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                thres={this.state.threshold} />\n                        </section>\n                    </div>\n                </div>\n                <div className=\"address-gen-buttons\">\n                    <ConfirmButton\n                        disabled={\n                            this.state.keys.length !== 0 || this.state.address\n                                || this.state.threshold || this.state.publicKey\n                                || this.state.weight\n                                ? false : true}\n                        onClick={() => this.clear()}>CLEAR</ConfirmButton>\n                    <ConfirmButton\n                        disabled={this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                        onClick={() => this.getAddress()}>GET :D</ConfirmButton>\n                </div>\n                <div className=\"address-gen-account\">\n                    <p id=\"header\">ADDRESS</p>\n                    <p id=\"body\" onClick={() => onCopy(this.state.address)}>{this.state.address ? this.state.address : \"-\"}</p>\n                </div>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(AddressGen));","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","export default __webpack_public_path__ + \"static/media/mitum_wallet_manual.f34e6447.pdf\";","import React, { createRef } from 'react';\nimport Sleep from '../lib/Sleep';\nimport './Help.scss';\n\nimport pdfFile from '../mitum_wallet_manual.pdf';\nimport { pdfjs, Document, Page } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Help extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.pdfRef = createRef();\n\n        this.state = {\n            isShowExp: false,\n\n            numPages: null,\n            pageNumber: 1,\n        }\n    }\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({ numPages });\n    }\n\n    goToPrevPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n    goToNextPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n\n    async componentDidMount() {\n\n        await Sleep(1000);\n        this.setState({\n            isShowExp: true,\n        });\n        this.scrollToPdf();\n    }\n\n    scrollToPdf = () => {\n        if (this.pdfRef.current && this.state.isShowExp) {\n            this.pdfRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToPdf();\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n        return (\n            <div className=\"help-container\">\n                <div id='help-start'\n                    style={{\n                        display: this.state.isShowExp ? 'none' : 'flex'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n                <div ref={this.pdfRef} />\n                <div id='help-document'\n                    style={{\n                        display: this.state.isShowExp ? 'flex' : 'none'\n                    }}>\n                    <a id='link' target=\"_blank\"\n                        download='manual.pdf'\n                        href={pdfFile}\n                        rel=\"noreferrer\">\n                        DOWNLOAD MANUAL\n                    </a>\n                    <Document\n                        file={pdfFile}\n                        onLoadSuccess={({ numPages }) => this.onDocumentLoadSuccess({ numPages })}>\n                        <Page pageNumber={pageNumber} />\n                    </Document>\n                    <p id='switch'>\n                        <span id='left'\n                            onClick={() =>\n                                this.state.pageNumber > 1\n                                    ? this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber - 1\n                                    })\n                                    : null}>\n                            &lt;\n                        </span>\n                        <span>{pageNumber} / {numPages}</span>\n                        <span id='right'\n                            onClick={() =>\n                                this.state.pageNumber < numPages\n                                    ?\n                                    this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber + 1\n                                    })\n                                    : null}>\n                            &gt;\n                        </span>\n                    </p>\n                    <p id='exp'>가이드의 내용이 잘 보이지 않는 경우 상단의 DOWNLOAD MANUAL을 통해 파일을 직접 다운로드 하여 주시기 바랍니다.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../../store/actions';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport \"./OperationConfirm.scss\";\nimport { isOperation } from '../../lib/Validation';\n\nimport { OPER_CREATE_ACCOUNT, OPER_UPDATE_KEY, OPER_TRANSFER } from '../../text/mode';\nimport hint from '../../text/hint.json';\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false,\n        }\n    }\n\n    async broadcast(operation) {\n        if (!isOperation(operation)) {\n            return undefined;\n        }\n    \n        return await axios.post(this.props.networkBroadcast, operation);\n    }\n\n    onSend(json) {\n        this.broadcast(json).then(\n            res => {\n                if (res.request.status === 200) {\n                    let data = undefined;\n                    switch (this.props.operation) {\n                        case OPER_CREATE_ACCOUNT:\n                            data = json.fact.items.map(x => x.keys.hash + ':' + hint.address + '-' + process.env.REACT_APP_VERSION);\n                            break;\n                        case OPER_UPDATE_KEY:\n                            data = json.fact.hash;\n                            break;\n                        case OPER_TRANSFER:\n                        default:\n                            data = undefined;\n                    }\n                    this.props.setResult(true, false, res.data, 200, data);\n                }\n                else {\n                    this.props.setResult(false, false, res.data, res.request.status, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        ).catch(\n            e => {\n\n                try {\n                    this.props.setResult(false, false, e.response.data, e.response.data.status, undefined);\n                }\n                catch (error) {\n                    this.props.setResult(false, false, {\n                        title: '404 Network Error'\n                    }, 404, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        );\n    }\n\n    render() {\n        const { isOpen, onClose, json, filename, download } = this.props;\n\n        if (this.state.isRedirect) {\n            const { operation } = this.props;\n            switch (operation) {\n                case OPER_CREATE_ACCOUNT:\n                case OPER_TRANSFER:\n                    return <Redirect to='/response' />;\n                case OPER_UPDATE_KEY:\n                    return <Redirect to='/loading' />;\n                default:\n                    alert('처리할 수 없는 타입의 작업입니다 :(\\n지갑 페이지로 이동합니다.');\n                    return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className={isOpen ? 'oper-openModal oper-modal' : 'oper-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            이 작업을 전송하겠습니까?\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='oper-exp'>전송 버튼을 누른 후에는 작업을 되돌릴 수 없습니다.</p>\n                            <p id='oper-exp'>작업 내용이 정확한가요?</p>\n                            <span>\n                                <p className=\"oper-modal-button\" id=\"no\" onClick={onClose}>{\"취소!:(\"}</p>\n                                <a className=\"oper-modal-button\" id=\"no\" target=\"_blank\" download={`${filename}.json`}\n                                    href={download} rel=\"noreferrer\">\n                                    {\"JSON 파일 다운로드!:[\"}\n                                </a>\n                                <p className=\"oper-modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"전송!:)\"}</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    download: state.operation.download,\n    filename: state.operation.filename,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    networkBroadcast: state.network.networkBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OperationConfirm));","import React from 'react';\nimport { balance } from './SubInfo';\nimport './Balances.scss';\n\nfunction Balances({ balances, title, labeled }) {\n    return (\n        <section className='balance-container'>\n            <p id='head'>{title}</p>\n            {labeled ? (\n                <div className='label'>\n                    <p id='currency'>CURRENCY ID</p>\n                    <p id='amount'>AMOUNT</p>\n                </div>\n            ) : false}\n            <ul className={labeled ? 'wide' : 'slim'}>\n                {balances ? balances.map(x => balance(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Balances;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './AmountAdder.scss';\n\nfunction AmountAdder(props) {\n\n    const { onCurrencyChange, onAmountChange, currency, amount, isAddDisabled, onAdd } = props;\n\n    return (\n        <section className='amount-adder-container'>\n            <div className=\"amount-adder\">\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                    onChange={onCurrencyChange}\n                    value={currency} />\n                <InputBox\n                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                    value={amount}\n                    onChange={onAmountChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n        </section>\n    );\n}\n\nexport default AmountAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../../store/actions';\n\nimport './CreateAccount.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport Keys from '../infos/Keys';\nimport Balances from '../infos/Balances';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport AmountAdder from '../adders/AmountAdder';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_CREATE_ACCOUNT } from '../../text/mode';\nimport { isAmountValid, isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\nimport AlertModal from '../modals/AlertModal';\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            isModalOpen: false,\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n            const account = this.props.account;\n\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const createAccountsFact = generator.createCreateAccountsFact(\n                account.address,\n                [generator.createCreateAccountsItem(\n                    keys, amounts\n                )]\n            );\n\n            const createAccounts = generator.createOperation(createAccountsFact, \"\");\n            createAccounts.addSign(account.privateKey);\n\n            const created = createAccounts.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && (this.state.keys.length > 0 || this.state.amounts.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"ca-container\">\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <Balances title=\"CURRENT BALANCE LIST\" labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} labeled={true} />\n                        <KeyAdder\n                            onKeyChange={(e) => this.onChangePub(e)}\n                            onWeightChange={(e) => this.onChangeWeight(e)}\n                            onThresChange={(e) => this.onChangeThres(e)}\n                            onAdd={() => this.addKey()}\n                            isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                            pub={this.state.publicKey} weight={this.state.weight} thres={this.state.threshold}\n                            useThres={true} />\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <Balances title=\"AMOUNT LIST\" balances={this.state.amounts} labeled={true} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_CREATE_ACCOUNT, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateAccount));","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ExtraAdder.scss';\n\nfunction ExtraAdder({ thres, currency, onCurrencyChange, onThresChange }) {\n\n    return (\n        <section className='extra-adder-container'>\n            <div className=\"thres-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n            <div className=\"currency-adder\">\n                <p>CURRENCY ID:</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                    value={currency}\n                    onChange={onCurrencyChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ExtraAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './UpdateKey.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\nimport Keys from '../infos/Keys';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport ExtraAdder from '../adders/ExtraAdder';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { setOperation } from '../../store/actions';\n\nimport { OPER_UPDATE_KEY } from '../../text/mode';\nimport AlertModal from '../modals/AlertModal';\nimport { isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false });\n    }\n\n    onClick() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n\n            const account = this.props.account;\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold.trim())\n            );\n\n            const keyUpdaterFact = generator.createKeyUpdaterFact(\n                account.address, this.state.currency.trim(), keys\n            );\n\n            const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n            keyUpdater.addSign(account.privateKey);\n\n            const created = keyUpdater.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"uk-container\">\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <Keys title='CURRENT KEY LIST' keys={account.publicKeys} />\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <Keys title='NEW KEY LIST' keys={this.state.keys} />\n                        <section className='uk-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ExtraAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                                thres={this.state.threshold} currency={this.state.currency} />\n                        </section>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_UPDATE_KEY, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKey));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Transfer.scss';\n\nimport InputBox from '../InputBox';\nimport AmountAdder from '../adders/AmountAdder';\nimport Balances from '../infos/Balances';\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_TRANSFER } from '../../text/mode';\nimport { setOperation } from '../../store/actions';\nimport AlertModal from '../modals/AlertModal';\nimport { isAddressValid, isAmountValid, isCurrencyValid, isDuplicate } from '../../lib/Validation';\n\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isAddressValid(this.state.address.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', 'receiver address 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n\n            const account = this.props.account;\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const transfersFact = generator.createTransfersFact(\n                account.address,\n                [generator.createTransfersItem(\n                    this.state.address.trim(), amounts\n                )]\n            );\n\n            const transfers = generator.createOperation(transfersFact, \"\");\n            transfers.addSign(account.privateKey);\n\n            const created = transfers.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"tf-container\">\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <Balances title='CURRENT BALANCE LIST' labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"tf-amounts\">\n                        <Balances title='AMOUNT LIST' labeled={true} balances={this.state.amounts} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                        <div className='tf-address-adder'>\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </div>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_TRANSFER, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Transfer));","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/operations/CreateAccount';\nimport UpdateKey from '../components/operations/UpdateKey';\nimport Transfer from '../components/operations/Transfer';\nimport { connect } from 'react-redux';\n\nimport { isStateValid } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!isStateValid(this.props)\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n\n            this.state = {\n                isRedirect: true,\n                operation: undefined\n            };\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    renderOperation() {\n        switch (this.state.operation) {\n            case OPER_CREATE_ACCOUNT:\n                return <CreateAccount account={this.props.account} />;\n            case OPER_UPDATE_KEY:\n                return <UpdateKey account={this.props.account} />;\n            case OPER_TRANSFER:\n                return <Transfer account={this.props.account} />;\n            default:\n                return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n    }\n\n    render() {\n        if (!this.props.isLogin) {\n            return <Redirect to='/login' />;\n        }\n        if (this.state.isRedirect) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n        \n        return (\n            <div className=\"oper-container\">\n                {this.renderOperation()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\n\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nimport { TYPE_CREATE_ACCOUNT, TYPE_UPDATE_KEY, TYPE_TRANSFER } from '../text/mode';\nimport { isDuplicate, isOperation } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\nimport AlertModal from '../components/modals/AlertModal';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nconst getOperationFromType = (type) => {\n    switch (type) {\n        case TYPE_CREATE_ACCOUNT:\n            return OPER_CREATE_ACCOUNT;\n        case TYPE_UPDATE_KEY:\n            return OPER_UPDATE_KEY;\n        case TYPE_TRANSFER:\n            return OPER_TRANSFER;\n        default:\n            return OPER_DEFAULT;\n    }\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n        \n        this.props.setJson(OPER_DEFAULT, null);\n\n        this.state = {\n            isRedirect: false,\n\n            isModalOpen: false,\n            isJsonOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {!(this.props.operation === OPER_DEFAULT)\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                            {JSON.stringify(this.props.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const json = this.props.json;\n            try {\n                const parsed = JSON.parse(reader.result);\n                if (!isOperation(parsed)) {\n                    this.openAlert('파일을 불러올 수 없습니다 :(', '[memo, hash, _hint, fact, fact_signs]를 포함한 JSON 파일을 사용해 주세요.');\n                }\n                else {\n                    const operation = getOperationFromType(parsed._hint);\n                    this.props.setJson(operation, parsed);\n                }\n            }\n            catch (e) {\n                if (json) {\n                    const operation = getOperationFromType(json._hint);\n                    this.props.setJson(operation, json);\n                }\n                this.openAlert('파일을 불러올 수 없습니다 :(', 'JSON 형식의 파일을 사용해 주세요.');\n            }\n        };\n        reader.readAsText(file, \"utf-8\");\n\n    }\n\n    onClickSend() {\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n        let target = this.props.json;\n\n        if (!isOperation(target)) {\n            return;\n        }\n\n        if(isDuplicate(this.props.account.publicKey, this.props.json.fact_signs.map(x => x.signer))){\n            this.openAlert('서명 추가 실패 :(', '이미 서명 된 작업입니다.');\n            return;\n        }\n\n        const signer = new Signer(this.props.networkId, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.openAlert('서명 추가 완료 :D', '작업에 서명을 추가하였습니다.');\n        }\n        catch (e) {\n            const operation = getOperationFromType(target._hint);\n            this.props.setJson(operation, target);\n            this.openAlert('서명 추가 실패 :(', '서명을 추가하는 도중 오류가 발생하였습니다.');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n\n        if(this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"sign-container\">\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.props.json && Object.prototype.hasOwnProperty.call(this.props.json, 'fact')\n                                        ? this.props.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.props.json ? this.props.json._hint : 'NONE'}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <p id='body'>{this.props.json ? (\n                                this.props.json.fact_signs.map(x => x).length !== 0\n                                    ? (\n                                        this.props.json.fact_signs.map(x => x).length === 1\n                                            ? `${this.props.json.fact_signs.map(x => x).length} signature`\n                                            : `${this.props.json.fact_signs.map(x => x).length} signatures`\n                                    )\n                                    : 'No signature'\n                            ) : 'No signature'}</p>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.props.json\n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                        ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n\n    operation: state.operation.operation,\n    json: state.operation.json,\n\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sign));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" to='/sign'>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                <Link className=\"main\" to=\"/get-address\">\n                    <p>GET ADDRESS</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n                <Link className=\"setting\" to=\"/network\">\n                    <p>SETTING</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout, clearHistory, clearQueue } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n        this.props.clearHistory();\n        this.props.clearQueue();\n    }\n    \n    render() {\n        if(!this.props.isLogin) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n    clearHistory: () => dispatch(clearHistory()),\n    clearQueue: () => dispatch(clearQueue())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport SmallButton from '../components/buttons/SmallButton';\nimport InputBox from '../components/InputBox';\nimport AlertModal from '../components/modals/AlertModal';\nimport { clearNetwork, clearNetworkId, setNetwork, setNetworkId } from '../store/actions';\nimport './NetworkSetter.scss';\n\nclass NetworkSetter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            network: this.props.network,\n            networkId: this.props.networkId,\n        }\n    }\n\n    setNetwork() {\n        this.props.setNetwork(this.state.network);\n        this.openAlert(\"네트워크 주소 변경 성공! :D\", `현재 네트워크 주소: ${this.state.network}`);\n    }\n\n    setNetworkId() {\n        this.props.setNetworkId(this.state.networkId);\n        this.openAlert(\"네트워크 ID 변경 성공! :D\", `현재 네트워크 ID: ${this.state.networkId}`);\n    }\n\n    clearNetwork() {\n        this.props.clearNetwork();\n        this.openAlert(\"네트워크 주소 변경 성공! :D\", `현재 네트워크 주소: ${process.env.REACT_APP_API_URL}`);\n    }\n\n    clearNetworkId() {\n        this.props.clearNetworkId();\n        this.openAlert(\"네트워크 ID 변경 성공! :D\", `현재 네트워크 ID: ${process.env.REACT_APP_NETWORK_ID}`);\n    }\n\n    onNetworkChange(e) {\n        this.setState({\n            network: e.target.value\n        });\n    }\n\n    onNetworkIdChange(e) {\n        this.setState({\n            networkId: e.target.value\n        });\n    }\n\n    openAlert(title, msg){\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n\n            network: this.props.network,\n            networkId: this.props.networkId\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"network-container\">\n                <h1>SETTING</h1>\n                <div className=\"network-setter setter\">\n                    <h2>SET NETWORK</h2>\n                    <section id=\"network-adder\">\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"network address\"\n                            value={this.state.network}\n                            onChange={(e) => this.onNetworkChange(e)} />\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.setNetwork()}>SET</SmallButton>\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.clearNetwork()}>RESET</SmallButton>\n                    </section>\n                </div>\n                <div className=\"network-id-setter setter\">\n                    <h2>SET NETWORK ID</h2>\n                    <section id=\"network-id-adder\">\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"network id\"\n                            value={this.state.networkId}\n                            onChange={(e) => this.onNetworkIdChange(e)} />\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.setNetworkId()}>SET</SmallButton>\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.clearNetworkId()}>RESET</SmallButton>\n                    </section>\n                </div>\n                <div className=\"network-version-info\">\n                    <h2>CURRENT VERSION</h2>\n                    <p>{`(FIXED) ${process.env.REACT_APP_VERSION}`}</p>\n                </div>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    network: state.network.network,\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setNetwork: (network) => dispatch(setNetwork(network)),\n    setNetworkId: (networkId) => dispatch(setNetworkId(networkId)),\n    clearNetwork: () => dispatch(clearNetwork()),\n    clearNetworkId: () => dispatch(clearNetworkId()),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NetworkSetter));","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <p>{`SDK VERSION ${process.env.REACT_APP_VERSION}`}</p>\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './LogoutConfirm.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions';\n\nclass LogoutConfirm extends React.Component {\n\n    onLogout() {\n        this.props.signOut();\n        this.props.onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            <div className={isOpen ? 'logout-openModal logout-modal' : 'logout-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Wallet Closed\n                            <button className=\"close\" onClick={() => this.onLogout()}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='logout-exp'>지갑이 닫힙니다. 변경된 비밀키로 지갑을 다시 열어주세요.</p>\n                            <p id='logout-exp'>* 작업 실패 시에는 기존 비밀키를 사용해야 합니다.</p>\n                            <span>\n                                <p className=\"logout-modal-button\" id=\"confirm\" onClick={() => this.onLogout()}>확인</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(LogoutConfirm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { enqueueOperation, setOperation, setResponse } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\nimport LogoutConfirm from '../components/modals/LogoutConfirm';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst address = (keyHash) => {\n    return (\n        <li key={keyHash}>\n            <p onClick={() => onCopy(keyHash)}>{keyHash}</p>\n        </li>\n    )\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isSignOut = this.props.operation === OPER_UPDATE_KEY;\n\n        if (!isSignOut && this.props.isBroadcast) {\n            this.props.addJob({\n                operation: this.props.operation,\n                hash: this.props.json.fact.hash,\n                broadcastedAt: new Date().toISOString(),\n            });\n        }\n\n        this.state = {\n            isRedirect: false,\n            isModalOpen: isSignOut,\n            isSignOut,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    renderResponse() {\n        const { res, status, operation, data } = this.props;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        {\n                            operation === OPER_UPDATE_KEY\n                                ? <h1>KEY UPDATE SUCCESS~ :D</h1>\n                                : <h1>BROADCAST SUCCESS~ :D</h1>\n                        }\n                        <div>\n                            {operation === OPER_CREATE_ACCOUNT\n                                ? (\n                                    <section>\n                                        <h2>CREATED ADDRESS LIST</h2>\n                                        <ul>\n                                            {data.map(x => address(x))}\n                                        </ul>\n                                        <p>지갑 생성 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                ) : false\n                            }\n                            {operation === OPER_TRANSFER\n                                ? (\n                                    <section>\n                                        <p>송금 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                )\n                                : false\n                            }\n                        </div>\n                    </section>\n                )\n            case 400:\n            case 404:\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>{Object.prototype.hasOwnProperty.call(res, 'title') ? res.title : \"응답을 받지 못했습니다.\"}</p>\n                    </section>\n                );\n        }\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            this.props.clearJson();\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"res-container\">\n                {this.renderResponse()}\n                <LogoutConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isStateIn: state.operation.isStateIn,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearJson: () => dispatch(setOperation(OPER_DEFAULT, {})),\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n    addJob: (hash) => dispatch(enqueueOperation(hash))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Response));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './UpdateKeyLoad.scss';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../store/actions';\n\nclass UpdateKeyLoad extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: !this.props.isBroadcast,\n            counter: 0,\n        }\n    }\n\n    getResponse() {\n        if (this.state.counter < 15) {\n            const { data, res, isBroadcast } = this.props;\n\n            const getResult = async (_hash, _res, isBroadcast) => {\n                if(!isBroadcast) {\n                    this.setState({\n                        isRedirect: true\n                    })\n\n                    return;\n                }\n\n                return await axios.get(this.props.networkSearchFact + _hash)\n                    .then(\n                        response => {\n                            if (response.data._embedded.in_state) {\n                                this.props.setResult(true, true, _res, 200, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                            else {\n                                this.props.setResult(true, false, {\n                                    title: response.data._embedded.reason.msg\n                                }, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                })\n                            }\n                        }\n                    )\n                    .catch(\n                        e => {\n                            \n                            if (e.response.status === 404 || e.response.status === 400) {\n                                this.setState({\n                                    counter: this.state.counter + 1\n                                })\n                            }\n                            else {\n                                this.props.setResult(true, false, e.response.data, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                        }\n                    )\n            }\n\n            setTimeout((hs, rs, broad) => {\n                getResult(hs, rs, broad);\n            }, 5000, data, res, isBroadcast);\n\n            return () => this.getResponse();\n        }\n        else {\n            this.props.setResult(true, false, {\n                title: \"Too long time to stay response. Maybe mitum failed to process your operation. :(\"\n            }, 400, this.props.data);\n            this.setState({\n                isRedirect: true,\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to='/response' />;\n        }\n\n        return (\n            <div className=\"load-container\">\n                <section className=\"load-detail\">\n                    <h1>Loading...</h1>\n                    <p>{\"키 업데이트 성공 여부를 조회 중입니다. 잠시만 기다려주세요.\"}</p>\n                    <p>{`REQUEST COUNT: ${this.state.counter}`}</p>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isBroadcast: state.operation.isBroadcast,\n    networkSearchFact: state.network.networkSearchFact\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKeyLoad));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './SubNavigation.scss';\n\nvar isClose = false;\n\nclass SubNavigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0,\n            isChecked: false\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    onCheckOut() {\n        this.setState({\n            isChecked: false\n        });\n    }\n\n    onCheck() {\n        this.setState({\n            isChecked: !this.state.isChecked\n        })\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 20) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"sub-nav\">\n                {this.state.rand ? this.check() : false}\n                <input className='burger-check' id=\"burger-check\" type=\"checkbox\" checked={this.state.isChecked} />\n                <label className=\"burger-icon\" for=\"burger-check\"\n                    onClick={() => this.onCheck()}>\n                    <span className=\"burger-sticks\"></span>\n                </label>\n                <Link className=\"sub-nav-title\" to=\"/\"\n                    onClick={() => this.onCheckOut()}>\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <div className='sub-nav-menu'>\n                    <div className='menu'>\n                        <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>OPEN WALLET</p>\n                        </Link>\n                        {isLogin\n                            ? (\n                                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to='/sign'\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>SIGN OPERATION</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/key-generate\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GENERATE KEYPAIR</p>\n                        </Link>\n                        <Link className=\"main\" to=\"/get-address\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GET ADDRESS</p>\n                        </Link>\n                        {account && account.restoreKey\n                            ? (\n                                <Link className=\"main\" to=\"/res-key-generate\"\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>GENERATE RESTORE KEY</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/help\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>HELP</p>\n                        </Link>\n                        <Link className=\"main\" to=\"/network\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>SETTING</p>\n                        </Link>\n                        {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(SubNavigation);","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport AddressGen from './views/AddressGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport NetworkSetter from './views/NetworkSetter';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\nimport UpdateKeyLoad from './views/UpdateKeyLoad';\nimport SubNavigation from './components/SubNavigation';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <SubNavigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/get-address\" component={AddressGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/network\" component={NetworkSetter} />\n          <Route path=\"/response\" component={Response} />\n          <Route path='/loading' component={UpdateKeyLoad} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst VERSION = require('./constant').VERSION;\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type) {\n        if (type == 'unknown') {\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else {\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w) {\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold) {\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    get address() {\n        return bs58.encode(this.hash) + ':' + Xhint.MC_ADDRESS + '-' + VERSION;\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n        \n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n\n        const _keys = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch (type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    getPrivateKey() {\n        return this.privKey.hinted();\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', { canonical: true }).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length - 1));\n\n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n\n        const sig = ec.sign(_msg, sk, 'hex', { canonical: true }).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4 + rlen);\n        const slen = sig[5 + rlen];\n        const s = sig.slice(6 + rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen + 4, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n\n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n\n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if (_type == 'btc') {\n        return _btckp();\n    }\n    else if (_type == 'ether') {\n        return _ethkp();\n    }\n    else if (_type == 'stellar') {\n        return _stlkp();\n    }\n    else {\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if (_type == '') {\n        if (_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch (type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}