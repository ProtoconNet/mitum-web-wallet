{"version":3,"sources":["lib/Account.js","text/mode.js","lib/History.js","store/actions/index.js","store/reducers/LoginReducer.js","lib/Url.js","store/reducers/OperationReducer.js","store/reducers/QueueReducer.js","lib/Queue.js","store/reducers/NetworkReducer.js","store/reducers/PageReducer.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","lib/Validation.js","components/modals/AlertModal.js","views/Login.js","components/buttons/SelectButton.js","components/modals/PublicKeyModal.js","components/modals/PendingModal.js","lib/Sleep.js","views/Wallet.js","views/KeyGen.js","components/infos/Keys.js","components/infos/SubInfo.js","components/adders/ThresholdAdder.js","components/adders/KeyAdder.js","views/AddressGen.js","views/ResKeyGen.js","mitum_wallet_manual.pdf","views/Help.js","components/modals/OperationConfirm.js","components/infos/Balances.js","components/adders/AmountAdder.js","components/operations/CreateAccount.js","components/adders/ExtraAdder.js","components/operations/UpdateKey.js","components/operations/Transfer.js","views/Operation.js","lib/Parse.js","views/Sign.js","components/Navigation.js","views/Logout.js","views/NetworkSetter.js","components/Footer.js","components/modals/LogoutConfirm.js","views/Response.js","views/UpdateKeyLoad.js","components/SubNavigation.js","views/ImportQr.js","App.js","reportWebVitals.js","index.js"],"names":["Account","addr","priv","pub","data","Error","this","address","privateKey","resKey","undefined","publicKeys","_embedded","keys","map","x","key","weight","balances","balance","currency","amount","accountType","length","sort","y","localeCompare","publicKey","idx","indexOf","hint","substring","btc","process","ether","stellar","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","OPER_DEFAULT","PAGE_LOGIN","PAGE_OPER","PAGE_QR","PAGE_NON","SHOW_PRIVATE","SHOW_RESTORE","TYPE_CREATE_ACCOUNT","operation","create_account","TYPE_UPDATE_KEY","update_key","TYPE_TRANSFER","transfer","History","history","me","inState","in_state","confirmedAt","confirmed_at","type","_hint","factHash","fact","hash","setItems","items","receiver","account","amounts","sender","i","push","LOGIN","LOGOUT","SET_HISTORY","CLEAR_HISTORY","SET_OPERATION","SET_RESPONSE","ENQUEUE_OPERATION","DEQUEUE_OPERATION","CLEAR_QUEUE","SET_NETWORK","CLEAR_NETWORK","SET_NETWORK_ID","CLEAR_NETWORK_ID","SET_PAGE","CLEAR_PAGE","clearPage","login","restoreKey","logout","clearHistory","setOperation","json","setResponse","isBroadcast","isStateIn","res","status","initialState","isLogin","isLoadHistory","download","Object","prototype","hasOwnProperty","call","file","File","JSON","stringify","e","alert","URL","createObjectURL","mode","filename","queue","item","shift","isEmpty","network","networkAccount","networkBroadcast","networkSearchFact","networkId","pageBefore","rootReducer","combineReducers","state","action","actions","enque","deque","clear","id","page","store","createStore","Home","props","isRedirect","setState","to","className","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","value","target","size","name","autoComplete","autoCorrect","autoCapitalize","autoSave","autoFocus","textTransform","onChange","placeholder","useCopy","copy","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","trim","RestoreKeyLoginBox","isOperation","isPublicKeyValid","pubk","test","keyHint","isAddressValid","addressHint","isNum","num","isThresholdValid","thres","thresNum","parseInt","isWeightValid","isWeightsValidToThres","weights","total","isCurrencyValid","currencies","isDuplicate","isAmountValid","list","AlertModal","isOpen","onClose","title","msg","Login","isPriv","isActive","isAlertShow","alertTitle","alertMsg","isShowLoad","a","axios","get","_addr","_priv","pk","isPrivateKeyValid","pubKey","toKeypair","getPublicKey","openAlert","getAccountHistory","then","setHistory","catch","getAccountInformation","pubKeys","signIn","console","log","radio","document","querySelector","onStartLogin","checked","closeAlert","renderForm","withRouter","connect","dispatch","histories","splitHistories","_i","j","_j","z","_z","confirmation","direction","SelectButton","PublicKeyModal","k","PendingModal","broadcastedAt","job","Sleep","ms","Promise","resolve","setTimeout","titleStyle","flexDirection","alignItems","justifyContent","width","margin","padding","content","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isPubModalOpen","isPendModalOpen","isQueueUpdate","redirect","isResult","getFactInState","request","deleteJob","finally","isDetailVisible","isPrivVisible","isResVisible","oper","checkInState","refresh","pathname","ref","openPubModal","bal","onSelect","hist","openPendModal","closePubModal","closePendModal","KeyGen","privKey","_type","keypair","getKeypair","getPrivateKey","getKey","Keys","ThresholdAdder","onThresChange","KeyAdder","onKeyChange","onWeightChange","onAdd","isAddDisabled","useThres","AddressGen","threshold","isAlertOpen","generator","Generator","_keys","formatKey","createKeys","createdRef","onChangePub","onChangeWeight","addKey","onChangeThres","getAddress","ResKeyGen","pdfjs","GlobalWorkerOptions","workerSrc","version","Help","goToPrevPage","pageNumber","goToNextPage","scrollToPdf","pdfRef","isShowExp","numPages","href","pdfFile","rel","onLoadSuccess","onDocumentLoadSuccess","OperationConfirm","wrapperRef","isExport","post","broadcast","setResult","response","error","pngUrl","getElementById","toDataURL","replace","downloadLink","createElement","body","appendChild","click","removeChild","encode","level","includeMargin","downloadQr","onExport","onSend","buttonView","Balances","labeled","AmountAdder","onCurrencyChange","onAmountChange","CreateAccount","scrollToInput","titleRef","isModalOpen","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","created","dict","setJson","onChangeCurrency","onChangeAmount","addAmount","closeModal","ExtraAdder","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","Operation","location","renderOperation","getOperationFromType","preStyle","overflow","whiteSpace","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","toQr","files","reader","FileReader","onload","parsed","parse","result","readAsText","fact_signs","signer","Signer","signOperation","openJSON","jsonView","importJSON","toQrPage","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","clearQueue","NetworkSetter","setNetwork","setNetworkId","clearNetwork","clearNetworkId","onNetworkChange","onNetworkIdChange","Footer","LogoutConfirm","onLogout","keyHash","Response","isSignOut","addJob","Date","toISOString","clearJson","renderResponse","UpdateKeyLoad","counter","getResult","_hash","_res","reason","hs","rs","broad","getResponse","SubNavigation","isChecked","htmlFor","onCheck","onCheckOut","ImportQr","qrRef","success","decode","setPage","openImageDialog","delay","onError","handleError","onScan","handleScan","legacyMode","importFile","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a9dc326c.chunk.js","sourcesContent":["import { key } from '../text/hint.json';\n\nclass Account {\n    constructor(addr=null, priv=null, pub=null, data=null) {\n        if(!addr || !priv || !pub || !data) {\n            throw new Error('Wrong parameter with Account constructor');\n        }\n\n\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n\n        this.balances.sort((x, y) => x.currency.localeCompare(y.currency));\n        this.publicKeys.sort((x, y) => x.key.localeCompare(y.key));\n\n        this.publicKey = pub;\n\n        const idx = priv.indexOf(':');\n        const hint = priv.substring(idx + 1);\n        switch (hint) {\n            case `${key.btc.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.btc.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.ether.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.ether.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n            case `${key.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n                this.publicKey = pub + ':' + key.stellar.pub + '-' + process.env.REACT_APP_VERSION;\n                return;\n        }\n    }\n}\n\nexport default Account;","import { operation } from './hint.json';\n\nexport const OPER_CREATE_ACCOUNT = 'OPER-CREATE-ACCOUNT';\nexport const OPER_UPDATE_KEY = 'OPER-UPDATE-KEY';\nexport const OPER_TRANSFER = 'OPER-TRANSFER';\nexport const OPER_DEFAULT = 'OPER-DEFAULT';\n\nexport const PAGE_HOME = 'PAGE-HOME'\nexport const PAGE_LOGIN = 'PAGE-LOGIN';\nexport const PAGE_WALLET = 'PAGE-WALLET';\nexport const PAGE_OPER = 'PAGE-OPER';\nexport const PAGE_SIGN = 'PAGE-SIGN';\nexport const PAGE_LOD = 'PAGE-LOD';\nexport const PAGE_RES = 'PAGE-RES';\nexport const PAGE_GEN = 'PAGE-GEN';\n\nexport const PAGE_QR = \"PAGE-QR\";\nexport const PAGE_NON = \"PAGE-NON\";\n\nexport const SHOW_PRIVATE = 'show-private';\nexport const SHOW_RESTORE = 'show-restore';\n\nexport const TYPE_CREATE_ACCOUNT = operation.create_account + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_UPDATE_KEY = operation.update_key + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_TRANSFER = operation.transfer + '-' + process.env.REACT_APP_VERSION;","import { TYPE_CREATE_ACCOUNT, TYPE_TRANSFER } from \"../text/mode\";\nimport { address } from '../text/hint.json';\n\nconst hintedAccount = (account) => {\n    return  account + ':' + address + '-' + process.env.REACT_APP_VERSION\n};\n\nclass History {\n    constructor(history, me) {\n        this.me = me;\n        this.inState = history.in_state;\n        this.confirmedAt = history.confirmed_at;\n        \n        this.operation = history.operation;\n        this.type = history.operation._hint;\n        this.factHash = history.operation.fact.hash;\n\n        this.setItems();\n    }\n\n    setItems(){\n        if(!(this.type === TYPE_CREATE_ACCOUNT || this.type === TYPE_TRANSFER)) {\n            this.items = undefined;\n            return;\n        }\n\n        const items = this.operation.fact.items.map(\n            x => ({\n                receiver: this.type === TYPE_CREATE_ACCOUNT ? hintedAccount(x.keys.hash) : x.receiver,\n                amounts: x.amounts.map(\n                    y => ({\n                        currency: y.currency,\n                        amount: y.amount\n                    })\n                )\n            })\n        );\n\n        this.sender = this.operation.fact.sender;\n        if(this.sender === this.me){\n            this.items = items;\n        }\n        else{\n            this.items = [];\n            for( let i = 0; i < items.length; i++ ){\n                if(items[i].receiver === this.me) {\n                    this.items.push(items[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default History;","import Account from '../../lib/Account';\nimport History from '../../lib/History';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_HISTORY = 'SET_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n\nexport const SET_OPERATION = 'SET_OPERATION';\nexport const SET_RESPONSE = 'SET_RESPONSE';\n\nexport const ENQUEUE_OPERATION = 'ENQUEUE_OPERATION';\nexport const DEQUEUE_OPERATION = 'DEQUEUE_OPERATION';\nexport const CLEAR_QUEUE = 'CLEAR_QUEUE';\n\nexport const SET_NETWORK = 'SET_NETWORK';\nexport const CLEAR_NETWORK = 'CLEAR_NETWORK';\nexport const SET_NETWORK_ID = 'SET_NETWORK_ID';\nexport const CLEAR_NETWORK_ID = 'CLEAR_NETWORK_ID';\n\nexport const SET_PAGE = 'SET_PAGE';\nexport const CLEAR_PAGE = 'CLEAR_PAGE';\n \nexport function setPage() {\n    return {\n        type: SET_PAGE,\n    };\n}\n\nexport function clearPage() {\n    return {\n        type: CLEAR_PAGE\n    }\n}\n\nexport function login(address, privateKey, publicKey, data) {\n    const account = new Account(address, privateKey, publicKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKey: account.publicKey,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined,\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function setHistory(data, me) {\n    if(!data) {\n        return {\n            type: SET_HISTORY,\n            history: [],\n        }\n    }\n\n    const histories = data._embedded.map(x => new History(x._embedded, me));\n    const splitHistories = [];\n\n    for(let i = 0; i < histories.length; i++){\n        const _i = histories[i];\n        if(!_i.items){\n            continue;\n        }\n        for(let j = 0; j < _i.items.length; j++){\n            const _j = _i.items[j];\n            for(let z = 0; z < _j.amounts.length; z++) {\n                const _z = _j.amounts[z];\n                splitHistories.push({\n                    hash: _i.factHash,\n                    confirmation: _i.inState ? 'SUCCESS' : 'FAIL',\n                    direction: me === _i.sender ? 'SEND' : 'RECEIVE',\n                    confirmedAt: _i.confirmedAt,\n                    target: me === _i.sender ? _j.receiver : _i.sender,\n                    currency: _z.currency,\n                    amount: _z.amount\n                })\n            }\n        }\n    }\n\n    return {\n        type: SET_HISTORY,\n        history: splitHistories,\n    }\n}\n\nexport function clearHistory() {\n    return {\n        type: CLEAR_HISTORY\n    }\n}\n\nexport function setOperation(operation, json) {\n    return {\n        type: SET_OPERATION,\n        operation,\n        json,\n    }\n}\n\nexport function setResponse(isBroadcast, isStateIn, res, status, data) {\n    return {\n        type: SET_RESPONSE,\n        isBroadcast,\n        isStateIn,\n        res,\n        status,\n        data,\n    }\n}\n\nexport function enqueueOperation(item) {\n    return {\n        type: ENQUEUE_OPERATION,\n        item,\n    }\n}\n\nexport function dequeueOperation() {\n    return {\n        type: DEQUEUE_OPERATION\n    }\n}\n\nexport function clearQueue() {\n    return {\n        type: CLEAR_QUEUE\n    }\n}\n\nexport function setNetworkId(id) {\n    return {\n        type: SET_NETWORK_ID,\n        id,\n    }\n}\n\nexport function setNetwork(network) {\n    return {\n        type: SET_NETWORK,\n        network,\n    }\n}\n\nexport function clearNetworkId() {\n    return {\n        type: CLEAR_NETWORK_ID,\n    }\n}\n\nexport function clearNetwork() {\n    return {\n        type: CLEAR_NETWORK\n    }\n}\n\n","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined,\n    history: undefined,\n    isLoadHistory: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        case actions.SET_HISTORY:\n            return {\n                ...state,\n                history: action.history,\n                isLoadHistory: true\n            }\n        case actions.CLEAR_HISTORY:\n            return {\n                ...state,\n                history: undefined,\n                isLoadHistory: false\n            }\n        default:\n            return state;\n    }\n}","function download(json) {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('JSON 파일 다운로드 url을 얻을 수 없습니다. :(');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nexport default download;","import * as actions from '../actions';\nimport * as mode from '../../text/mode'; \nimport download from '../../lib/Url';\n\nconst initialState = {\n    operation: mode.OPER_DEFAULT,\n    json: null,\n    data: [],\n    download: undefined,\n    filename: \"\",\n    isBroadcast: false,\n    isStateIn: false,\n    res: undefined,\n    status: 400\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_OPERATION:\n            if(action.operation === mode.OPER_DEFAULT) {\n                return initialState;\n            }            \n\n            return {\n                ...state,\n                operation: action.operation,\n                json: action.json,\n                download: download(action.json),\n                filename: action.json.hash\n            }\n        case actions.SET_RESPONSE:\n            return {\n                ...state,\n                isBroadcast: action.isBroadcast,\n                isStateIn: action.isStateIn,\n                res: action.res,\n                status: action.status,\n                data: action.data,\n            }\n        default:\n            return state;\n    }\n}","import * as actions from '../actions';\nimport Queue from '../../lib/Queue';\n\nconst initialState = {\n    queue: new Queue()\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.ENQUEUE_OPERATION:\n            state.queue.enque(action.item);\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.DEQUEUE_OPERATION:\n            state.queue.deque();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.CLEAR_QUEUE:\n            state.queue.clear();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        default:\n            return state;\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    enque(item) {\n        this.queue.push(item);\n    }\n\n    deque() {\n        this.queue.shift();\n    }\n\n    isEmpty() {\n        if(this.queue) {\n            return false;\n        }\n        return true;\n    }\n\n    clear() {\n        this.queue = [];\n    }\n\n    get length() {\n        return this.queue.length;\n    }\n\n    get target() {\n        if(this.isEmpty()) {\n            return null\n        }\n        return this.queue[0];\n    }\n}\n\nexport default Queue;","import * as actions from '../actions';\n\nconst initialState = {\n    network: process.env.REACT_APP_API_URL,\n    networkAccount: process.env.REACT_APP_API_ACCOUNT,\n    networkBroadcast: process.env.REACT_APP_API_BROADCAST,\n    networkSearchFact: process.env.REACT_APP_API_SEARCH_FACT,\n    networkId: process.env.REACT_APP_NETWORK_ID,\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_NETWORK:\n            return {\n                ...state,\n                network: action.network,\n                networkAccount: action.network + '/account/',\n                networkBroadcast: action.network + '/builder/send',\n                networkSearchFact: action.network + '/operation/'\n            };\n        case actions.CLEAR_NETWORK:\n            return {\n                ...state,\n                network: process.env.REACT_APP_API_URL,\n                networkAccount: process.env.REACT_APP_API_ACCOUNT,\n                networkBroadcast: process.env.REACT_APP_API_BROADCAST,\n                networkSearchFact: process.env.REACT_APP_API_SEARCH_FACT,\n            }\n        case actions.SET_NETWORK_ID:\n            return {\n                ...state,\n                networkId: action.id\n            }\n        case actions.CLEAR_NETWORK_ID:\n            return {\n                ...state,\n                networkId: process.env.REACT_APP_NETWORK_ID\n            }\n        default:\n            return state;\n    }\n}","import { PAGE_NON, PAGE_QR } from '../../text/mode';\nimport * as actions from '../actions';\n\nconst initialState = {\n    pageBefore: PAGE_NON\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_PAGE:\n            return {\n                ...state,\n                pageBefore: PAGE_QR\n            };\n        case actions.CLEAR_PAGE:\n            return {\n                ...state,\n                pageBefore: PAGE_NON\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\nimport { reducer as operationReducer } from './OperationReducer';\nimport { reducer as queueReducer } from './QueueReducer';\nimport { reducer as networkReducer } from './NetworkReducer';\nimport { reducer as pageReducer } from './PageReducer';\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    operation: operationReducer,\n    queue: queueReducer,\n    network: networkReducer,\n    page: pageReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return (\n            <div className=\"home-container\">\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"block\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\nexport default SmallButton;","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\n\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text/plain\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    autoCorrect=\"off\"\n                    autoCapitalize=\"off\"\n                    autoSave=\"off\"\n                    autoFocus=\"off\"\n                    style={{\n                        textTransform: \"none\"\n                    }}\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <button className=\"confirm-button\"\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                onClick={this.props.onClick}\n                disabled={this.props.disabled ? true : false}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"private key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => {\n                        this.props.onLogin(this.state.account.trim(), this.state.privateKey.trim());\n                    }}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import { key as keyHint } from '../text/hint.json';\nimport { address as addressHint } from '../text/hint.json';\n\nexport const isOperation = (json) => {\n\n    if (!json) { return false; }\n\n    if(!Object.prototype.hasOwnProperty.call(json, '_hint') || !json._hint) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'hash') || !json.hash) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'memo')) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact') || !json.fact) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact_signs')) {\n        return false;\n    }\n\n    // const signatures = json.fact_signs.map(x => x.signatures);\n    // if (signatures.length < 1) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isStateValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'location') || !state.location) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state.location, 'state') || !state.location.state) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isResponseValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'res') || !state.res) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'status') || !state.status) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'operation') || !state.operation) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'data')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAccountValid = (account) => {\n\n    if (!account) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'address') || !account.address) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'accountType') || !account.accountType) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'publicKeys') || !account.publicKeys) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'balances') || !account.balances) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'privateKey') || !account.privateKey) {\n        return false;\n    }\n\n    // if (!Object.prototype.hasOwnProperty.call(account, 'restoreKey') || !account.restoreKey) {\n    //     return false;\n    // }\n\n    return true;\n}\n\nexport const isPrivateKeyValid = (pk) => {\n\n    if (typeof (pk) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = pk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n    const key = pk.substring(0, idx);\n    const hint = pk.substring(idx + 1);\n\n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.priv}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.priv}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isPublicKeyValid = (pubk) => {\n\n    if (typeof (pubk) !== typeof ('string')) {\n        return false;\n    }\n\n    const idx = pubk.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const key = pubk.substring(0, idx);\n    const hint = pubk.substring(idx + 1);\n    \n    if(!/[a-zA-Z0-9]+/.test(key)) {\n        return false;\n    }\n\n    switch (hint) {\n        case `${keyHint.btc.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.ether.pub}-${process.env.REACT_APP_VERSION}`:\n        case `${keyHint.stellar.pub}-${process.env.REACT_APP_VERSION}`:\n            return true;\n        default:\n            return false;\n    }\n}\n\nexport const isAddressValid = (addr) => {\n\n    if (typeof (addr) !== typeof (\"string\")) {\n        return false;\n    }\n\n    const idx = addr.indexOf(':');\n    if (idx < 0) {\n        return false;\n    }\n\n    const hint = addr.substring(idx + 1);\n    const address = addr.substring(1, idx);\n    if (hint !== `${addressHint}-${process.env.REACT_APP_VERSION}`) {\n        return false;\n    }\n\n    if(!/[a-zA-Z0-9]+/.test(address)) {\n        return false;\n    }\n\n    return true;\n}\n\nconst isNum = (num) => {\n    if (!num) {\n        return false;\n    }\n\n    if (/[^0-9]/.test(num)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]*/.test(num)) {\n        return false;\n    }\n\n    if (num.indexOf('.') > -1) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isThresholdValid = (thres) => {\n    if (!isNum(thres)) {\n        return false;\n    }\n\n    if (!/[1-9][0-9]{0,2}/.test(thres)) {\n        return false;\n    }\n\n    const thresNum = parseInt(thres);\n    if (thresNum < 1 || thresNum > 100) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isWeightValid = (weight) => {\n    return isNum(weight);\n}\n\nexport const isWeightsValidToThres = (weights, thres) => {\n    \n    if (!isThresholdValid(thres)) {\n        return false;\n    }\n\n    let total = 0;\n    for (let i = 0; i < weights.length; i++) {\n        if (!isWeightValid(weights[i])) {\n            return false;\n        }\n        total += parseInt(weights[i]);\n    }\n\n    if (total < parseInt(thres)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isCurrencyValid = (currency, currencies) => {\n\n    if(!currency || !currencies || currencies.length < 1) {\n        return false;\n    }\n\n    if(typeof (currency) !== typeof ('string')) {\n        return false;\n    }\n\n    if(!/[A-Z]{3,3}/.test(currency)) {\n        return false;\n    }\n\n    return isDuplicate(currency, currencies);\n}\n\nexport const isAmountValid = (amount) => {\n    return isNum(amount);\n}\n\nexport const isDuplicate = (target, list) => {\n\n    if(!target || !list) {\n        return false;\n    }\n\n    for(let i = 0; i < list.length; i++) {\n        if(target.indexOf(list[i]) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}","import React from 'react';\nimport './AlertModal.scss';\n\nclass AlertModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, title, msg } = this.props;\n        return (\n            <div className={isOpen ? 'alert-openModal alert-modal' : 'alert-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {title}\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='alert-msg'>{msg}</p>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default AlertModal;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { clearHistory, login, setHistory } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\nimport { SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\nimport { isAddressValid, isPrivateKeyValid } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (this.props.isLogin) {\n            this.onLogin(this.props.account.address, this.props.account.privateKey);\n        }\n\n        this.state = {\n            mode: SHOW_PRIVATE,\n            isPriv: true,\n            isActive: false,\n\n            isAlertShow: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            isShowLoad: false,\n            isRedirect: false,\n        }\n    }\n\n    async getAccountInformation(account) {\n        return await axios.get(this.props.networkAccount + account);\n    }\n\n    async getAccountHistory(account) {\n        return await axios.get(`${this.props.networkAccount}${account}/operations?reverse=1`);\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertShow: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertShow: false\n        });\n    }\n\n    onLogin(_addr, _priv) {\n        const addr = _addr.trim();\n        const priv = _priv.trim();\n\n        if (!isAddressValid(addr) || !isPrivateKeyValid(priv)) {\n            this.openAlert('지갑 열기 실패 :(', '주소 혹은 키 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        let pubKey;\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            this.openAlert('지갑 열기 실패 :(', '유효하지 않은 개인키입니다.');\n            return;\n        }\n\n        this.getAccountHistory(addr)\n            .then(\n                res => {\n                    this.props.setHistory(res.data, addr);\n                }\n            )\n            .catch(\n                e => {\n                    this.props.setHistory(null, addr);\n                }\n            )\n\n        this.getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, pubKey, res.data);\n                            return;\n                        }\n                    }\n                    this.openAlert('지갑 열기 실패 :(', `계정 [${addr}]의 멤버에 해당 키가 존재하지 않습니다.`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    this.openAlert('지갑 열기 실패 :(', '유효하지 않은 주소 혹은 네트워크 문제로 계정 조회에 실패하였습니다.');\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case SHOW_PRIVATE:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n            case SHOW_RESTORE:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onStartLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    async onStartLogin(addr, priv) {\n        this.setState({\n            isShowLoad: true\n        });\n\n        this.onLogin(addr, priv)\n\n        if (!(this.props.isLogin && this.props.isLoadHistory)) {\n            this.setState({\n                isShowLoad: false\n            });\n        }\n    }\n\n    render() {\n        if (this.props.isLogin && this.props.isLoadHistory) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />\n        }\n\n        return (\n            <div className=\"login-container\">\n                <div id='login-main'\n                    style={{\n                        display: this.state.isShowLoad ? 'none' : 'flex'\n                    }}>\n                    <h1>OPEN WALLET</h1>\n                    <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_PRIVATE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Private Key</div>\n                        </label>\n\n                        <label className=\"rad-label\">\n                            <input type=\"radio\" className=\"rad-input\" value={SHOW_RESTORE} name=\"rad\"\n                                onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                            <div className=\"rad-design\"></div>\n                            <div className=\"rad-text\">Restore Key</div>\n                        </label>\n                    </div>\n                    <AlertModal isOpen={this.state.isAlertShow} onClose={() => this.closeAlert()}\n                        title={this.state.alertTitle} msg={this.state.alertMsg} />\n                    {this.renderForm()}\n                </div>\n                <div id='login-load'\n                    style={{\n                        display: this.state.isShowLoad ? 'flex' : 'none'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    isLoadHistory: state.login.isLoadHistory,\n    networkAccount: state.network.networkAccount,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, publicKey, data) => dispatch(login(address, privateKey, publicKey, data)),\n    setHistory: (data, me) => dispatch(setHistory(data, me)),\n    clearHistory: () => dispatch(clearHistory())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PublicKeyModal.scss\";\n\nconst key = (k) => {\n    return (\n        <li key={k}\n            onClick={() => {\n                copy(k);\n                alert('copied');\n            }}>{k}</li>\n    );\n}\n\nclass PublicKeyModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, account } = this.props;\n        return (\n            <div className={isOpen ? 'pub-openModal pub-modal' : 'pub-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Public Key List\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {account.publicKeys.map(x => key(x.key))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    account: state.login.account\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PublicKeyModal));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PendingModal.scss\";\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER } from '../../text/mode';\n\nconst job = (x) => {\n    return (\n        <li key={x.hash}\n            onClick={() => { copy(x.hash); alert('copied'); }}>\n            <p>{x.broadcastedAt}</p>\n            <p>{x.operation === OPER_CREATE_ACCOUNT\n                ? 'CREATE-ACCOUNT'\n                : (\n                    x.operation === OPER_TRANSFER\n                        ? 'TRANSFER'\n                        : 'UPDATE-KEY'\n                )\n            }</p>\n            <p>{x.hash}</p>\n        </li>\n    );\n}\n\nclass PendingModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, queue } = this.props;\n        return (\n            <div className={isOpen ? 'pend-openModal pend-modal' : 'pend-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Operation Facts in Pending...\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {queue.queue.map(x => job(x))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    queue: state.queue.queue\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PendingModal));","function Sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Sleep;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { dequeueOperation, login } from '../store/actions';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport PublicKeyModal from '../components/modals/PublicKeyModal';\nimport PendingModal from '../components/modals/PendingModal';\nimport axios from 'axios';\n\nimport { isAccountValid } from '../lib/Validation';\n\nimport Sleep from '../lib/Sleep';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY, PAGE_LOGIN, PAGE_OPER, SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <p className=\"currency\">{bal.currency}</p>\n            <p className=\"amount\">{bal.amount}</p>\n        </li>\n    );\n}\n\nconst history = (hist) => {\n    return (\n        <li key={hist.hash + hist.currency} onClick={() => {\n            copy(hist.hash);\n            alert('fact hash copied!');\n        }}>\n            <p id={hist.confirmation}>{hist.confirmation}</p>\n            <p id={hist.direction}>{hist.direction}</p>\n            <p id='confirmed-at'>{hist.confirmedAt}</p>\n            <p id='target'>{hist.target}</p>\n            <p id='currency'>{hist.currency}</p>\n            <p id='amount'>{hist.amount}</p>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '0',\n    padding: '0'\n}\n\nconst title = (content) => {\n    return (\n        <div id='container' style={titleStyle}>\n            <div id='line'></div>\n            <p id='body'>{content}</p>\n            <div id='line'></div>\n        </div>\n    )\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isPubModalOpen: false,\n            isPendModalOpen: false,\n            isQueueUpdate: 1,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PAGE_LOGIN,\n            operation: undefined\n        }\n    }\n\n    async getFactInState(hash) {\n        return await axios.get(this.props.networkSearchFact + hash);\n    }\n\n    async checkInState() {\n        while (!this.props.queue.isEmpty()) {\n            const target = this.props.queue.target;\n\n            if (!target) {\n                break;\n            }\n\n            var isResult = false;\n            this.getFactInState(target.hash)\n                .then(\n                    res => {\n                        if (res.request.status === 200) {\n                            this.props.deleteJob();\n                            this.setState({ isQueueUpdate: this.state.isQueueUpdate + 1 });\n                        }\n                    }\n                )\n                .catch(\n                    e => {\n                        console.log(e);\n                    }\n                )\n                .finally(() => {\n                    isResult = true;\n                });\n\n            while (!isResult) {\n                await Sleep(500);\n            }\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === OPER_CREATE_ACCOUNT\n            || oper === OPER_UPDATE_KEY\n            || oper === OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: PAGE_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n        this.checkInState();\n\n        setTimeout(() => {\n            this.refresh();\n        }, 5000);\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    closePubModal() {\n        this.setState({ isPubModalOpen: false });\n    }\n\n    openPubModal() {\n        this.setState({ isPubModalOpen: true });\n    }\n\n    closePendModal() {\n        this.setState({ isPendModalOpen: false });\n    }\n\n    openPendModal() {\n        this.setState({ isPendModalOpen: true });\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: PAGE_LOGIN\n        });\n    }\n\n    render() {\n        \n        if (!this.props.account || !isAccountValid(this.props.account)) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (this.state.isRedirect) {\n            if (this.state.redirect === PAGE_OPER) {\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            }\n            else if (this.state.redirect === PAGE_LOGIN) {\n                return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className=\"wallet-container\" >\n                <div className=\"wallet-ref\" ref={this.walletRef} ></div>\n                <div id='wallet-refresh'><p onClick={() => this.refresh()}>↻</p></div>\n                <div className=\"wallet-info\">\n                    {title(\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\"))}\n                    <p id='address' onClick={() => this.openPubModal()}>{this.props.account.address}</p>\n                    <section className=\"wallet-amount\">\n                        {title('BALANCE')}\n                        <ul>\n                            {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-history\">\n                    {title('HISTORY')}\n                    <ul>\n                        {this.props.history.length > 0 ? this.props.history.map(x => history(x)) : false}\n                    </ul>\n                    <p id='pend' onClick={() => this.openPendModal()}>\n                        {this.state.isQueueUpdate ? `${this.props.queue.length} 개의 작업을 처리 중입니다.` : false}\n                    </p>\n                </div>\n                <PublicKeyModal onClose={() => this.closePubModal()} isOpen={this.state.isPubModalOpen} />\n                <PendingModal onClose={() => this.closePendModal()} isOpen={this.state.isPendModalOpen} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    queue: state.queue.queue,\n    networkSearchFact: state.network.networkSearchFact\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    deleteJob: () => dispatch(dequeueOperation())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privKey: \"\",\n            pubKey: \"\",\n        }\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        this.setState({\n            privKey: keypair.getPrivateKey(),\n            pubKey: keypair.getPublicKey()\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport { key } from './SubInfo';\nimport './Keys.scss';\n\nfunction Keys({ keys, title }) {\n    return (\n        <section className='key-container'>\n            <p id='head'>{title}</p>\n            <div className='label'>\n                <p id='key'>KEY</p>\n                <p id='weight'>WEIGHT</p>\n            </div>\n            <ul>\n                {keys ? keys.map(x => key(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Keys;","export const balance = x => {\n    return (\n        <li key={x.currency}>\n            <p id='currency'>{x.currency}</p>\n            <p id='amount'>{x.amount}</p>\n        </li>\n    );\n}\n\nexport const key = x => {\n    return (\n        <li key={x.key}>\n            <p id='key'>{x.key}</p>\n            <p id='weight'>{x.weight}</p>\n        </li>\n    );\n}","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ThresholdAdder.scss';\n\nfunction ThresholdAdder({ thres, onThresChange }) {\n\n    return (\n        <section className='threshold-adder-container'>\n            <div className=\"threshold-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ThresholdAdder;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './KeyAdder.scss';\n\nfunction KeyAdder(props) {\n\n    const { onKeyChange, onWeightChange, onAdd, isAddDisabled, pub, weight, useThres } = props;\n\n    return (\n        <section className='key-adder-container'>\n            <div className=\"key-adder\">\n                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                    value={pub}\n                    onChange={onKeyChange} />\n                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                    value={weight}\n                    onChange={onWeightChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n            {useThres\n                ? (\n                    <div className=\"thres-adder\">\n                        <p>THRESHOLD:</p>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={props.thres}\n                            onChange={props.onThresChange} />\n                    </div>\n                )\n                : false\n            }\n        </section>\n    );\n}\n\nexport default KeyAdder;","import React from \"react\";\nimport './AddressGen.scss';\n\nimport Keys from \"../components/infos/Keys\";\nimport ThresholdAdder from \"../components/adders/ThresholdAdder\";\nimport KeyAdder from \"../components/adders/KeyAdder\";\nimport AlertModal from \"../components/modals/AlertModal\";\n\nimport { isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from \"../lib/Validation\";\n\nimport { Generator } from 'mitumc';\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nimport copy from 'copy-to-clipboard';\nimport ConfirmButton from \"../components/buttons/ConfirmButton\";\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nclass AddressGen extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            address: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    getAddress() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('계정 주소를 계산할 수 없습니다. :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        const generator = new Generator(this.props.networkId);\n        const _keys = this.state.keys.map(k => generator.formatKey(k.key, parseInt(k.weight)));\n        const keys = generator.createKeys(_keys, parseInt(this.state.threshold));\n\n        this.setState({\n            address: keys.address\n        })\n    }\n\n    clear() {\n        this.setState({\n            keys: [],\n            publicKey: \"\",\n            weight: \"\",\n            threshold: \"\",\n            address: \"\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"address-gen-container\">\n                <h1>GET ADDRESS WITH KEYS</h1>\n                <div className=\"address-gen-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"address-gen-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} />\n                        <section className='address-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ThresholdAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                thres={this.state.threshold} />\n                        </section>\n                    </div>\n                </div>\n                <div className=\"address-gen-buttons\">\n                    <ConfirmButton\n                        disabled={\n                            this.state.keys.length !== 0 || this.state.address\n                                || this.state.threshold || this.state.publicKey\n                                || this.state.weight\n                                ? false : true}\n                        onClick={() => this.clear()}>CLEAR</ConfirmButton>\n                    <ConfirmButton\n                        disabled={this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                        onClick={() => this.getAddress()}>GET :D</ConfirmButton>\n                </div>\n                <div className=\"address-gen-account\">\n                    <p id=\"header\">ADDRESS</p>\n                    <p id=\"body\" onClick={() => onCopy(this.state.address)}>{this.state.address ? this.state.address : \"-\"}</p>\n                </div>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(AddressGen));","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","export default __webpack_public_path__ + \"static/media/mitum_wallet_manual.f34e6447.pdf\";","import React, { createRef } from 'react';\nimport Sleep from '../lib/Sleep';\nimport './Help.scss';\n\nimport pdfFile from '../mitum_wallet_manual.pdf';\nimport { pdfjs, Document, Page } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass Help extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.pdfRef = createRef();\n\n        this.state = {\n            isShowExp: false,\n\n            numPages: null,\n            pageNumber: 1,\n        }\n    }\n\n    onDocumentLoadSuccess({ numPages }) {\n        this.setState({ numPages });\n    }\n\n    goToPrevPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n    goToNextPage = () =>\n        this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n\n    async componentDidMount() {\n\n        await Sleep(1000);\n        this.setState({\n            isShowExp: true,\n        });\n        this.scrollToPdf();\n    }\n\n    scrollToPdf = () => {\n        if (this.pdfRef.current && this.state.isShowExp) {\n            this.pdfRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    componentDidUpdate() {\n        this.scrollToPdf();\n    }\n\n    render() {\n        const { pageNumber, numPages } = this.state;\n\n        return (\n            <div className=\"help-container\">\n                <div id='help-start'\n                    style={{\n                        display: this.state.isShowExp ? 'none' : 'flex'\n                    }}>\n                    <h1>Wait...</h1>\n                </div>\n                <div ref={this.pdfRef} />\n                <div id='help-document'\n                    style={{\n                        display: this.state.isShowExp ? 'flex' : 'none'\n                    }}>\n                    <a id='link' target=\"_blank\"\n                        download='manual.pdf'\n                        href={pdfFile}\n                        rel=\"noreferrer\">\n                        DOWNLOAD MANUAL\n                    </a>\n                    <Document\n                        file={pdfFile}\n                        onLoadSuccess={({ numPages }) => this.onDocumentLoadSuccess({ numPages })}>\n                        <Page pageNumber={pageNumber} />\n                    </Document>\n                    <p id='switch'>\n                        <span id='left'\n                            onClick={() =>\n                                this.state.pageNumber > 1\n                                    ? this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber - 1\n                                    })\n                                    : null}>\n                            &lt;\n                        </span>\n                        <span>{pageNumber} / {numPages}</span>\n                        <span id='right'\n                            onClick={() =>\n                                this.state.pageNumber < numPages\n                                    ?\n                                    this.setState({\n                                        numPages: this.state.numPages,\n                                        pageNumber: this.state.pageNumber + 1\n                                    })\n                                    : null}>\n                            &gt;\n                        </span>\n                    </p>\n                    <p id='exp'>가이드의 내용이 잘 보이지 않는 경우 상단의 DOWNLOAD MANUAL을 통해 파일을 직접 다운로드 하여 주시기 바랍니다.</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React, { createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../../store/actions';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport QRCode from 'qrcode.react';\nimport \"./OperationConfirm.scss\";\nimport { isOperation } from '../../lib/Validation';\n\nimport { OPER_CREATE_ACCOUNT, OPER_UPDATE_KEY, OPER_TRANSFER } from '../../text/mode';\nimport hint from '../../text/hint.json';\n\nimport {encode} from 'base-64'\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.wrapperRef = createRef();\n\n        this.state = {\n            isRedirect: false,\n            isExport: false,\n        }\n    }\n\n    async broadcast(operation) {\n        if (!isOperation(operation)) {\n            return undefined;\n        }\n\n        return await axios.post(this.props.networkBroadcast, operation);\n    }\n\n    onSend(json) {\n        this.broadcast(json).then(\n            res => {\n                if (res.request.status === 200) {\n                    let data = undefined;\n                    switch (this.props.operation) {\n                        case OPER_CREATE_ACCOUNT:\n                            data = json.fact.items.map(x => x.keys.hash + ':' + hint.address + '-' + process.env.REACT_APP_VERSION);\n                            break;\n                        case OPER_UPDATE_KEY:\n                            data = json.fact.hash;\n                            break;\n                        case OPER_TRANSFER:\n                        default:\n                            data = undefined;\n                    }\n                    this.props.setResult(true, false, res.data, 200, data);\n                }\n                else {\n                    this.props.setResult(false, false, res.data, res.request.status, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        ).catch(\n            e => {\n\n                try {\n                    this.props.setResult(false, false, e.response.data, e.response.data.status, undefined);\n                }\n                catch (error) {\n                    this.props.setResult(false, false, {\n                        title: '404 Network Error'\n                    }, 404, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        );\n    }\n\n    onExport() {\n        this.setState({\n            isExport: true\n        });\n    }\n\n    downloadQr() {\n        const { filename } = this.props;\n        const canvas = document.getElementById(\"modal-qrcode\");\n        const pngUrl = canvas\n            .toDataURL(\"image/png\")\n            .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = `${filename}.png`;\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n\n        this.onClose();\n    }\n\n    buttonView() {\n        const { json, filename, download } = this.props;\n\n        return (\n            this.state.isExport\n                ? (\n                    <span>\n                        <QRCode\n                            style={{\n                                display: \"none\"\n                            }}\n                            id=\"modal-qrcode\"\n                            value={\n                                encode(encode(JSON.stringify(json)))\n                            }\n                            size={500}\n                            level={\"L\"}\n                            includeMargin={true}\n                        />\n                        <a className=\"oper-modal-button\" id=\"yes\" target=\"_blank\" rel=\"noreferrer\"\n                            onClick={() => this.downloadQr()}>QR CODE</a>\n                        <a className=\"oper-modal-button\" id=\"yes\" target=\"_blank\" download={`${filename}.json`}\n                            href={download} rel=\"noreferrer\"\n                            onClick={() => this.onClose()}>\n                            {\"JSON 파일 다운로드!:[\"}\n                        </a>\n                    </span>\n                )\n                :\n                (\n                    <span>\n                        <p className=\"oper-modal-button\" id=\"no\" onClick={() => this.onClose()}>{\"취소!:(\"}</p>\n                        <a className=\"oper-modal-button\" id=\"no\" onClick={() => this.onExport()}>{\"내보내기 :[\"}</a>\n                        <p className=\"oper-modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"전송!:)\"}</p>\n                    </span>\n                )\n        );\n    }\n\n    onClose() {\n        const { onClose } = this.props;\n\n        this.setState({\n            isExport: false\n        });\n        onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n\n        if (this.state.isRedirect) {\n            const { operation } = this.props;\n            switch (operation) {\n                case OPER_CREATE_ACCOUNT:\n                case OPER_TRANSFER:\n                    return <Redirect to='/response' />;\n                case OPER_UPDATE_KEY:\n                    return <Redirect to='/loading' />;\n                default:\n                    alert('처리할 수 없는 타입의 작업입니다 :(\\n지갑 페이지로 이동합니다.');\n                    return <Redirect to='/login' />;\n            }\n        }\n\n        return (\n            <div className={isOpen ? 'oper-openModal oper-modal' : 'oper-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            {\n                                this.state.isExport\n                                    ? \"작업 파일 다운로드\"\n                                    : \"이 작업을 전송하겠습니까?\"\n                            }\n                            <button className=\"close\" onClick={() => this.onClose()}> &times; </button>\n                        </header>\n                        <main>\n                            {\n                                this.state.isExport\n                                    ? <p id='oper-exp'>파일 형식을 선택하세요.</p>\n                                    : <p id='oper-exp'>전송 버튼을 누른 후에는 작업을 되돌릴 수 없습니다.<br />작업 내용이 정확한가요?</p>\n                            }\n                            {this.buttonView()}\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    download: state.operation.download,\n    filename: state.operation.filename,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    networkBroadcast: state.network.networkBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OperationConfirm));","import React from 'react';\nimport { balance } from './SubInfo';\nimport './Balances.scss';\n\nfunction Balances({ balances, title, labeled }) {\n    return (\n        <section className='balance-container'>\n            <p id='head'>{title}</p>\n            {labeled ? (\n                <div className='label'>\n                    <p id='currency'>CURRENCY ID</p>\n                    <p id='amount'>AMOUNT</p>\n                </div>\n            ) : false}\n            <ul className={labeled ? 'wide' : 'slim'}>\n                {balances ? balances.map(x => balance(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Balances;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './AmountAdder.scss';\n\nfunction AmountAdder(props) {\n\n    const { onCurrencyChange, onAmountChange, currency, amount, isAddDisabled, onAdd } = props;\n\n    return (\n        <section className='amount-adder-container'>\n            <div className=\"amount-adder\">\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                    onChange={onCurrencyChange}\n                    value={currency} />\n                <InputBox\n                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                    value={amount}\n                    onChange={onAmountChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n        </section>\n    );\n}\n\nexport default AmountAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../../store/actions';\n\nimport './CreateAccount.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport Keys from '../infos/Keys';\nimport Balances from '../infos/Balances';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport AmountAdder from '../adders/AmountAdder';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_CREATE_ACCOUNT } from '../../text/mode';\nimport { isAmountValid, isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\nimport AlertModal from '../modals/AlertModal';\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            isModalOpen: false,\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: ''\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold)) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n            const account = this.props.account;\n\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const createAccountsFact = generator.createCreateAccountsFact(\n                account.address,\n                [generator.createCreateAccountsItem(\n                    keys, amounts\n                )]\n            );\n\n            const createAccounts = generator.createOperation(createAccountsFact, \"\");\n            createAccounts.addSign(account.privateKey);\n\n            const created = createAccounts.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && (this.state.keys.length > 0 || this.state.amounts.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"ca-container\">\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <Balances title=\"CURRENT BALANCE LIST\" labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} labeled={true} />\n                        <KeyAdder\n                            onKeyChange={(e) => this.onChangePub(e)}\n                            onWeightChange={(e) => this.onChangeWeight(e)}\n                            onThresChange={(e) => this.onChangeThres(e)}\n                            onAdd={() => this.addKey()}\n                            isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                            pub={this.state.publicKey} weight={this.state.weight} thres={this.state.threshold}\n                            useThres={true} />\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <Balances title=\"AMOUNT LIST\" balances={this.state.amounts} labeled={true} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_CREATE_ACCOUNT, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CreateAccount));","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ExtraAdder.scss';\n\nfunction ExtraAdder({ thres, currency, onCurrencyChange, onThresChange }) {\n\n    return (\n        <section className='extra-adder-container'>\n            <div className=\"thres-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n            <div className=\"currency-adder\">\n                <p>CURRENCY ID:</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                    value={currency}\n                    onChange={onCurrencyChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ExtraAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './UpdateKey.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\nimport Keys from '../infos/Keys';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport ExtraAdder from '../adders/ExtraAdder';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { setOperation } from '../../store/actions';\n\nimport { OPER_UPDATE_KEY } from '../../text/mode';\nimport AlertModal from '../modals/AlertModal';\nimport { isCurrencyValid, isDuplicate, isPublicKeyValid, isThresholdValid, isWeightsValidToThres, isWeightValid } from '../../lib/Validation';\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false });\n    }\n\n    onClick() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isWeightsValidToThres(this.state.keys.map(x => x.weight), this.state.threshold.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', '모든 weight들의 합은 threshold 이상이어야 합니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n\n            const account = this.props.account;\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold.trim())\n            );\n\n            const keyUpdaterFact = generator.createKeyUpdaterFact(\n                account.address, this.state.currency.trim(), keys\n            );\n\n            const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n            keyUpdater.addSign(account.privateKey);\n\n            const created = keyUpdater.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        if (!isThresholdValid(this.state.threshold.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 threshold입니다. threshold를 먼저 입력해주세요. (0 < threshold <=100)');\n            return;\n        }\n\n        if (!isPublicKeyValid(this.state.publicKey.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 public key입니다.');\n            return;\n        }\n\n        if (!isWeightValid(this.state.weight.trim())) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '잘못된 weight입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.publicKey.trim(), this.state.keys.map(x => x.key))) {\n            this.openAlert('키를 추가할 수 없습니다 :(', '이미 리스트에 중복된 키가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey.trim(),\n                weight: this.state.weight.trim()\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"uk-container\">\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <Keys title='CURRENT KEY LIST' keys={account.publicKeys} />\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <Keys title='NEW KEY LIST' keys={this.state.keys} />\n                        <section className='uk-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ExtraAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                                thres={this.state.threshold} currency={this.state.currency} />\n                        </section>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_UPDATE_KEY, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKey));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Transfer.scss';\n\nimport InputBox from '../InputBox';\nimport AmountAdder from '../adders/AmountAdder';\nimport Balances from '../infos/Balances';\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_TRANSFER } from '../../text/mode';\nimport { setOperation } from '../../store/actions';\nimport AlertModal from '../modals/AlertModal';\nimport { isAddressValid, isAmountValid, isCurrencyValid, isDuplicate } from '../../lib/Validation';\n\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        if (!isAddressValid(this.state.address.trim())) {\n            this.openAlert('작업을 생성할 수 없습니다 :(', 'receiver address 형식이 올바르지 않습니다.');\n            return;\n        }\n\n        try {\n            const generator = new Generator(this.props.networkId);\n\n            const account = this.props.account;\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const transfersFact = generator.createTransfersFact(\n                account.address,\n                [generator.createTransfersItem(\n                    this.state.address.trim(), amounts\n                )]\n            );\n\n            const transfers = generator.createOperation(transfersFact, \"\");\n            transfers.addSign(account.privateKey);\n\n            const created = transfers.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            this.openAlert('작업을 생성할 수 없습니다 :(', '입력하신 작업 내용을 확인해 주세요.');\n        }\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        if (!isCurrencyValid(this.state.currency.trim(), this.props.account.balances.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency id입니다.');\n            return;\n        }\n\n        if (!isAmountValid(this.state.amount.trim())) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '잘못된 currency amount입니다.');\n            return;\n        }\n\n        if (isDuplicate(this.state.currency.trim(), this.state.amounts.map(x => x.currency))) {\n            this.openAlert('어마운트를 추가할 수 없습니다 :(', '이미 리스트에 중복된 currency id가 존재합니다.');\n            return;\n        }\n\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency.trim(),\n                amount: this.state.amount.trim()\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"tf-container\">\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <Balances title='CURRENT BALANCE LIST' labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"tf-amounts\">\n                        <Balances title='AMOUNT LIST' labeled={true} balances={this.state.amounts} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                        <div className='tf-address-adder'>\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </div>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_TRANSFER, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Transfer));","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/operations/CreateAccount';\nimport UpdateKey from '../components/operations/UpdateKey';\nimport Transfer from '../components/operations/Transfer';\nimport { connect } from 'react-redux';\n\nimport { isStateValid } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!isStateValid(this.props)\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n\n            this.state = {\n                isRedirect: true,\n                operation: undefined\n            };\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    renderOperation() {\n        switch (this.state.operation) {\n            case OPER_CREATE_ACCOUNT:\n                return <CreateAccount account={this.props.account} />;\n            case OPER_UPDATE_KEY:\n                return <UpdateKey account={this.props.account} />;\n            case OPER_TRANSFER:\n                return <Transfer account={this.props.account} />;\n            default:\n                return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n    }\n\n    render() {\n        if (!this.props.isLogin) {\n            return <Redirect to='/login' />;\n        }\n        if (this.state.isRedirect) {\n            return <Redirect to={`/wallet/${this.props.account.address}`} />;\n        }\n        \n        return (\n            <div className=\"oper-container\">\n                {this.renderOperation()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY, TYPE_CREATE_ACCOUNT, TYPE_TRANSFER, TYPE_UPDATE_KEY } from \"../text/mode\";\n\nconst getOperationFromType = (type) => {\n    switch (type) {\n        case TYPE_CREATE_ACCOUNT:\n            return OPER_CREATE_ACCOUNT;\n        case TYPE_UPDATE_KEY:\n            return OPER_UPDATE_KEY;\n        case TYPE_TRANSFER:\n            return OPER_TRANSFER;\n        default:\n            return OPER_DEFAULT;\n    }\n}\n\nexport default getOperationFromType;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { clearPage, setOperation } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\n\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nimport { PAGE_QR } from '../text/mode';\nimport { isDuplicate, isOperation } from '../lib/Validation';\nimport { OPER_DEFAULT } from '../text/mode';\nimport AlertModal from '../components/modals/AlertModal';\nimport SmallButton from '../components/buttons/SmallButton';\nimport getOperationFromType from '../lib/Parse';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\n\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n\n        if(this.props.pageBefore !== PAGE_QR) {\n            this.props.setJson(OPER_DEFAULT, null);\n        }\n        this.props.clearPage();\n\n        this.state = {\n            isRedirect: false,\n\n            isModalOpen: false,\n            isJsonOpen: false,\n\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            toQr: false,\n        }\n    }\n\n    toQrPage() {\n        this.setState({\n            toQr: true\n        })\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg\n        })\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n        })\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {!(this.props.operation === OPER_DEFAULT)\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                            {JSON.stringify(this.props.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const json = this.props.json;\n            try {\n                const parsed = JSON.parse(reader.result);\n                if (!isOperation(parsed)) {\n                    this.openAlert('파일을 불러올 수 없습니다 :(', '[memo, hash, _hint, fact, fact_signs]를 포함한 JSON 파일을 사용해 주세요.');\n                }\n                else {\n                    const operation = getOperationFromType(parsed._hint);\n                    this.props.setJson(operation, parsed);\n                }\n            }\n            catch (e) {\n                if (json) {\n                    const operation = getOperationFromType(json._hint);\n                    this.props.setJson(operation, json);\n                }\n                this.openAlert('파일을 불러올 수 없습니다 :(', 'JSON 형식의 파일을 사용해 주세요.');\n            }\n        };\n        reader.readAsText(file, \"utf-8\");\n\n    }\n\n    onClickSend() {\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n        let target = this.props.json;\n\n        if (!isOperation(target)) {\n            return;\n        }\n\n        if (isDuplicate(this.props.account.publicKey, this.props.json.fact_signs.map(x => x.signer))) {\n            this.openAlert('서명 추가 실패 :(', '이미 서명 된 작업입니다.');\n            return;\n        }\n\n        const signer = new Signer(this.props.networkId, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.openAlert('서명 추가 완료 :D', '작업에 서명을 추가하였습니다.');\n        }\n        catch (e) {\n            const operation = getOperationFromType(target._hint);\n            this.props.setJson(operation, target);\n            this.openAlert('서명 추가 실패 :(', '서명을 추가하는 도중 오류가 발생하였습니다.');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n\n        if (this.state.toQr) {\n            return <Redirect to='/qr-reader' />;\n        }\n\n        if (this.state.isRedirect) {\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"sign-container\">\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.props.json && Object.prototype.hasOwnProperty.call(this.props.json, 'fact')\n                                        ? this.props.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.props.json ? this.props.json._hint : 'NONE'}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <p id='body'>{this.props.json ? (\n                                this.props.json.fact_signs.map(x => x).length !== 0\n                                    ? (\n                                        this.props.json.fact_signs.map(x => x).length === 1\n                                            ? `${this.props.json.fact_signs.map(x => x).length} signature`\n                                            : `${this.props.json.fact_signs.map(x => x).length} signatures`\n                                    )\n                                    : 'No signature'\n                            ) : 'No signature'}</p>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.props.json\n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                        ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                        <SmallButton \n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.toQrPage()}>import from qr code</SmallButton>\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n\n    operation: state.operation.operation,\n    json: state.operation.json,\n\n    networkId: state.network.networkId,\n\n    pageBefore: state.page.pageBefore,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n    clearPage: () => dispatch(clearPage()),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sign));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" to='/sign'>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                <Link className=\"main\" to=\"/get-address\">\n                    <p>GET ADDRESS</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n                <Link className=\"setting\" to=\"/network\">\n                    <p>SETTING</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout, clearHistory, clearQueue } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n        this.props.clearHistory();\n        this.props.clearQueue();\n    }\n    \n    render() {\n        if(!this.props.isLogin) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        return <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n    clearHistory: () => dispatch(clearHistory()),\n    clearQueue: () => dispatch(clearQueue())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport SmallButton from '../components/buttons/SmallButton';\nimport InputBox from '../components/InputBox';\nimport AlertModal from '../components/modals/AlertModal';\nimport { clearNetwork, clearNetworkId, setNetwork, setNetworkId } from '../store/actions';\nimport './NetworkSetter.scss';\n\nclass NetworkSetter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAlertOpen: false,\n            alertTitle: '',\n            alertMsg: '',\n\n            network: this.props.network,\n            networkId: this.props.networkId,\n        }\n    }\n\n    setNetwork() {\n        this.props.setNetwork(this.state.network);\n        this.openAlert(\"네트워크 주소 변경 성공! :D\", `현재 네트워크 주소: ${this.state.network}`);\n    }\n\n    setNetworkId() {\n        this.props.setNetworkId(this.state.networkId);\n        this.openAlert(\"네트워크 ID 변경 성공! :D\", `현재 네트워크 ID: ${this.state.networkId}`);\n    }\n\n    clearNetwork() {\n        this.props.clearNetwork();\n        this.openAlert(\"네트워크 주소 변경 성공! :D\", `현재 네트워크 주소: ${process.env.REACT_APP_API_URL}`);\n    }\n\n    clearNetworkId() {\n        this.props.clearNetworkId();\n        this.openAlert(\"네트워크 ID 변경 성공! :D\", `현재 네트워크 ID: ${process.env.REACT_APP_NETWORK_ID}`);\n    }\n\n    onNetworkChange(e) {\n        this.setState({\n            network: e.target.value\n        });\n    }\n\n    onNetworkIdChange(e) {\n        this.setState({\n            networkId: e.target.value\n        });\n    }\n\n    openAlert(title, msg){\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        this.setState({\n            isAlertOpen: false,\n\n            network: this.props.network,\n            networkId: this.props.networkId\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"network-container\">\n                <h1>SETTING</h1>\n                <div className=\"network-setter setter\">\n                    <h2>SET NETWORK</h2>\n                    <section id=\"network-adder\">\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"network address\"\n                            value={this.state.network}\n                            onChange={(e) => this.onNetworkChange(e)} />\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.setNetwork()}>SET</SmallButton>\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.clearNetwork()}>RESET</SmallButton>\n                    </section>\n                </div>\n                <div className=\"network-id-setter setter\">\n                    <h2>SET NETWORK ID</h2>\n                    <section id=\"network-id-adder\">\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"network id\"\n                            value={this.state.networkId}\n                            onChange={(e) => this.onNetworkIdChange(e)} />\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.setNetworkId()}>SET</SmallButton>\n                        <SmallButton\n                            visible={true}\n                            disabled={false}\n                            onClick={() => this.clearNetworkId()}>RESET</SmallButton>\n                    </section>\n                </div>\n                <div className=\"network-version-info\">\n                    <h2>CURRENT VERSION</h2>\n                    <p>{`(FIXED) ${process.env.REACT_APP_VERSION}`}</p>\n                </div>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    network: state.network.network,\n    networkId: state.network.networkId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setNetwork: (network) => dispatch(setNetwork(network)),\n    setNetworkId: (networkId) => dispatch(setNetworkId(networkId)),\n    clearNetwork: () => dispatch(clearNetwork()),\n    clearNetworkId: () => dispatch(clearNetworkId()),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(NetworkSetter));","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <p>{`SDK VERSION ${process.env.REACT_APP_VERSION}`}</p>\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './LogoutConfirm.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions';\n\nclass LogoutConfirm extends React.Component {\n\n    onLogout() {\n        this.props.signOut();\n        this.props.onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            <div className={isOpen ? 'logout-openModal logout-modal' : 'logout-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Wallet Closed\n                            <button className=\"close\" onClick={() => this.onLogout()}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='logout-exp'>지갑이 닫힙니다. 변경된 비밀키로 지갑을 다시 열어주세요.</p>\n                            <p id='logout-exp'>* 작업 실패 시에는 기존 비밀키를 사용해야 합니다.</p>\n                            <span>\n                                <p className=\"logout-modal-button\" id=\"confirm\" onClick={() => this.onLogout()}>확인</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(LogoutConfirm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { enqueueOperation, setOperation, setResponse } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\nimport LogoutConfirm from '../components/modals/LogoutConfirm';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst address = (keyHash) => {\n    return (\n        <li key={keyHash}>\n            <p onClick={() => onCopy(keyHash)}>{keyHash}</p>\n        </li>\n    )\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isSignOut = this.props.operation === OPER_UPDATE_KEY;\n\n        if (!isSignOut && this.props.isBroadcast) {\n            this.props.addJob({\n                operation: this.props.operation,\n                hash: this.props.json.fact.hash,\n                broadcastedAt: new Date().toISOString(),\n            });\n        }\n\n        this.state = {\n            isRedirect: false,\n            isModalOpen: isSignOut,\n            isSignOut,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    renderResponse() {\n        const { res, status, operation, data } = this.props;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        {\n                            operation === OPER_UPDATE_KEY\n                                ? <h1>KEY UPDATE SUCCESS~ :D</h1>\n                                : <h1>BROADCAST SUCCESS~ :D</h1>\n                        }\n                        <div>\n                            {operation === OPER_CREATE_ACCOUNT\n                                ? (\n                                    <section>\n                                        <h2>CREATED ADDRESS LIST</h2>\n                                        <ul>\n                                            {data.map(x => address(x))}\n                                        </ul>\n                                        <p>지갑 생성 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                ) : false\n                            }\n                            {operation === OPER_TRANSFER\n                                ? (\n                                    <section>\n                                        <p>송금 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                )\n                                : false\n                            }\n                        </div>\n                    </section>\n                )\n            case 400:\n            case 404:\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>{Object.prototype.hasOwnProperty.call(res, 'title') ? res.title : \"응답을 받지 못했습니다.\"}</p>\n                    </section>\n                );\n        }\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            this.props.clearJson();\n            return <Redirect to='/login' />;\n        }\n\n        return (\n            <div className=\"res-container\">\n                {this.renderResponse()}\n                <LogoutConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isStateIn: state.operation.isStateIn,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearJson: () => dispatch(setOperation(OPER_DEFAULT, {})),\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n    addJob: (hash) => dispatch(enqueueOperation(hash))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Response));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './UpdateKeyLoad.scss';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../store/actions';\n\nclass UpdateKeyLoad extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: !this.props.isBroadcast,\n            counter: 0,\n        }\n    }\n\n    getResponse() {\n        if (this.state.counter < 15) {\n            const { data, res, isBroadcast } = this.props;\n\n            const getResult = async (_hash, _res, isBroadcast) => {\n                if(!isBroadcast) {\n                    this.setState({\n                        isRedirect: true\n                    })\n\n                    return;\n                }\n\n                return await axios.get(this.props.networkSearchFact + _hash)\n                    .then(\n                        response => {\n                            if (response.data._embedded.in_state) {\n                                this.props.setResult(true, true, _res, 200, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                            else {\n                                this.props.setResult(true, false, {\n                                    title: response.data._embedded.reason.msg\n                                }, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                })\n                            }\n                        }\n                    )\n                    .catch(\n                        e => {\n                            \n                            if (e.response.status === 404 || e.response.status === 400) {\n                                this.setState({\n                                    counter: this.state.counter + 1\n                                })\n                            }\n                            else {\n                                this.props.setResult(true, false, e.response.data, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                        }\n                    )\n            }\n\n            setTimeout((hs, rs, broad) => {\n                getResult(hs, rs, broad);\n            }, 5000, data, res, isBroadcast);\n\n            return () => this.getResponse();\n        }\n        else {\n            this.props.setResult(true, false, {\n                title: \"Too long time to stay response. Maybe mitum failed to process your operation. :(\"\n            }, 400, this.props.data);\n            this.setState({\n                isRedirect: true,\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    render() {\n        if (this.state.isRedirect) {\n            return <Redirect to='/response' />;\n        }\n\n        return (\n            <div className=\"load-container\">\n                <section className=\"load-detail\">\n                    <h1>Loading...</h1>\n                    <p>{\"키 업데이트 성공 여부를 조회 중입니다. 잠시만 기다려주세요.\"}</p>\n                    <p>{`REQUEST COUNT: ${this.state.counter}`}</p>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isBroadcast: state.operation.isBroadcast,\n    networkSearchFact: state.network.networkSearchFact\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKeyLoad));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './SubNavigation.scss';\n\nvar isClose = false;\n\nclass SubNavigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0,\n            isChecked: false\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    onCheckOut() {\n        this.setState({\n            isChecked: false\n        });\n    }\n\n    onCheck() {\n        this.setState({\n            isChecked: !this.state.isChecked\n        })\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 20) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"sub-nav\">\n                {this.state.rand ? this.check() : false}\n                <input className='burger-check' id=\"burger-check\" type=\"checkbox\" checked={this.state.isChecked} />\n                <label className=\"burger-icon\" htmlFor=\"burger-check\"\n                    onClick={() => this.onCheck()}>\n                    <span className=\"burger-sticks\"></span>\n                </label>\n                <Link className=\"sub-nav-title\" to=\"/\"\n                    onClick={() => this.onCheckOut()}>\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <div className='sub-nav-menu'>\n                    <div className='menu'>\n                        <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>OPEN WALLET</p>\n                        </Link>\n                        {isLogin\n                            ? (\n                                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to='/sign'\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>SIGN OPERATION</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/key-generate\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GENERATE KEYPAIR</p>\n                        </Link>\n                        <Link className=\"main\" to=\"/get-address\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>GET ADDRESS</p>\n                        </Link>\n                        {account && account.restoreKey\n                            ? (\n                                <Link className=\"main\" to=\"/res-key-generate\"\n                                    onClick={() => this.onCheckOut()}>\n                                    <p>GENERATE RESTORE KEY</p>\n                                </Link>\n                            ) : false}\n                        <Link className=\"main\" to=\"/help\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>HELP</p>\n                        </Link>\n                        <Link className=\"main\" to=\"/network\"\n                            onClick={() => this.onCheckOut()}>\n                            <p>SETTING</p>\n                        </Link>\n                        {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(SubNavigation);","import React, { Component, createRef } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport SelectButton from '../components/buttons/SelectButton';\nimport getOperationFromType from '../lib/Parse';\nimport { clearPage, setOperation, setPage } from '../store/actions';\n\nimport QrReader from 'react-qr-reader';\n\nimport './ImportQr.scss';\nimport { decode } from 'base-64';\nimport { isOperation } from '../lib/Validation';\nimport AlertModal from '../components/modals/AlertModal';\n\nclass ImportQr extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.props.clearPage();\n        this.qrRef = createRef();\n\n        this.state = {\n            data: \"Not Detected\",\n            result: \"-\",\n            isRedirect: false,\n            isAlertOpen: false,\n            alertTitle: \"\",\n            alertMsg: \"\",\n\n            success: false,\n        };\n    }\n\n    handleScan(result) {\n        if (result) {\n            try {\n                JSON.parse(decode(decode(result)));\n            }\n            catch (error) {\n                this.setState({\n                    data: \"Invalid Operation; Maybe this QR Code is not for mitum web wallet.\",\n                    result: result\n\n                });\n                this.openAlert(\"불러오기 실패.. :(\", \"유효하지 않은 QR 코드입니다.\");\n                return;\n            }\n\n            const data = decode(decode(result));\n            const parsed = JSON.parse(data);\n\n            if (!isOperation(parsed)) {\n                this.setState({\n                    data: \"Invalid Operation; Maybe this QR Code is not for mitum web wallet.\",\n                    result: result\n                });\n\n                this.openAlert(\"불러오기 실패.. :(\", \"유효하지 않은 QR 코드입니다.\");\n                return;\n            }\n            else {\n                const operation = getOperationFromType(parsed._hint);\n                this.props.setJson(operation, parsed);\n                this.props.setPage();\n\n                this.setState({\n                    success: true\n                });\n                this.openAlert(\"불러오기 성공! :)\", \"서명 페이지로 이동합니다.\");\n                return;\n            }\n        }\n\n        this.setState({\n            result: result\n        });\n    }\n\n    handleError(error) {\n        console.log(error);\n    }\n\n    importFile() {\n        this.setState({\n            data: \"Not Detected\"\n        })\n        this.qrRef.current.openImageDialog();\n    }\n\n    openAlert(title, msg) {\n        this.setState({\n            isAlertOpen: true,\n            alertTitle: title,\n            alertMsg: msg,\n        });\n    }\n\n    closeAlert() {\n        if (this.state.success) {\n            this.setState({\n                isAlertOpen: false,\n                isRedirect: true\n            })\n        }\n        else {\n            this.setState({\n                isAlertOpen: false,\n            })\n        }\n    }\n\n    render() {\n\n        if (this.state.isRedirect) {\n            return <Redirect to=\"/sign\" />\n        }\n\n        return (\n            <div className=\"qr-container\">\n                <QrReader\n                    className=\"qr-reader\"\n                    delay={300}\n                    onError={(e) => this.handleError(e)}\n                    onScan={(res) => this.handleScan(res)}\n                />\n                <QrReader\n                    ref={this.qrRef}\n                    style={{\n                        display: \"none\"\n                    }}\n                    className=\"qr-reader\"\n                    delay={300}\n                    onError={(e) => this.handleError(e)}\n                    onScan={(res) => this.handleScan(res)}\n                    legacyMode\n                />\n                <SelectButton id=\"import-button\" size=\"wide\" onClick={() => this.importFile()}>\n                    import from file\n                </SelectButton>\n                <p>{this.state.result}</p>\n                <p>{this.state.data}</p>\n                <AlertModal isOpen={this.state.isAlertOpen} onClose={() => this.closeAlert()}\n                    title={this.state.alertTitle} msg={this.state.alertMsg} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setPage: () => dispatch(setPage()),\n    clearPage: () => dispatch(clearPage()),\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(ImportQr));","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport AddressGen from './views/AddressGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport NetworkSetter from './views/NetworkSetter';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\nimport UpdateKeyLoad from './views/UpdateKeyLoad';\nimport SubNavigation from './components/SubNavigation';\n\nimport ImportQr from './views/ImportQr';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <SubNavigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/get-address\" component={AddressGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/network\" component={NetworkSetter} />\n          <Route path=\"/response\" component={Response} />\n          <Route path='/loading' component={UpdateKeyLoad} />\n          <Route path='/qr-reader' component={ImportQr} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}