{"version":3,"sources":["../../mitum-js-util/lib/hint.js","../../mitum-js-util/lib/seal.js","../../mitum-js-util/lib/sign.js","../../mitum-js-util/index.js","../../mitum-js-util/lib/operation.js","../../mitum-js-util/lib/constant.js","lib/Account.js","store/actions/index.js","store/reducers/LoginReducer.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","views/Login.js","components/buttons/SelectButton.js","views/Wallet.js","views/KeyGen.js","views/ResKeyGen.js","views/Help.js","components/buttons/AddButton.js","components/NewOperation.js","components/CreateAccount.js","components/UpdateKey.js","components/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","components/Footer.js","App.js","reportWebVitals.js","index.js","../../mitum-js-util/lib/key.js","../../mitum-js-util/lib/util.js"],"names":["exports","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","Xoper","require","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","this","_id","key","weight","indexOf","big","cid","length","keys","threshold","ks","_keys","i","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","getTimeStamp","bsignedAt","Buffer","from","dateToUTC","bsigner","getPublicKey","bopers","concat","hash","bodyHash","sum256","signature","sign","seal","_hint","encode","body_hash","signer","signed_at","toISOString","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","log","_factSignToBuffer","_fact_sign","bsign","decode","bat","ISOToUTC","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","buffer","_factSignsToBuffer","bmemo","module","FactSign","at","hint","fact_sign","hintedKey","parsed","parseHinted","getTypeFromHint","BTCKeypair","hintless","ETHKeypair","StellarKeypair","msg","e","toKeypair","BigInteger","bbig","tight","bcid","amount","value","toString","currency","Address","addr","Item","type","amounts","bkeys","bamounts","concatObjectsToBuffer","item","breceiver","hinted","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","VERSION","_VERSION","Account","priv","data","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","LOGIN","LOGOUT","login","account","initialState","isLogin","rootReducer","combineReducers","state","action","actions","store","createStore","Home","props","isRedirect","setState","className","to","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","children","InputBox","size","name","disabled","onChange","placeholder","useCopy","copy","alert","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","RestoreKeyLoginBox","MODE_PRIV_KEY","MODE_RES_KEY","getAccountInformation","a","axios","get","process","Login","renderForm","bind","reloadAccount","mode","isPriv","isActive","pubKey","then","res","pubKeys","signIn","catch","radio","document","querySelector","checked","connect","dispatch","SelectButton","PATH_LOGIN","PATH_SIGN","PATH_OPER","SHOW_PRIVATE","SHOW_RESTORE","onCopy","Wallet","scrollToAccount","walletRef","current","isDetailVisible","scrollIntoView","behavior","detailRef","createRef","restoreKey","isPrivVisible","isResVisible","redirect","operation","pathname","json","renderRedirect","ref","bal","onMoreClick","onShowClick","onSelect","KEY_ETHER","KEY_STELLAR","KeyGen","privKey","publicKey","btc","pub","ether","stellar","Error","version","getKey","ResKeyGen","Help","AddButton","xmlns","width","height","viewBox","d","NewOperation","padding","margin","overflow","CreateAccount","scrollToInput","jsonRef","created","createdRef","titleRef","hasOwnProperty","generator","createKeys","formatKey","parseInt","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","onChangeThres","k","onChangePub","onChangeWeight","addKey","onChangeCurrency","onChangeAmount","addAmount","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","location","CLEAR_DOWNLOAD","CLEAR_RESPONSE","download","file","File","URL","createObjectURL","broadcast","post","preStyle","whiteSpace","Sign","scrollToJSON","responseRef","response","jsonSelf","filename","clr","onSelfChange","files","reader","FileReader","onload","result","clear","readAsText","status","request","signOperation","_createFile","containerStyle","onClickImport","onClickSelf","jsonView","importJSON","onCreateFile","href","rel","onClickSend","onClickSign","Logout","signOut","Footer","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","y","_buffer","BaseKey","w","karr","sortedkeys","sort","bthreshold","Keypair","_generatePublicKey","_msg","sha256","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","sig","rlen","r","slen","s","brlen","little","buf","alloc","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key","Xconst","crypto","jsSHA3","Uint64BE","BigInt","num","Math","ceil","byteSize","_num","absValue","_reverse","toBuffer","_off","writeUIntLE","_buf","writeUIntBE","tmp","idx","substring","lastIndexOf","Date","date","iso","arr","concated","createHash","update","digest","sha3_256","create"],"mappings":"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","file":"static/js/main.b1d5fe03.chunk.js","sourcesContent":["/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\"; \nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for(var i = 0; i < ks.length; i++){\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for(var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight){\n        if(key.indexOf(':') === -1){\n            throw '[ERROR] Invalid key';\n        }\n        if(typeof(weight) !== 'number'){\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid){\n        if(typeof(big) !== 'number'){\n            throw '[ERROR] Invalid amount';\n        }\n        if(cid.length < 1){\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold){\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts){\n        return _toAmounts(amts);\n    };\n    \n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts){\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts){\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items){\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys){\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items){\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo){\n        let _type;\n\n        if(fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if(fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if(fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers){\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for(var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n        \n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for(var i = 0; i < opers.length; i++){\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if(error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for(var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof(f_oper) === typeof(\"\") ? JSON.parse(fs.readFileSync(f_oper)) \n                : (typeof(f_oper) === typeof({}) ? f_oper : undefined );\n        if(!before){\n        return undefined;\n}\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }     \n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch(Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch(e) {\n        console.log(e);\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n    \n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n        \n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */    \n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */ \n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for(var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */ \n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for(var i = 0; i < this.amounts.length; i++){\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n   \n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */ \n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */ \n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for(var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n    \n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {      \n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n        \n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */ \n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */ \n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for(var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());   \n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if(this.fact_signs.length < 1){\n            throw '[ERROR] Empty fact sign!'\n        }\n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n        \n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */ \n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for(var i = 0; i < this.fact_signs.length; i++){\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    Operation,\n};\n","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","class Account {\n    constructor(addr, priv, data) {\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n    }\n}\n\nexport default Account;","import Account from '../../lib/Account';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function login(address, privateKey, data) {\n    const account = new Account(address, privateKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                { this.state.isRedirect ? <Redirect to=\"/login\" /> : false }\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"inherit\" : \"none\" }}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SmallButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\nimport copy from 'copy-to-clipboard';\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"box\">\n                <input className={'input-box ' + this.props.size}\n                    type=\"text\"\n                    name=\"input-box\"\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton className=\"input-copy-button\"\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <div className=\"confirm-button-container \">\n                <button className=\"confirm-button\"\n                    style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                    onClick={this.props.onClick}\n                    disabled={this.props.disabled ? true : false}>\n                    {this.props.children}\n                </button>\n            </div>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"priavate key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => this.props.onLogin(this.state.account, this.state.privateKey)}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { login } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\n\nconst MODE_PRIV_KEY = 'MODE_PRIV_KEY';\nconst MODE_RES_KEY = 'MODE_RES_KEY';\n\nconst getAccountInformation = async (account) => {\n    try {\n        return await axios.get(process.env.REACT_APP_API_ACCOUNT + account);\n    } catch (e) {\n        alert(`Could not sign in\\n${account}`);\n    }\n}\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderForm = this.renderForm.bind(this);\n        this.reloadAccount = this.reloadAccount.bind(this);\n\n        this.state = {\n            mode: MODE_PRIV_KEY,\n            isPriv: true,\n            isActive: false\n        }\n    }\n\n    onLogin(addr, priv) {\n        let pubKey;\n\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            alert('Invalid private key');\n            return;\n        }\n\n        getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, res.data);\n                            return;\n                        }\n                    }\n                    alert(`Could not sign in\\naccount: ${addr}`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    alert(`Could not sign in\\naccount: ${addr}`);\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case MODE_PRIV_KEY:\n                return <PrivateKeyLoginBox onLogin={(addr, priv) => this.onLogin(addr, priv)} />\n            case MODE_RES_KEY:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox onLogin={(addr, priv) => this.onLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    reloadAccount() {\n        this.onLogin(this.props.account.address, this.props.account.privateKey);\n    }\n\n    render() {\n        if (this.props.isLogin) {\n            this.reloadAccount();\n        }\n\n        return (\n            <div className=\"login-container\">\n                {this.props.isLogin ? <Redirect to={`/wallet/${this.props.account.address}`} /> : false}\n                <div className=\"login-radio\">\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={MODE_PRIV_KEY} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Private Key</div>\n                    </label>\n\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={MODE_RES_KEY} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Restore Key</div>\n                    </label>\n                </div>\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React, { createRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport { connect } from 'react-redux';\nimport { login } from '../store/actions';\n\nconst PATH_LOGIN = 'path-login';\nconst PATH_SIGN = 'path-sign';\nconst PATH_OPER = 'path-operation';\n\nconst OPER_CREATE_ACCOUNT = 'oper-create-account';\nconst OPER_UPDATE_KEY = 'oper-update-key';\nconst OPER_TRANSFER = 'oper-transfer';\n\nconst SHOW_PRIVATE = 'show-private';\nconst SHOW_RESTORE = 'show-restore';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <span className=\"currency\">{bal.currency}</span>\n            <span className=\"amount\">{bal.amount}</span>\n        </li>\n    );\n}\n\nconst publicKey = (key) => {\n    return (\n        <li key={key.key}\n            onClick={() => onCopy(key.key)}>\n            {key.key}\n        </li>\n    )\n}\n\nconst key = (key) => {\n    if (!key) {\n        return false;\n    }\n    return (\n        <p onClick={() => onCopy(key)}>\n            {key}\n        </p>\n    );\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n        this.detailRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isDetailVisible: false,\n            isPrivVisible: false,\n            isResVisible: false,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : PATH_LOGIN,\n            operation: undefined\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === PATH_SIGN) {\n            this.setState({\n                isRedirect: true,\n                redirect: PATH_SIGN\n            })\n        }\n        else {\n            this.setState({\n                isRedirect: true,\n                redirect: PATH_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    renderRedirect() {\n        if (!this.props.account || !this.props.account.accountType\n            || !this.props.account.publicKeys || !this.props.account.balances\n            || !this.props.account.privateKey) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (!this.state.isRedirect) {\n            return false;\n        }\n\n        switch (this.state.redirect) {\n            case PATH_OPER:\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            case PATH_SIGN:\n                return <Redirect to={{\n                    pathname: '/sign',\n                    state: {\n                        json: undefined\n                    }\n                }} />\n            case PATH_LOGIN:\n                return <Redirect to='/login' />\n            default: return false;\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current && !this.state.isDetailVisible) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.detailRef.current && this.state.isDetailVisible) {\n            this.detailRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wallet-container\">\n                {this.renderRedirect()}\n                <div ref={this.walletRef}></div>\n                <h1>ACCOUNT INFO</h1>\n                <div className=\"wallet-info\">\n                    <span className=\"wallet-info-account\">\n                        <h2>{\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\")}</h2>\n                        <p onClick={() => onCopy(this.props.account.address)}>{this.props.account.address}</p>\n                    </span>\n                    <span className=\"wallet-info-detail\">\n                        <span className=\"wallet-amount\">\n                            <h2>BALANCE</h2>\n                            <ul>\n                                {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                            </ul>\n                        </span>\n                        <span className=\"wallet-more\"\n                            onClick={() => this.onMoreClick()}>\n                            <section>\n                                <p>MORE </p>\n                                <p className=\"more-down\" style={{ display: this.state.isDetailVisible ? \"none\" : \"inherit\" }}>▽</p>\n                                <p className=\"more-up\" style={{ display: this.state.isDetailVisible ? \"inherit\" : \"none\" }}>△</p>\n                            </section>\n                        </span>\n                        <div ref={this.detailRef}></div>\n                        <span className=\"wallet-more-detail\"\n                            style={{ display: this.state.isDetailVisible ? \"inherit\" : \"none\" }}>\n                            <div>\n                                <div className=\"wallet-pub-key\">\n                                    <h2>PUBLIC KEY</h2>\n                                    <ul>\n                                        {this.props.account.publicKeys ? this.props.account.publicKeys.map(x => publicKey(x)) : false}\n                                    </ul>\n                                </div>\n                                <div className=\"wallet-priv-key\">\n                                    <h2>PRIVATE KEY</h2>\n                                    {this.state.isPrivVisible ? key(this.props.account.privateKey) : false}\n                                    <label onClick={() => this.onShowClick(SHOW_PRIVATE)}>\n                                        {this.state.isPrivVisible ? \"- HIDE -\" : \"! SHOW !\"}\n                                    </label>\n                                </div>\n                                <div className=\"wallet-res-key\">\n                                    <h2>RESTORE KEY</h2>\n                                    {this.state.isResVisible ? key(this.props.account.restoreKey) : false}\n                                    <label onClick={() => this.onShowClick(SHOW_RESTORE)}>\n                                        {this.state.isResVisible ? \"- HIDE -\" : \"! SHOW !\"}\n                                    </label>\n                                </div>\n                            </div>\n                        </span>\n                    </span>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-sign\">\n                    <SelectButton onClick={() => this.onSelect(PATH_SIGN)} size=\"wide\">\n                        Sign / Send\n                    </SelectButton>\n                </div>\n            </div>\n        );\n    } s\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login({ address, privateKey, data })),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet);","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { version, key } from \"../text/hint.json\";\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n    state = {\n        privKey: \"\",\n        pubKey: \"\",\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        let privateKey = keypair.privKey.key + ':';\n        let publicKey = keypair.pubKey + ':';\n\n        switch (_type) {\n            case KEY_BTC:\n                privateKey += key.btc.priv;\n                publicKey += key.btc.pub;\n                break;\n            case KEY_ETHER:\n                privateKey += key.ether.priv;\n                publicKey += key.ether.pub;\n                break;\n            case KEY_STELLAR:\n                privateKey += key.stellar.priv;\n                publicKey += key.stellar.pub;\n                break;\n            default: throw new Error(\"Invalid key type\");\n        }\n\n        privateKey += '-' + version;\n        publicKey += '-' + version;\n\n        this.setState({\n            privKey: privateKey,\n            pubKey: publicKey\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\n\nfunction ResKeyGen() {\n    return <div>ResKeyGen</div>;\n}\n\nexport default ResKeyGen;","import React from 'react';\nimport './Help';\n\nclass Help extends React.Component {\n    render() {\n        return <div></div>;\n    }\n}\n\nexport default Help;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './AddButton.scss';\n\nclass AddButton extends React.Component {\n    render() {\n        return (\n            <button className=\"add-button\"\n                disabled={this.props.disabled ? true : false}\n                onClick={this.props.onClick}\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                    <path d=\"M0 16.67l2.829 2.83 9.175-9.339 9.167 9.339 2.829-2.83-11.996-12.17z\" />\n                </svg>\n            </button>\n        );\n    }\n}\n\nAddButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    diabled: PropTypes.bool\n}\n\nexport default AddButton;","import React from 'react';\nimport { Redirect } from 'react-router';\nimport copy from 'copy-to-clipboard';\nimport './NewOperation.scss';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nclass NewOperation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        }\n    }\n\n    onClick() {\n        this.setState({ isRedirect: true });\n    }\n\n    render() {\n        return (\n            <div className=\"json-container\">\n                <pre style={{\n                    display: 'block',\n                    padding: '10px 30px',\n                    margin: '0',\n                    overflow: 'visible',\n                }}\n                    onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                    {JSON.stringify(this.props.json, null, 4)}\n                </pre>\n                <div className=\"json-confirm\">\n                    <ConfirmButton onClick={() => this.onClick()}>ACCEPT</ConfirmButton>\n                </div>\n                {this.state.isRedirect ?\n                    <Redirect to={{\n                        pathname: '/sign',\n                        state: {\n                            json: this.props.json\n                        }\n                    }} /> : false}\n            </div>\n        );\n    }\n}\nexport default NewOperation;","import React, { createRef } from 'react';\nimport './CreateAccount.scss';\n\nimport AddButton from './buttons/AddButton';\nimport ConfirmButton from './buttons/ConfirmButton';\nimport InputBox from './InputBox';\nimport NewOperation from './NewOperation';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nconst key = (k) => {\n    return (\n        <li key={k}>\n            <span className=\"key\">{k.key}</span>\n            <span className=\"weight\">{k.weight}</span>\n        </li>\n    );\n}\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.jsonRef = createRef();\n        this.titleRef = createRef();\n\n        if (!this.props.hasOwnProperty('account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            created: undefined\n        }\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n        const account = this.props.account;\n\n        const keys = generator.createKeys(\n            this.state.keys.map(x =>\n                generator.formatKey(x.key, parseInt(x.weight))),\n            parseInt(this.state.threshold)\n        );\n\n        const amounts = generator.createAmounts(\n            this.state.amounts.map(x =>\n                generator.formatAmount(parseInt(x.amount), x.currency))\n        );\n\n        const createAccountsFact = generator.createCreateAccountsFact(\n            account.address,\n            [generator.createCreateAccountsItem(\n                keys, amounts\n            )]\n        );\n\n        const createAccounts = generator.createOperation(createAccountsFact, \"\");\n        createAccounts.addSign(account.privateKey);\n\n        this.setState({\n            created: createAccounts.dict()\n        });\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.jsonRef.current && this.state.created) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.created && (this.state.keys.length > 0 || this.state.amount.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"ca-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <ul>\n                        {account.balances ? account.balances.map(x => balance(x)) : false}\n                    </ul>\n                </div>\n                <div ref={this.createdRef}></div>\n                <div className=\"ca-input-wrap\">\n                    <div className=\"ca-keys\">\n                        <h2>KEYS</h2>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={this.state.threshold}\n                            onChange={(e) => this.onChangeThres(e)} />\n                        <ul>\n                            {this.state.keys ? this.state.keys.map(x => key(x)) : false}\n                        </ul>\n                        <span className=\"ca-key-adder\">\n                            <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                                value={this.state.publicKey}\n                                onChange={(e) => this.onChangePub(e)} />\n                            <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                                value={this.state.weight}\n                                onChange={(e) => this.onChangeWeight(e)} />\n                            <AddButton\n                                disabled={!(this.state.publicKey && this.state.weight) ? true : false}\n                                onClick={() => this.addKey()} />\n                        </span>\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <h2>AMOUNTS</h2>\n                        <ul>\n                            {this.state.amounts ? this.state.amounts.map(x => balance(x)) : false}\n                        </ul>\n                        <span className=\"ca-amount-adder\">\n                            <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"currency\"\n                                onChange={(e) => this.onChangeCurrency(e)}\n                                value={this.state.currency} />\n                            <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"amount\"\n                                value={this.state.amount}\n                                onChange={(e) => this.onChangeAmount(e)} />\n                            <AddButton\n                                disabled={!(this.state.currency && this.state.amount) ? true : false}\n                                onClick={() => this.addAmount()}>ADD</AddButton>\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <div ref={this.jsonRef}></div>\n                {this.state.created ?\n                    <NewOperation json={this.state.created} /> : false}\n            </div>\n        );\n    }\n}\nexport default CreateAccount;","import React, { createRef } from 'react';\nimport './UpdateKey.scss';\n\nimport InputBox from './InputBox';\nimport AddButton from './buttons/AddButton';\nimport ConfirmButton from './buttons/ConfirmButton';\nimport NewOperation from './NewOperation';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nconst key = (k) => {\n    return (\n        <li key={k}>\n            <span className=\"key\">{k.key}</span>\n            <span className=\"weight\">{k.weight}</span>\n        </li>\n    );\n}\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.jsonRef = createRef();\n        this.titleRef = createRef();\n\n        if (!this.props.hasOwnProperty('account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined\n        }\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n        const account = this.props.account;\n        const keys = generator.createKeys(\n            this.state.keys.map(x =>\n                generator.formatKey(x.key, parseInt(x.weight))),\n            parseInt(this.state.threshold)\n        );\n\n        const keyUpdaterFact = generator.createKeyUpdaterFact(\n            account.address, this.state.currency, keys\n        );\n\n        const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n        keyUpdater.addSign(account.privateKey);\n\n        this.setState({\n            created: keyUpdater.dict()\n        })\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.jsonRef.current && this.state.created) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.created && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"uk-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-address-wrap\">\n                    <h2>{account.address}</h2>\n                    <ul>{account.publicKeys ? account.publicKeys.map(x => key(x)) : false}</ul>\n                </div>\n                <div className=\"uk-amount-wrap\">\n                    <h2>BALANCE</h2>\n                    <ul>{account.balances ? account.balances.map(x => balance(x)) : false}</ul>\n                </div>\n                <div ref={this.createdRef}></div>\n                <div className=\"uk-input-wrap\">\n                    <div className=\"uk-keys\">\n                        <h2>NEW KEYS</h2>\n                        <div className=\"uk-keys-extra-input\">\n                            <InputBox\n                                size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeThres(e)} />\n                            <InputBox\n                                size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                                value={this.state.currency}\n                                onChange={(e) => this.onChangeCurrency(e)} />\n                        </div>\n\n                        <ul>\n                            {this.state.keys.map(x => key(x))}\n                        </ul>\n                        <span className=\"uk-key-adder\">\n                            <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                                value={this.state.publicKey}\n                                onChange={(e) => this.onChangePub(e)} />\n                            <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                                value={this.state.weight}\n                                onChange={(e) => this.onChangeWeight(e)} />\n                            <AddButton\n                                disabled={!(this.state.publicKey && this.state.weight) ? true : false}\n                                onClick={() => this.addKey()} />\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <div ref={this.jsonRef}></div>\n                {this.state.created ?\n                    <NewOperation json={this.state.created} /> : false}\n            </div>\n        );\n    }\n}\nexport default UpdateKey;","import React, { createRef } from 'react';\nimport './Transfer.scss';\n\nimport InputBox from './InputBox';\nimport AddButton from './buttons/AddButton';\nimport ConfirmButton from './buttons/ConfirmButton';\nimport NewOperation from './NewOperation';\n\nimport { Generator } from 'mitumc';\nimport { Redirect } from 'react-router-dom';\n\nconst balance = (amount) => {\n    return (\n        <li key={amount.currency}>\n            <span className=\"currency\">{amount.currency}</span>\n            <span className=\"amount\">{amount.amount}</span>\n        </li>\n    );\n}\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.jsonRef = createRef();\n        this.titleRef = createRef();\n\n        if (!this.props.hasOwnProperty('account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined\n        }\n    }\n\n    onClick() {\n        const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n        const account = this.props.account;\n        const amounts = generator.createAmounts(\n            this.state.amounts.map(x =>\n                generator.formatAmount(parseInt(x.amount), x.currency))\n        );\n\n        const transfersFact = generator.createTransfersFact(\n            account.address,\n            [generator.createTransfersItem(\n                this.state.address, amounts\n            )]\n        );\n\n        const transfers = generator.createOperation(transfersFact, \"\");\n        transfers.addSign(account.privateKey);\n\n        this.setState({\n            created: transfers.dict()\n        })\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.jsonRef.current && this.state.created) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.created && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current && !this.state.created) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"tf-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <ul>\n                        {account.balances ? account.balances.map(x => balance(x)) : false}\n                    </ul>\n                </div>\n                <div ref={this.createdRef}></div>\n                <div className=\"tf-input-wrap\">\n                    <div className=\"tf-address\">\n                        <h2>TRANSFER TO</h2>\n                        <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"account address\"\n                            value={this.state.address}\n                            onChange={(e) => this.onChangeAddress(e)} />\n                    </div>\n                    <div className=\"tf-amounts\">\n                        <h2>AMOUNTS</h2>\n                        <ul>\n                            {this.state.amounts.map(x => balance(x))}\n                        </ul>\n                        <span className=\"tf-amount-adder\">\n                            <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"currency\"\n                                onChange={(e) => this.onChangeCurrency(e)}\n                                value={this.state.currency} />\n                            <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"amount\"\n                                value={this.state.amount}\n                                onChange={(e) => this.onChangeAmount(e)} />\n                            <AddButton\n                                disabled={!(this.state.currency && this.state.amount) ? true : false}\n                                onClick={() => this.addAmount()} />\n                        </span>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <div ref={this.jsonRef}></div>\n                {this.state.created ?\n                    <NewOperation json={this.state.created} /> : false}\n            </div>\n        );\n    }\n}\nexport default Transfer;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/CreateAccount';\nimport UpdateKey from '../components/UpdateKey';\nimport Transfer from '../components/Transfer';\nimport { connect } from 'react-redux';\n\nconst OPER_CREATE_ACCOUNT = 'oper-create-account';\nconst OPER_UPDATE_KEY = 'oper-update-key';\nconst OPER_TRANSFER = 'oper-transfer';\n\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!this.props.hasOwnProperty('location') || !this.props.location\n            || !this.props.location.hasOwnProperty('state') || !this.props.location.state\n            || !this.props.location.state.hasOwnProperty('operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true,\n                account: undefined,\n                operation: undefined\n            }\n            return;\n        }\n\n        this.state = {\n            isRedirect: this.props.isLogin ? false : true,\n            account: this.props.account,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    render() {\n        let redirect;\n        if (this.props.isLogin) {\n            redirect = `/wallet/${this.props.account.address}`;\n        }\n        else {\n            redirect = '/login';\n        }\n\n        return (\n            <div className=\"oper-container\">\n                {this.state.isRedirect ? <Redirect to={redirect} /> : false}\n                {this.state.operation === OPER_CREATE_ACCOUNT ?\n                    <CreateAccount account={this.state.account} /> : (\n                        this.state.operation === OPER_UPDATE_KEY ?\n                            <UpdateKey account={this.state.account} /> : (\n                                this.state.operation === OPER_TRANSFER ?\n                                    <Transfer account={this.state.account} /> : <Redirect to={redirect} />\n                            ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport ConfirmButton from '../components/buttons/ConfirmButton';\nimport SmallButton from '../components/buttons/SmallButton';\n\nimport axios from 'axios';\n\nimport { Signer } from 'mitumc';\nimport { connect } from 'react-redux';\n\n\nconst CLEAR_DOWNLOAD = 'clear-download';\nconst CLEAR_RESPONSE = 'clear-response';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst download = (json) => {\n    if (!json || !json.hasOwnProperty('hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('Could not get url');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nconst broadcast = async (operation) => {\n    if (!operation || !operation.hasOwnProperty('hash') || !operation.hasOwnProperty('memo')\n        || !operation.hasOwnProperty('fact') || !operation.hasOwnProperty('fact_signs')\n        || !operation.hash || !operation.fact || !operation.fact_signs) {\n        return undefined;\n    }\n\n    return await axios.post(process.env.REACT_APP_API_BROADCAST, operation);\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.responseRef = createRef();\n        this.jsonRef = createRef();\n\n        if (!this.props.hasOwnProperty('location') || !this.props.location.hasOwnProperty('state')\n            || !this.props.location || !this.props.location.state || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true\n            }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n            json: this.props.location.state.hasOwnProperty('json') ? this.props.location.state.json : {},\n\n            jsonSelf: \"\",\n            response: undefined,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    clear(clr) {\n        if (clr === CLEAR_DOWNLOAD) {\n            this.setState({\n                download: undefined,\n                filename: \"\",\n            });\n        }\n        else if (clr === CLEAR_RESPONSE) {\n            this.setState({\n                response: undefined\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.responseRef.current && this.state.response) {\n            this.responseRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.jsonRef.current && (this.state.jsonSelf || this.state.json)) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current && !this.state.response) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {this.state.jsonSelf === \"\"\n                    ? (\n                        this.state.json\n                            ? (\n                                <pre style={preStyle}\n                                    onClick={() => onCopy(JSON.stringify(this.state.json, null, 4))}>\n                                    {JSON.stringify(this.state.json, null, 4)}\n                                </pre>\n                            )\n                            : false\n                    )\n                    : <textarea type=\"text\" onChange={(e) => this.onSelfChange(e)} />\n                }\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        const json = this.state.json;\n\n        try {\n            reader.onload = () => {\n                const parsed = JSON.parse(reader.result);\n                if (!parsed.hasOwnProperty('hash') || !parsed.hasOwnProperty('fact')\n                    || !parsed.hasOwnProperty('fact_signs') || !parsed.hasOwnProperty('memo')\n                    || !parsed.hash || !parsed.fact || !parsed.fact_signs) {\n                    alert('Invalid format!\\nOnly operation json file can be imported');\n                }\n                else {\n                    this.setState({\n                        json: parsed\n                    });\n                    this.clear(CLEAR_DOWNLOAD);\n                    this.clear(CLEAR_RESPONSE);\n                }\n            };\n            reader.readAsText(file, \"utf-8\");\n        } catch (e) {\n            this.setState({\n                json: json\n            });\n            alert('Invalid format!\\nOnly operation json file can be imported');\n        }\n    }\n\n    onClickImport() {\n        if (this.state.jsonSelf) {\n            this.clear(CLEAR_DOWNLOAD);\n            this.clear(CLEAR_RESPONSE);\n        }\n\n        this.setState({\n            jsonSelf: \"\",\n            download: undefined,\n            filename: \"\"\n        });\n    }\n\n    onClickSelf() {\n        if (!this.state.jsonSelf) {\n            this.clear(CLEAR_DOWNLOAD);\n            this.clear(CLEAR_RESPONSE);\n        }\n\n        this.setState({\n            jsonSelf: \"{\\n}\",\n            download: undefined,\n            filename: \"\"\n        })\n    }\n\n    onSelfChange(e) {\n        this.setState({\n            jsonSelf: e.target.value ? e.target.value : \"{\\n}\"\n        })\n    }\n\n    onClickSend() {\n        let target = {};\n\n        if (this.state.jsonSelf) {\n            target = JSON.parse(this.state.jsonSelf);\n        }\n        else if (this.state.json) {\n            target = this.state.json;\n        }\n        else {\n            this.setState({\n                response: undefined\n            });\n        }\n\n        if (!target.hasOwnProperty('hash') || !target.hasOwnProperty('fact')\n            || !target.hasOwnProperty('fact_signs') || !target.hasOwnProperty('memo')) {\n            this.setState({\n                response: undefined\n            });\n            return;\n        }\n\n        broadcast(target).then(\n            res => {\n                this.setState({\n                    status: res.request.status,\n                    response: res.data\n                });\n            }\n        ).catch(e => {\n            this.setState({\n                status: e.response.status,\n                response: e.response.data\n            })\n            alert('Could not send operation');\n        });\n    }\n\n    onClickSign() {\n        this.clear(CLEAR_RESPONSE);\n        this.clear(CLEAR_DOWNLOAD);\n\n        let target = this.state.jsonSelf\n            ? JSON.parse(this.state.jsonSelf)\n            : (\n                this.state.json ? this.state.json : {}\n            );\n\n        if (!target.hasOwnProperty('hash') || !target.hasOwnProperty('fact_signs')\n            || !target.hasOwnProperty('fact') || !target.hasOwnProperty('memo')) {\n            return;\n        }\n\n        const signer = new Signer('mitum', this.props.account.privateKey);\n\n        try {\n            this.setState({\n                json: signer.signOperation(target),\n                jsonSelf: \"\"\n            });\n            alert('Success!');\n        }\n        catch (e) {\n            alert('Could not add sign to operation');\n        }\n    }\n\n    _createFile(target) {\n        if (!target || !target.hasOwnProperty('hash') || !target.hash) {\n            throw new Error('Invalid json');\n        }\n        this.setState({\n            download: download(target),\n            filename: target.hash\n        });\n    }\n\n    onCreateFile() {\n        try {\n            if (this.state.jsonSelf) {\n                this._createFile(JSON.parse(this.state.jsonSelf));\n                alert('Success!');\n            }\n            else if (this.state.json) {\n                this._createFile(this.state.json);\n                alert('Success!');\n            }\n            else {\n                this.setState({\n                    download: undefined\n                })\n            }\n        } catch (e) {\n            alert('Could not create file!');\n        }\n    }\n\n    render() {\n        const containerStyle = {\n            height: !(this.state.response\n                || this.state.jsonSelf\n                || this.state.json) ? \"130vh\" : \"100%\"\n        };\n\n        return (\n            <div className=\"sign-container\" style={containerStyle}>\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.createdRef}></div>\n                <h1>SIGN / SEND OPERATION</h1>\n                <div className=\"sign-account\">\n                    <p>{this.props.account.address}</p>\n                </div>\n                <div className=\"sign-operation\">\n                    <span className=\"sign-switch\">\n                        <SelectButton onClick={() => this.onClickImport()} size=\"big\">IMPORTED</SelectButton>\n                        <SelectButton onClick={() => this.onClickSelf()} size=\"big\">WRITTEN</SelectButton>\n                    </span>\n                    <div ref={this.jsonRef}></div>\n                    {this.jsonView()}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                        <SmallButton visible={true} onClick={() => this.onCreateFile()} >to json file</SmallButton>\n                    </div>\n                    {this.state.download ? <a target=\"_blank\" download={`${this.state.filename}.json`}\n                        href={this.state.download} rel=\"noreferrer\">Download</a> : false}\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton onClick={() => this.onClickSend()}>SEND NOW</ConfirmButton>\n                    <ConfirmButton onClick={() => this.onClickSign()}>ADD SIGN</ConfirmButton>\n                </div>\n                <div ref={this.responseRef}></div>\n                {this.state.response\n                    ?\n                    <div className=\"sign-response\">\n                        <span>{(this.state.status === 200 ? \"Broadcast Success\" : \"Broadcast Fail\") + `: ${this.state.status}`}</span>\n                        <pre\n                            style={preStyle}\n                            onClick={() => onCopy(this.state.response)}>\n                            {JSON.stringify(this.state.response, null, 4)}\n                        </pre>\n                    </div> : false}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Sign);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\n\nfunction Navigation({isLogin}) {\n    return (\n        <div className=\"nav\">\n            <Link className=\"side nav-title\" to=\"/\">\n                <p>MITUM WEB WALLET</p>\n            </Link>\n            <Link className=\"main\" to=\"/login\">\n                <p>OPEN WALLET</p>\n            </Link>\n            <Link className=\"main\" to=\"/key-generate\">\n                <p>GENERATE KEYPAIR</p>\n            </Link>\n            <Link className=\"main\" to=\"/res-key-generate\">\n                <p>GENERATE RESTORE KEY</p>\n            </Link>\n            {isLogin\n                ? (\n                    <Link className=\"side nav-logout\" to=\"/logout\">\n                        <p>SIGN OUT</p>\n                    </Link>\n                ) : false}\n            <Link className=\"side nav-help\" to=\"/help\">\n                <p>HELP</p>\n            </Link>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n    }\n    \n    render() {\n        return !this.props.isLogin\n            ? <Redirect to=\"/login\" />\n            : <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\nconst crypto = require('crypto');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type){\n        if(type == 'unknown'){\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else{\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w){\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold){\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for(var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n        \n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n        \n        const _keys = [];\n        for(var i = 0; i < this.keys.length; i++){\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch(type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', {canonical: true}).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length-1));\n        \n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n        \n        const sig = ec.sign(_msg, sk, 'hex', {canonical: true}).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4+rlen);\n        const slen = sig[5+rlen];\n        const s = sig.slice(6+rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n    \n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n    \n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if(_type == 'btc'){\n        return _btckp();\n    }\n    else if(_type == 'ether') {\n        return _ethkp();\n    }\n    else if(_type == 'stellar') {\n        return _stlkp();\n    }\n    else{\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if(_type == ''){\n        if(_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch(type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n    return null;\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};","const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst {Uint64BE} = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if(this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2)? 1 : Math.ceil((Math.log(this.num)/Math.log(2))/8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if(this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if(this.byteSize() > 4){\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4-this.byteSize());\n        \n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n        \n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if(this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf){\n        const _buf = Buffer.from(buf);\n        for(var i = 0; i < _buf.length / 2; i++){\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if(idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if(hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx+1);\n    \n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n    \n    if(idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n    \n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change format\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    const iso = date.toISOString();\n    return iso.substring(0,10)\n            .concat(\n                ' ',\n                iso.substring(11, 23),\n                ' ',\n                '+0000',\n                ' UTC'\n            )\n};\n\nconst ISOToUTC = (iso) => {\n    return iso.substring(0,10)\n            .concat(\n                ' ',\n                iso.substring(11, 23),\n                ' ',\n                '+0000',\n                ' UTC'\n            )\n};\n\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for(var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};"],"sourceRoot":""}