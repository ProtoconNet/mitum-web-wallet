{"version":3,"sources":["../../../wyuinche/mitum-js-util/lib/util.js","../../../wyuinche/mitum-js-util/lib/hint.js","../../../wyuinche/mitum-js-util/lib/seal.js","../../../wyuinche/mitum-js-util/lib/sign.js","../../../wyuinche/mitum-js-util/lib/constant.js","../../../wyuinche/mitum-js-util/lib/operation.js","../../../wyuinche/mitum-js-util/index.js","lib/Account.js","text/mode.js","lib/History.js","store/actions/index.js","store/reducers/LoginReducer.js","lib/Url.js","store/reducers/OperationReducer.js","store/reducers/QueueReducer.js","lib/Queue.js","store/reducers/index.js","store/store.js","image/logo_trans.png","views/Home.js","components/buttons/SmallButton.js","components/InputBox.js","components/buttons/ConfirmButton.js","components/PrivateKeyLoginBox.js","components/RestoreKeyLoginBox.js","views/Login.js","components/buttons/SelectButton.js","components/modals/PublicKeyModal.js","components/modals/PendingModal.js","lib/Validation.js","views/Wallet.js","views/KeyGen.js","views/ResKeyGen.js","views/Help.js","components/modals/OperationConfirm.js","components/infos/Keys.js","components/infos/SubInfo.js","components/infos/Balances.js","components/adders/KeyAdder.js","components/adders/AmountAdder.js","components/operations/CreateAccount.js","components/adders/ExtraAdder.js","components/operations/UpdateKey.js","components/operations/Transfer.js","views/Operation.js","views/Sign.js","components/Navigation.js","views/Logout.js","components/Footer.js","components/modals/LogoutConfirm.js","views/Response.js","views/UpdateKeyLoad.js","App.js","reportWebVitals.js","index.js","../../../wyuinche/mitum-js-util/lib/key.js"],"names":["Xconst","require","crypto","jsSHA3","Uint64BE","BigInteger","big","this","BigInt","num","value","Math","ceil","log","byteSize","_num","parseInt","absValue","_reverse","toBuffer","_buffer","Buffer","alloc","_off","writeUIntLE","concat","_buf","writeUIntBE","buf","from","i","length","tmp","ISOToUTC","iso","t","indexOf","z","substring","module","exports","_hint","type","VERSION","parseHinted","hinted","idx","parsed","hintless","hint","getTypeFromHint","lastIndexOf","getTimeStamp","Date","dateToUTC","date","toISOString","concatObjectsToBuffer","arr","concated","buffer","sha256","msg","createHash","update","digest","sum256","sha3_256","create","MC_ADDRESS","MC_TRANSFERS_OP_FACT","MC_TRANSFERS_OP","MC_KEY","MC_KEYS","MC_CREATE_ACCOUNTS_OP_FACT","MC_CREATE_ACCOUNTS_OP","MC_KEYUPDATER_OP_FACT","MC_KEYUPDATER_OP","MC_FEE_OP_FACT","MC_FEE_OP","MC_ACCOUNT","MC_NODE_INFO","MC_HAL","MC_PROBLEM","MC_ACCOUNT_VALUE","MC_OP_VALUE","MC_GENESIS_CURRENCIES_OP_FACT","MC_GENESIS_CURRENCIES_OP","MC_AMOUNT","MC_AMOUNT_STATE","MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS","MC_CREATE_ACCOUNTS_SINGLE_AMOUNT","MC_TRANSFERS_ITEM_MULTI_AMOUNTS","MC_TRNASFERS_ITEM_SINGLE_AMOUNT","MC_CURRENCY_REGISTER_OP_FACT","MC_CURRENCY_REGISTER_OP","MC_CURRENCY_DESIGN","MC_NIL_FEEER","MC_FIXED_FEEER","MC_RATIO_FEEER","MC_CURRENCY_POLICY_UPDATER_OP_FACT","MC_CURRENCY_POLICY_UPDATER_OP","MC_CURRENCY_POLICY","JSON","BSON","STRING_ADDRESS","STELLAR_PRIVKEY","STELLAR_PBLCKEY","BTC_PRIVKEY","BTC_PBLCKEY","ETHER_PRIVKEY","ETHER_PBLCKEY","INIT_BALLOT","PROPOSAL","SIGN_BALLOT","ACCEPT_BALLOT","INIT_BALLOT_FACT","PROPOSAL_FACT","SIGN_BALLOT_FACT","ACCEPT_BALLOT_FACT","VOTEPROOF","BLOCK_V0","BLOCK_MANIFEST_V0","BLOCK_CONSENSUS_INFO_V0","BLOCK_SUFFRAGE_INFO_V0","BASE_FACT_SIGN","SEAL","BASE_FIXEDTREE_NODE","FIXEDTREE","OP_FIXEDTREE_NODE","BASE_OP_REASON","STETE_V0","STATE_BYTES_VALUE","STATE_DURATION_VALUE","STATE_HINTED_VALUE","STATE_NUMBER_VALUE","STATE_SLICE_VALUE","STATE_STRING_VALUE","BASE_NODE_V0","NODE_INFO_V0","LOCALFS_BLOCKDATA","BASE_BLOCKDATAMAP","BLOCKDATA_WRITER","PROBLEM","Xoper","Xsign","Xutil","Xhint","Xkey","bs58","Generator","netID","_id","key","weight","cid","keys","threshold","ks","_keys","push","Key","Keys","_toKeys","amts","_amounts","Amount","_toAmounts","_type","CreateAccountsItem","receiver","TransfersItem","sender","items","CreateAccountsFact","target","KeyUpdaterFact","TransfersFact","fact","memo","Operation","sk","opers","keypair","getKeypair","signedAt","bsignedAt","bsigner","getPublicKey","bopers","hash","bodyHash","signature","sign","seal","encode","body_hash","signer","signed_at","operations","dict","JSONParser","toJSONString","stringify","generateFile","fName","writeFile","error","console","_factSignToBuffer","_fact_sign","bsign","decode","bat","Signer","signKey","f_oper","before","parse","fs","readFileSync","undefined","after","factHash","bfactHash","factSign","newFactSign","bfact_sg","_fact_signs","_factSignsToBuffer","bmemo","FactSign","at","fact_sign","hintedKey","BTCKeypair","ETHKeypair","StellarKeypair","e","_VERSION","bbig","tight","bcid","amount","toString","currency","Address","addr","Item","amounts","bkeys","bamounts","item","breceiver","OperationFact","token","_generateHash","btoken","bsender","bitems","btarget","fact_signs","_generateFactSign","bhash","oper","toKeypair","Account","priv","data","address","privateKey","resKey","publicKeys","_embedded","map","x","balances","balance","accountType","OPER_CREATE_ACCOUNT","OPER_UPDATE_KEY","OPER_TRANSFER","OPER_DEFAULT","PAGE_LOGIN","PAGE_OPER","SHOW_PRIVATE","SHOW_RESTORE","TYPE_CREATE_ACCOUNT","operation","create_account","TYPE_UPDATE_KEY","update_key","TYPE_TRANSFER","transfer","History","history","me","inState","in_state","confirmedAt","confirmed_at","setItems","account","y","LOGIN","LOGOUT","SET_HISTORY","CLEAR_HISTORY","SET_OPERATION","SET_RESPONSE","ENQUEUE_OPERATION","DEQUEUE_OPERATION","CLEAR_QUEUE","login","restoreKey","logout","clearHistory","setOperation","json","setResponse","isBroadcast","isStateIn","res","status","initialState","isLogin","isLoadHistory","download","Object","prototype","hasOwnProperty","call","file","File","alert","URL","createObjectURL","mode","filename","queue","shift","isEmpty","rootReducer","combineReducers","state","action","actions","enque","deque","clear","store","createStore","Home","props","isRedirect","setState","className","to","onClick","src","logo_trans","alt","React","Component","SmallButton","style","display","visible","disabled","children","InputBox","size","name","autoComplete","onChange","placeholder","useCopy","copy","ConfirmButton","opacity","PrivateKeyLoginBox","onChangeAddress","label","onChangePrivate","onLogin","trim","RestoreKeyLoginBox","getAccountInformation","a","axios","get","process","getAccountHistory","Login","isPriv","isActive","pubKey","then","setHistory","catch","pubKeys","signIn","radio","document","querySelector","checked","renderForm","withRouter","connect","dispatch","histories","splitHistories","_i","j","_j","_z","confirmation","direction","SelectButton","PublicKeyModal","isOpen","onClose","k","PendingModal","broadcastedAt","job","isOperation","signatures","isStateValid","location","sleep","ms","Promise","resolve","setTimeout","titleStyle","flexDirection","alignItems","justifyContent","width","margin","padding","lineStyle","border","verticalAlign","title","content","textAlign","fontWeight","fontSize","getFactInState","Wallet","scrollToAccount","walletRef","current","scrollIntoView","behavior","createRef","isPubModalOpen","isPendModalOpen","isQueueUpdate","redirect","isResult","request","deleteJob","finally","isDetailVisible","isPrivVisible","isResVisible","pathname","checkInState","refresh","renderRedirect","ref","id","openPubModal","bal","onSelect","hist","openPendModal","closePubModal","closePendModal","KEY_ETHER","KEY_STELLAR","KeyGen","privKey","publicKey","btc","pub","ether","stellar","Error","version","getKey","ResKeyGen","Help","broadcast","post","OperationConfirm","setResult","response","href","rel","onSend","Balances","labeled","KeyAdder","onKeyChange","onWeightChange","onAdd","isAddDisabled","useThres","thres","onThresChange","AmountAdder","onCurrencyChange","onAmountChange","CreateAccount","scrollToInput","createdRef","titleRef","isModalOpen","generator","createKeys","formatKey","createAmounts","formatAmount","createAccountsFact","createCreateAccountsFact","createCreateAccountsItem","createAccounts","createOperation","addSign","created","setJson","onChangePub","onChangeWeight","onChangeThres","addKey","onChangeCurrency","onChangeAmount","addAmount","closeModal","ExtraAdder","UpdateKey","keyUpdaterFact","createKeyUpdaterFact","keyUpdater","Transfer","transfersFact","createTransfersFact","createTransfersItem","transfers","preStyle","overflow","whiteSpace","getOperationFromType","Sign","scrollToJSON","jsonRef","isJsonOpen","infoRef","sigs","files","reader","FileReader","onload","result","readAsText","signOperation","sig","openJSON","jsonView","importJSON","onClickSend","onClickSign","isClose","Navigation","rand","check","close","Logout","signOut","clearQueue","Footer","LogoutConfirm","onLogout","keyHash","Response","isSignOut","addJob","clearJson","renderResponse","UpdateKeyLoad","counter","getResult","_hash","_res","reason","hs","rs","broad","getResponse","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById","bs58check","eccrypto","ec","compare","BaseKey","w","karr","sortedkeys","sort","bthreshold","Keypair","_generatePublicKey","_msg","getPrivate","canonical","toDER","_sk","_decode","slice","keyFromPrivate","getPublicCompressed","rlen","r","slen","s","brlen","little","getPublic","fromSecret","_pk","genKeyPair","_hs","checksum","subarray","_btckp","random","secret","_key"],"mappings":"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","file":"static/js/main.b6465d37.chunk.js","sourcesContent":["const Xconst = require('./constant');\nconst crypto = require('crypto');\nconst jsSHA3 = require('js-sha3');\nconst { Uint64BE } = require('int64-buffer');\n\n/**\n * @class\n * Contains big number and Converts number to Buffer.\n * @property {BigInt} big - number in BigInt\n * @property {number} num - number in Number\n */\nclass BigInteger {\n    /**\n     * @constructor\n     * @param {number} big - number\n     */\n    constructor(big) {\n        this.big = BigInt(big);\n        this.num = big;\n    }\n\n    /**\n     * @property\n     * Returns big in number.\n     * @return {number} - big\n     */\n    get value() {\n        return this.num;\n    }\n\n    /**\n     * @property\n     * Returns absolute value of big.\n     * @return {BigInt} - abs(big)\n     */\n    get absValue() {\n        if (this.big < 0) { return BigInt(-this.value); }\n        else { return this.big; }\n    }\n\n    byteSize() {\n        return (this.num < 2) ? 1 : Math.ceil((Math.log(this.num) / Math.log(2)) / 8);\n    }\n\n    /**\n     * @method\n     * Returns 8-length Buffer of big by big-endian.\n     * @return {Buffer} - 8-length big-endian Buffer of big\n     */\n    buffer() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _num = new Uint64BE(parseInt(this.absValue));\n        return this._reverse(_num.toBuffer());\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by little-endian.\n     * @return {Buffer} - tight-length little-endian Buffer of big\n     */\n    little() {\n        if (this.byteSize() > 4) {\n            throw '[ERROR] Buffer overflow!'\n        }\n        var _buffer = Buffer.alloc(this.byteSize());\n        const _off = Buffer.alloc(4 - this.byteSize());\n\n        _buffer.writeUIntLE(this.num, 0, this.byteSize());\n        _buffer = this._reverse(_buffer);\n\n        return Buffer.concat([_buffer, _off]);\n    }\n\n    /**\n     * @method\n     * Returns tight-length Buffer of big by big-endian.\n     * @return {Buffer} - tight-length big-endian Buffer of big\n     */\n    tight() {\n        if (this.byteSize() > 8) {\n            throw '[ERROR] Buffer overflow!';\n        }\n        const _buf = Buffer.alloc(this.byteSize());\n        _buf.writeUIntBE(this.num, 0, this.byteSize());\n        return _buf;\n    }\n\n    /**\n     * @method\n     * Returns reversed Buffer.\n     * @param {Buffer} buf - Buffer object to reverse\n     * @return {Buffer} - Reversed Buffer\n     */\n    _reverse(buf) {\n        const _buf = Buffer.from(buf);\n        for (var i = 0; i < _buf.length / 2; i++) {\n            const tmp = _buf[i];\n            _buf[i] = _buf[_buf.length - 1 - i];\n            _buf[_buf.length - 1 - i] = tmp;\n        }\n        return _buf;\n    }\n}\n\n/**\n * @function\n * Add mitum-currency version to hint type.\n * @param {string} type - mitum or mitum-currency type\n * @return {string} - '[type]-[version]'\n */\nconst _hint = (type) => {\n    return type + '-' + Xconst.VERSION;\n}\n\n/**\n * @function\n * Parses hinted address or hinted key.\n * @param {string} hinted - Hinted addrss/key\n * @return {object} - Parsing result # object{hintless, hint}\n */\nconst parseHinted = (hinted) => {\n    const idx = hinted.indexOf(':');\n    const parsed = {};\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hinted format';\n    }\n    else if (hinted.indexOf('-') === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    parsed.hintless = hinted.substring(0, idx);\n    parsed.hint = hinted.substring(idx + 1);\n\n    return parsed;\n};\n\n/**\n * @function\n * Extracts type from hint # hint: [type]-[version]\n * @param {string} hint - '[type]-[version]' format hint\n * @return {string} - mitum or mitum-currency hint type\n */\nconst getTypeFromHint = (hint) => {\n    const idx = hint.lastIndexOf('-');\n\n    if (idx === -1) {\n        throw '[ERROR] Invalid hint format';\n    }\n\n    return hint.substring(0, idx);\n};\n\n/**\n * @function\n * Returns timestamp as Date.\n * @return {Date} - Timestamp in Date\n */\nconst getTimeStamp = () => {\n    return new Date();\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {Date} date - Date object to change\n * @return {string} - UTC-format date string\n */\nconst dateToUTC = (date) => {\n    return ISOToUTC(date.toISOString());\n};\n\n/**\n * @function\n * Returns UTC formatted date.\n * Time Zone Offset must be +0000.\n * @param {string} iso - iso string to change\n * @return {string} - UTC-format date string\n */\nconst ISOToUTC = (iso) => {\n    const t = iso.indexOf('T');\n    const z = iso.indexOf('Z');\n\n    return iso.substring(0, t)\n        .concat(\n            ' ',\n            iso.substring(t + 1, z),\n            ' ',\n            '+0000',\n            ' UTC'\n        );\n}\n/**\n * @function\n * Concatenates Buffers in array then returns concatenated Buffer.\n * @param {object} arr - Array that each element is an object implementing buffer() method\n * @return {Buffer} - Concatenated Buffer\n */\nconst concatObjectsToBuffer = (arr) => {\n    let concated = Buffer.alloc(0);\n\n    for (var i = 0; i < arr.length; i++) {\n        concated = Buffer.concat([concated, arr[i].buffer()]);\n    }\n\n    return concated;\n}\n\n/**\n * @function\n * Returns sha2-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sha256 = (msg) => {\n    return crypto.createHash('sha256').update(msg).digest();\n};\n\n/**\n * @function\n * Returns sha3-256 hash of msg.\n * @param {Buffer} msg - Message to hash\n * @return {Buffer} - Hash digest of msg\n */\nconst sum256 = (msg) => {\n    return Buffer.from(jsSHA3.sha3_256.create().update(msg).digest());\n};\n\nmodule.exports = {\n    BigInteger,\n    _hint,\n    parseHinted,\n    getTypeFromHint,\n    getTimeStamp,\n    dateToUTC,\n    ISOToUTC,\n    concatObjectsToBuffer,\n    sha256,\n    sum256\n};","/* mitum-currency hint */\nexports.MC_ADDRESS = \"mca\";\nexports.MC_TRANSFERS_OP_FACT = \"mitum-currency-transfers-operation-fact\";\nexports.MC_TRANSFERS_OP = \"mitum-currency-transfers-operation\";\nexports.MC_KEY = \"mitum-currency-key\";\nexports.MC_KEYS = \"mitum-currency-keys\";\nexports.MC_CREATE_ACCOUNTS_OP_FACT = \"mitum-currency-create-accounts-operation-fact\";\nexports.MC_CREATE_ACCOUNTS_OP = \"mitum-currency-create-accounts-operation\";\nexports.MC_KEYUPDATER_OP_FACT = \"mitum-currency-keyupdater-operation-fact\";\nexports.MC_KEYUPDATER_OP = \"mitum-currency-keyupdater-operation\";\nexports.MC_FEE_OP_FACT = \"mitum-currency-fee-operation-fact\";\nexports.MC_FEE_OP = \"mitum-currency-fee-operation\";\nexports.MC_ACCOUNT = \"mitum-currency-account\";\nexports.MC_NODE_INFO = \"mitum-currency-node-info\";\nexports.MC_HAL = \"mitum-currency-hal\";\nexports.MC_PROBLEM = \"mitum-currency-problem\";\nexports.MC_ACCOUNT_VALUE = \"mitum-currency-account-value\";\nexports.MC_OP_VALUE = \"mitum-currency-operation-value\";\nexports.MC_GENESIS_CURRENCIES_OP_FACT = \"mitum-currency-genesis-currencies-operation-fact\";\nexports.MC_GENESIS_CURRENCIES_OP = \"mitum-currency-genesis-currencies-operation\";\nexports.MC_AMOUNT = \"mitum-currency-amount\";\nexports.MC_AMOUNT_STATE = \"mitum-currency-amount-state\";\nexports.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS = \"mitum-currency-create-accounts-multiple-amounts\";\nexports.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT = \"mitum-currency-create-accounts-single-amount\";\nexports.MC_TRANSFERS_ITEM_MULTI_AMOUNTS = \"mitum-currency-transfers-item-multi-amounts\";\nexports.MC_TRNASFERS_ITEM_SINGLE_AMOUNT = \"mitum-currency-transfers-item-single-amount\";\nexports.MC_CURRENCY_REGISTER_OP_FACT = \"mitum-currency-currency-register-operation-fact\";\nexports.MC_CURRENCY_REGISTER_OP = \"mitum-currency-currency-register-operation\";\nexports.MC_CURRENCY_DESIGN = \"mitum-currency-currency-design\";\nexports.MC_NIL_FEEER = \"mitum-currency-nil-feeer\";\nexports.MC_FIXED_FEEER = \"mitum-currency-fixed-feeer\";\nexports.MC_RATIO_FEEER = \"mitum-currency-ratio-feeer\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP_FACT = \"mitum-currency-currency-policy-updater-operation-fact\";\nexports.MC_CURRENCY_POLICY_UPDATER_OP = \"mitum-currency-currency-policy-updater-operation\";\nexports.MC_CURRENCY_POLICY = \"mitum-currency-currency-policy\";\n\n/* mitum hint */\nexports.JSON = \"json-encoder0101\";\nexports.BSON = \"bson-encoder\";\nexports.STRING_ADDRESS = \"sa\";\nexports.STELLAR_PRIVKEY = \"stellar-priv\";\nexports.STELLAR_PBLCKEY = \"stellar-pub\";\nexports.BTC_PRIVKEY = \"btc-priv\";\nexports.BTC_PBLCKEY = \"btc-pub\";\nexports.ETHER_PRIVKEY = \"ether-priv\";\nexports.ETHER_PBLCKEY = \"ether-pub\";\nexports.INIT_BALLOT = \"init-ballot\";\nexports.PROPOSAL = \"proposal\";\nexports.SIGN_BALLOT = \"sign-ballot\";\nexports.ACCEPT_BALLOT = \"accept-ballot\";\nexports.INIT_BALLOT_FACT = \"init-ballot-fact\";\nexports.PROPOSAL_FACT = \"proposal-fact\";\nexports.SIGN_BALLOT_FACT = \"sign-ballot-fact\";\nexports.ACCEPT_BALLOT_FACT = \"accept-ballot-fact\";\nexports.VOTEPROOF = \"voteproof\";\nexports.BLOCK_V0 = \"block\";\nexports.BLOCK_MANIFEST_V0 = \"block-manifest\";\nexports.BLOCK_CONSENSUS_INFO_V0 = \"block-consensus-info\";\nexports.BLOCK_SUFFRAGE_INFO_V0 = \"block-suffrage-info\";\nexports.BASE_FACT_SIGN = \"base-fact-sign\";\nexports.SEAL = \"seal\";\nexports.BASE_FIXEDTREE_NODE = \"base-fixedtree-node\";\nexports.FIXEDTREE = \"fixedtree\";\nexports.OP_FIXEDTREE_NODE = \"operation-fixedtree-node\";\nexports.BASE_OP_REASON = \"base-operation-reason\";\nexports.STETE_V0 = \"stete\";\nexports.STATE_BYTES_VALUE = \"state-bytes-value\";\nexports.STATE_DURATION_VALUE = \"state-duration-value\";\nexports.STATE_HINTED_VALUE = \"state-hinted-value\";\nexports.STATE_NUMBER_VALUE = \"state-number-value\";\nexports.STATE_SLICE_VALUE = \"state-slice-value\";\nexports.STATE_STRING_VALUE = \"state-string-value\";\nexports.BASE_NODE_V0 = \"base-node\";\n// exports.HASH_BYTES = \"0180\";\n// exports.HASH_SHA256 = \"0181\";\n// exports.HASH_SHA512 = \"0182\";\nexports.NODE_INFO_V0 = \"node-info\";\nexports.LOCALFS_BLOCKDATA = \"localfs-blockdata\";\nexports.BASE_BLOCKDATAMAP = \"base-blockdatamap\";\nexports.BLOCKDATA_WRITER = \"blockdata-writer\";\n\nexports.PROBLEM = \"mitum-problem\";","/* SDK module */\nconst Xoper = require('./operation');\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @function\n * Generate Keys object with key list.\n * @param {object} ks - Array that each element is simple key object # key{key, weight}\n * @param {number} threshold - Keys threshold\n * @return {Xkey.Keys} - Generate Keys object\n */\nconst _toKeys = (ks, threshold) => {\n    const _keys = [];\n\n    for (var i = 0; i < ks.length; i++) {\n        _keys.push(\n            new Xkey.Key(\n                ks[i].key,\n                ks[i].weight\n            )\n        )\n    }\n\n    const keys = new Xkey.Keys(\n        _keys,\n        threshold,\n    );\n\n    return keys;\n};\n\n/**\n * @function\n * Generate Amount object list with amounts.\n * @param {object} amts - Array that each element is simple amount object # amount{big, cid}\n * @return {object} - Amount obejct list\n */\nconst _toAmounts = (amts) => {\n    const _amounts = [];\n\n    for (var i = 0; i < amts.length; i++) {\n        _amounts.push(\n            new Xoper.Amount(\n                amts[i].big,\n                amts[i].cid\n            )\n        );\n    }\n\n    return _amounts;\n};\n\n/**\n * @class\n * Generates all objects that are necessary to create operations and seals.\n * @property {string} netID - Network ID\n */\nclass Generator {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     */\n    constructor(netID) {\n        this.netID = netID;\n    }\n\n    /**\n     * @property\n     * @return {string} - Network ID\n     */\n    get id() {\n        return this.netID;\n    }\n\n    /**\n     * @method\n     * Set new network ID.\n     * @param {string} _id - new network ID\n     */\n    setNetworkID(_id) {\n        this.netID = _id;\n    }\n\n    /**\n     * @method\n     * Create simple key object.\n     * @param {string} key - Hinted key\n     * @param {number} weight - weight\n     * @return {object} - {key, weight}\n     */\n    formatKey(key, weight) {\n        if (key.indexOf(':') === -1) {\n            throw '[ERROR] Invalid key';\n        }\n        if (typeof (weight) !== 'number') {\n            throw '[ERROR] Invalid weight'\n        }\n        return {\n            key: key,\n            weight: weight\n        };\n    }\n\n    /**\n     * @method\n     * Create simple amount object.\n     * @param {string} big - Target amount\n     * @param {number} cid - Currency ID\n     * @return {object} - {big, cid}\n     */\n    formatAmount(big, cid) {\n        if (typeof (big) !== 'number') {\n            throw '[ERROR] Invalid amount';\n        }\n        if (cid.length < 1) {\n            throw '[ERROR] Invalid currency id';\n        }\n        return {\n            big: big,\n            cid: cid\n        }\n    }\n\n    /**\n     * @method\n     * Create Keys object.\n     * @param {object} keys - Array of simple key objects #{key, weight}\n     * @param {number} threshold - threshold\n     * @return {Xkey.Keys} - Created Keys object\n     */\n    createKeys(keys, threshold) {\n        return _toKeys(keys, threshold);\n    };\n\n    /**\n     * @method\n     * Create Amount object Array.\n     * @param {object} amounts - Array of simple amount objects #{big, cid}\n     * @return {object} - Array of Amount obejcts\n     */\n    createAmounts(amts) {\n        return _toAmounts(amts);\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsItem object.\n     * @param {Xkey.Keys} keys - Keys object\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.CreateAccountsItem} - Created CreateAccountsItem object\n     */\n    createCreateAccountsItem(keys, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_CREATE_ACCOUNTS_SINGLE_AMOUNT : Xhint.MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS;\n        return new Xoper.CreateAccountsItem(\n            _type, keys, amts\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersItem object.\n     * @param {string} receiver - Hinted receiver address\n     * @param {object} amts - Array of Amount objects\n     * @return {Xoper.TransfersItem} - Created TransfersItem object\n     */\n    createTransfersItem(receiver, amts) {\n        const _type = amts.length <= 1 ? Xhint.MC_TRNASFERS_ITEM_SINGLE_AMOUNT : Xhint.MC_TRANSFERS_ITEM_MULTI_AMOUNTS;\n        return new Xoper.TransfersItem(\n            _type, receiver, amts\n        )\n    };\n\n    /**\n     * @method\n     * Create CreateAccountsFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of CreateAccountsItem objects\n     * @return {Xoper.CreateAccountsFact} - Created CreateAccountsFact object\n     */\n    createCreateAccountsFact(sender, items) {\n        return new Xoper.CreateAccountsFact(\n            sender, items\n        );\n    };\n\n    /**\n     * @method\n     * Create KeyUpdaterFact object.\n     * @param {string} target - Hinted target address\n     * @param {string} cid - Currency ID\n     * @param {Xkey.Keys} - Keys object\n     * @return {Xoper.KeyUpdaterFact} - Created KeyUpdaterFact object\n     */\n    createKeyUpdaterFact(target, cid, keys) {\n        return new Xoper.KeyUpdaterFact(\n            target, cid, keys\n        );\n    };\n\n    /**\n     * @method\n     * Create TransfersFact object.\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array of TransfersItem objects\n     * @return {Xoper.TransfersFact} - Created TransfersFact object\n     */\n    createTransfersFact(sender, items) {\n        return new Xoper.TransfersFact(\n            sender, items\n        )\n    };\n\n    /**\n     * @method\n     * Create Operation.\n     * @param {Xoper.OperationFact} fact - Operation fact object\n     * @param {string} memo - Operation memo\n     * @return {Xoper.Operation} - Created Operation\n     */\n    createOperation(fact, memo) {\n        let _type;\n\n        if (fact instanceof Xoper.CreateAccountsFact) {\n            _type = Xhint.MC_CREATE_ACCOUNTS_OP;\n        }\n        else if (fact instanceof Xoper.KeyUpdaterFact) {\n            _type = Xhint.MC_KEYUPDATER_OP;\n        }\n        else if (fact instanceof Xoper.TransfersFact) {\n            _type = Xhint.MC_TRANSFERS_OP;\n        }\n        else {\n            throw '[ERROR] Invalid fact object';\n        }\n\n        return new Xoper.Operation(\n            this.netID, _type, memo, fact\n        );\n    };\n\n    /**\n     * @method\n     * Create Seal.\n     * @param {string} sk - Hinted signing key\n     * @param {object} opers - Array of Operation objects\n     * @return {object} - Created seal object\n     */\n    createSeal(sk, opers) {\n        const keypair = Xsign.getKeypair(sk);\n        const signedAt = Xutil.getTimeStamp();\n        const bsignedAt = Buffer.from(Xutil.dateToUTC(signedAt));\n        const bsigner = Buffer.from(keypair.getPublicKey());\n\n        let bopers = Buffer.from('');\n        for (var i = 0; i < opers.length; i++) {\n            bopers = Buffer.concat([bopers, opers[i].hash]);\n        }\n\n        const bodyHash = Xutil.sum256(\n            Buffer.concat([bsigner, bsignedAt, bopers]));\n\n        const signature = keypair.sign(\n            Buffer.concat(\n                [bodyHash, Buffer.from(this.netID)]\n            )\n        );\n\n        const hash = Xutil.sum256(\n            Buffer.concat([bodyHash, signature])\n        );\n\n        const seal = {};\n        seal._hint = Xutil._hint(Xhint.SEAL);\n        seal.hash = bs58.encode(hash);\n        seal.body_hash = bs58.encode(bodyHash);\n        seal.signer = keypair.getPublicKey();\n        seal.signature = bs58.encode(signature);\n        seal.signed_at = signedAt.toISOString();\n\n        const operations = [];\n        for (var i = 0; i < opers.length; i++) {\n            operations.push(opers[i].dict());\n        }\n        seal.operations = operations;\n\n        return seal;\n    };\n};\n\n/**\n * @constructor\n * Converts seal to dictionary-format string and Generates json file.\n */\nconst JSONParser = {\n    /**\n     * @method\n     * Seal to dictionary-format string\n     * @param {object} seal - seal/operation object\n     * @return {string} - Converted seal\n     */\n    toJSONString: (seal) => {\n        return JSON.stringify(seal, null, 4);\n    },\n    /**\n     * @method\n     * Generate json file.\n     * @param {object} seal - seal/operation object\n     * @param {string} fName - file to generate # file name must be '*.json' format\n     */\n    generateFile: (seal, fName) => {\n        const fs = require('fs');\n        fs.writeFile(fName, JSON.stringify(seal, null, 4), (error) => {\n            if (error) throw error;\n        });\n        console.log(\"generateFile() arg: \" + fName + \", Success...\");\n    }\n};\n\nconst _factSignToBuffer = (_fact_sign) => {\n    const bsigner = Buffer.from(_fact_sign['signer']);\n    const bsign = bs58.decode(_fact_sign['signature']);\n    const bat = Buffer.from(Xutil.ISOToUTC(_fact_sign['signed_at']));\n\n    return Buffer.concat([bsigner, bsign, bat]);\n};\n\nconst _factSignsToBuffer = (_fact_signs) => {\n    let buffer = Buffer.from('');\n    for (var i = 0; i < _fact_signs.length; i++) {\n        buffer = Buffer.concat([buffer, _factSignToBuffer(_fact_signs[i])]);\n    }\n    return buffer;\n};\n\nclass Signer {\n    constructor(netID, sk) {\n        this.netID = netID;\n        this.signKey = sk;\n    }\n    setNetId(_id) {\n        this.netID = _id;\n    }\n\n    signOperation(f_oper) {\n        const before = typeof (f_oper) === typeof (\"\") ? JSON.parse(fs.readFileSync(f_oper))\n            : (typeof (f_oper) === typeof ({}) ? f_oper : undefined);\n        if (!before) {\n            return undefined;\n        }\n\n        const after = {};\n        const factHash = before['fact']['hash'];\n        const bfactHash = bs58.decode(factHash);\n        const factSign = before['fact_signs'];\n\n        factSign.push(\n            Xsign.newFactSign(\n                Buffer.concat([\n                    bfactHash, Buffer.from(this.netID)\n                ]),\n                this.signKey\n            ).dict()\n        );\n        const bfact_sg = _factSignsToBuffer(factSign);\n\n        after['memo'] = before['memo'];\n        after['_hint'] = before['_hint'];\n        after['fact'] = before['fact'];\n        after['fact_signs'] = factSign;\n\n        const bmemo = Buffer.from(before['memo']);\n        after['hash'] = bs58.encode(\n            Xutil.sum256(Buffer.concat([bfactHash, bfact_sg, bmemo]))\n        );\n\n        return after;\n    }\n}\n\nmodule.exports = {\n    Generator,\n    JSONParser,\n    Signer\n};","/* SDK module */\nconst Xutil = require('./util');\nconst Xkey = require('./key');\nconst Xhint = require('./hint');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Fact Signature.\n * @property {string} hint - 'BASE_FACT_SIGN-[version]'\n * @property {string} signer - signer\n * @property {Buffer} sign - Fact signature\n * @property {Date} at - Signed time\n */\nclass FactSign {\n    /**\n     * @constructor\n     * @param {string} signer - signer who signed\n     * @param {Buffer} sign - Fact signature\n     * @param {Date} at - Signed time\n     */\n    constructor(signer, sign, at) {\n        this.hint = Xutil._hint(Xhint.BASE_FACT_SIGN);\n        this.signer = signer;\n        this.sign = sign;\n        this.at = at;\n    }\n\n    /**\n     * @method\n     * Concatenate signer-Buffer, sign-Buffer, and UTC-format-at-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: signer-Buffer~sign-Buffer~UTC-at-Buffer\n     */\n    buffer() {\n        const bsigner = Buffer.from(this.signer);\n        const bsign = this.sign;\n        const bat = Buffer.from(Xutil.dateToUTC(this.at));\n\n        return Buffer.concat([bsigner, bsign, bat]);\n    }\n\n    /**\n     * @method\n     * Returns at in ISO format.\n     * @return {string} - ISO formatted at\n     */\n    signedAt() {\n        return this.at.toISOString();\n    }\n\n    /**\n     * @method\n     * Returns fact signature dictionary.\n     * @return {object} - {_hint, signer, signature, signed_at}\n     */\n    dict() {\n        const fact_sign = {};\n        fact_sign._hint = this.hint;\n        fact_sign.signer = this.signer;\n        fact_sign.signature = bs58.encode(this.sign);\n        fact_sign.signed_at = this.signedAt()\n        return fact_sign;\n    }\n};\n\n/**\n * @function\n * Parse hinted private key then generate keypair.\n * @param {string} hintedKey - Hinted private key\n * @return {Xkey.Keypair} - [ BTCKeypair | ETHERKeypair | StellarKeypair ]\n */\nconst getKeypair = (hintedKey) => {\n    const parsed = Xutil.parseHinted(hintedKey);\n\n    switch (Xutil.getTypeFromHint(parsed.hint)) {\n        case Xhint.BTC_PRIVKEY:\n            return new Xkey.BTCKeypair(parsed.hintless);\n        case Xhint.ETHER_PRIVKEY:\n            return new Xkey.ETHKeypair(parsed.hintless);\n        case Xhint.STELLAR_PRIVKEY:\n            return new Xkey.StellarKeypair(parsed.hintless);\n        default: throw '[ERROR] Invalid Signing Key';\n    }\n};\n\n/**\n * @function\n * Generate new fact signature.\n * @param {Buffer} msg - Message to sign\n * @param {string} hintedKey - Hinted signing key\n * @return {FactSign} - Generated fact signature signed by hintedKey\n */\nconst newFactSign = (msg, hintedKey) => {\n    let factSign;\n    let keypair;\n\n    try {\n        keypair = getKeypair(hintedKey);\n        factSign = new FactSign(\n            keypair.getPublicKey(),\n            keypair.sign(msg),\n            Xutil.getTimeStamp()\n        );\n    } catch (e) {\n        console.log(e);\n        return null;\n    }\n\n    return factSign;\n};\n\nmodule.exports = {\n    FactSign,\n    getKeypair,\n    newFactSign\n};","/* mitum-currency version */\nexports.VERSION = \"v0.0.1\";\n\n/* SDK version */\nexports._VERSION = \"v0.0.1\";\n","/* SDK module */\nconst Xsign = require('./sign');\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst Xkey = require('./key');\n\n/* base58 package */\nconst bs58 = require('bs58');\n\n\n/**\n * @class\n * Amount with specific currency.\n * @property {string} hint - 'MC_AMOUNT-[version]'\n * @property {Xutil.BigInteger} big - Target amount\n * @property {string} cid - Currency ID\n */\nclass Amount {\n    /** \n     * @constructor\n     * @param {number} big - Target amount\n     * @param {string} cid - Currenct ID\n    */\n    constructor(big, cid) {\n        this.hint = Xutil._hint(Xhint.MC_AMOUNT);\n        this.big = new Xutil.BigInteger(big);\n        this.cid = cid;\n    }\n\n    /**\n     * @method\n     * Concatenates every big.tight() and cid Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: big.tight()~cid-Buffer\n     */\n    buffer() {\n        const bbig = this.big.tight();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([bbig, bcid]);\n    }\n\n    /**\n     * @method\n     * Returns amount dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const amount = {};\n        amount._hint = this.hint;\n        amount.amount = this.big.value.toString();\n        amount.currency = this.cid;\n        return amount;\n    }\n};\n\n\n/**\n * @class\n * Account address.\n * @property {string} hint - 'mca-[version]'\n * @property {string} addr - Hintless address\n */\nclass Address {\n    /**\n     * @constructor\n     * @param {string} addr - Hinted address\n     */\n    constructor(addr) {\n        let parsed = Xutil.parseHinted(addr);\n\n        this.hint = parsed.hint;\n        this.addr = parsed.hintless;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless address.\n     * @return {Buffer} - Buffered hintless address \n     */\n    buffer() {\n        return Buffer.from(this.addr);\n    }\n\n    /**\n     * @method\n     * Returns hinted address.\n     * @return {string} - Hinted address\n     */\n    hinted() {\n        return this.addr + ':' + this.hint;\n    }\n};\n\n\n/**\n * @class\n * Item containing item type and amount list.\n * CreateAccountsItem and TransfersItem extend this class.\n * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n * @property {string} hint - '[type]-[version]' \n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n*/\nclass Item {\n    /**\n     * @constructor\n     * type: [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT | MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]\n     * @param {string} type - [type]\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n    */\n    constructor(type, amounts) {\n        this.hint = Xutil._hint(type);\n        this.amounts = amounts;\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer for Item.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n    /**\n     * @abstract\n     * Returns item dictionary.\n     * @return {object} - Dictionary object: {_hint, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Create-Accounts operation.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]-[version]'\n * @property {Xkey.Keys} keys - Keys object consists of target keys\n * @property {object} amounts - Array that each element is amount # amount:{big, cid}\n */\nclass CreateAccountsItem extends Item {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_MULTIPLE_AMOUNTS | MC_CREATE_ACCOUNTS_SINGLE_AMOUNT ]\n     * @param {Xkey.Keys} keys - Key object consists of target keys\n     * @param {object} amounts - Array that each element is amount # amount:{big, cid}\n     */\n    constructor(type, keys, amounts) {\n        super(type, amounts);\n        this.keys = keys;\n    }\n\n    /**\n     * @override\n     * Concatenates keys.buffer() and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: keys.buffer()~*amount.buffer()\n     */\n    buffer() {\n        const bkeys = this.keys.buffer();\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([bkeys, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Create-Accounts item dictionary.\n     * @return {object} - Dictionary object: {_hint, keys, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.keys = this.keys.dict();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n\n        return item;\n    }\n};\n\n\n/**\n * @class\n * @extends Item\n * Item for Transfers operation.\n * @property {string} hint - '[ MC_TRANSFERS_ITEM_MULTI_AMOUNTS | MC_TRANSFERS_ITEM_SINGLE_AMOUNT ]-[version]'\n * @property {Address} receiver - Hinted receiver address\n * @property {object} amounts - Array that each is amount # amount:{big, cid}\n */\nclass TransfersItem extends Item {\n    constructor(type, receiver, amounts) {\n        super(type, amounts);\n        this.receiver = new Address(receiver);\n    }\n\n    /**\n     * @override\n     * Concatenates hinted-receiver-Buffer and every amount.buffer() in amounts list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hinted-receiver-Buffer~*amount.buffer()\n     */\n    buffer() {\n        const breceiver = Buffer.from(this.receiver.hinted());\n        const bamounts = Xutil.concatObjectsToBuffer(this.amounts);\n\n        return Buffer.concat([breceiver, bamounts]);\n    }\n\n    /**\n     * @override\n     * Returns Transfers item dictionary.\n     * @return {object} - Dictionary object: {_hint, receiver, amounts}\n     */\n    dict() {\n        const item = {};\n        item._hint = this.hint;\n        item.receiver = this.receiver.hinted();\n\n        const amounts = [];\n        for (var i = 0; i < this.amounts.length; i++) {\n            amounts.push(\n                this.amounts[i].dict()\n            );\n        }\n        item.amounts = amounts;\n        return item;\n    }\n};\n\n\n/**\n * @class\n * Operation Fact.\n * CreateAccountsFact, KeyUpdaterFact, and TransfersFact extends this class.\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]-[version]'\n * @property {Date} token - token for fact\n */\nclass OperationFact {\n    /**\n     * @constructor\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP_FACT | MC_KEYUPDATER_OP_FACT | MC_TRANSFERS_OP_FACT ]\n     */\n    constructor(type) {\n        this.hint = Xutil._hint(type);\n        this.token = Xutil.getTimeStamp();\n    }\n\n    /**\n     * @abstract\n     * Returns Buffer of fact.\n     * @return {Buffer} - Concatenated Buffer\n     */\n    buffer() {\n        throw '[ERROR] Unimplemented function bytes()';\n    }\n\n\n    /**\n     * @abstract\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, ...}\n     */\n    dict() {\n        throw '[ERROR] Unimplemented function dict()';\n    }\n\n    /**\n     * @method\n     * Generates fact hash.\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Create-Accounts operation.\n * @property {string} hint - 'MC_CREATE_ACCOUNTS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is CreateAccountsItem\n */\nclass CreateAccountsFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is CreateAccountsItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_CREATE_ACCOUNTS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            )\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Key-Updater operation.\n * @property {string} hint - 'MC_KEYUPDATER_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} target - Target address\n * @property {string} cid - CurrencyID\n * @property {Xkey.Keys} keys - Keys object for target keys\n */\nclass KeyUpdaterFact extends OperationFact {\n    /**\n     * @operation\n     * @param {string} target - Hinted target address\n     * @param {string} cid - CurrencyID\n     * @param {Xkey.Keys} keys - Keys object for target keys\n     */\n    constructor(target, cid, keys) {\n        super(\n            Xhint.MC_KEYUPDATER_OP_FACT\n        );\n        this.target = new Address(target);\n        this.cid = cid;\n        this.keys = keys;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-target-Buffer, keys.buffer(), and cid-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-target-Buffer~keys.buffer()~cid-Buffer\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const btarget = Buffer.from(this.target.hinted());\n        const bkeys = this.keys.buffer();\n        const bcid = Buffer.from(this.cid);\n\n        return Buffer.concat([btoken, btarget, bkeys, bcid]);\n    }\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, target, keys, currency}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.target = this.target.hinted();\n        fact.keys = this.keys.dict();\n        fact.currency = this.cid;\n        return fact;\n    }\n};\n\n\n/**\n * @class\n * @extends OperationFact\n * Fact of Transfers operation.\n * @property {string} hint - 'MC_TRANSFERS_OP_FACT-[version]'\n * @property {Date} token - token for fact\n * @property {Address} sender - Sender address\n * @property {object} items - Array that each element is TransfersItem\n */\nclass TransfersFact extends OperationFact {\n    /**\n     * @constructor\n     * @param {string} sender - Hinted sender address\n     * @param {object} items - Array that each element is TransfersItem\n     */\n    constructor(sender, items) {\n        super(\n            Xhint.MC_TRANSFERS_OP_FACT\n        );\n        this.sender = new Address(sender);\n        this.items = items;\n\n        this._generateHash();\n    }\n\n    /**\n     * @override\n     * Concatenates ISO-format-token-Buffer, hinted-sender-Buffer, and every item in items list then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: ISO-token-Buffer~hinted-sender-Buffer~*item.buffer()\n     */\n    buffer() {\n        const btoken = Buffer.from(this.token.toISOString());\n        const bsender = Buffer.from(this.sender.hinted());\n        const bitems = Xutil.concatObjectsToBuffer(this.items);\n\n        return Buffer.concat([btoken, bsender, bitems]);\n    }\n\n\n    /**\n     * @override\n     * Returns fact dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, token, sender, items}\n     */\n    dict() {\n        const fact = {};\n        fact._hint = this.hint;\n        fact.hash = bs58.encode(this.hash);\n        fact.token = Buffer.from(this.token.toISOString(), 'utf8').toString('base64');\n        fact.sender = this.sender.hinted();\n\n        const items = [];\n        for (var i = 0; i < this.items.length; i++) {\n            items.push(\n                this.items[i].dict()\n            );\n        }\n        fact.items = items;\n\n        return fact;\n    }\n};\n\n/**\n * @class\n * Operation for Create-Accounts, Key-Updater and Transfers.\n * @property {string} netID - Network ID\n * @property {string} hint - '[ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]-[version]'\n * @property {string} memo - Operation memo\n * @property {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n * @property {object} fact_signs - Fact signatures # Array that each element is FactSign\n * @property {Buffer} hash - Operation hash\n */\nclass Operation {\n    /**\n     * @constructor\n     * @param {string} netID - Network ID\n     * @param {string} type - [ MC_CREATE_ACCOUNTS_OP | MC_CREATE_KEYUPDATER_OP | MC_TRANSFERS_OP ]\n     * @param {string} memo - Operation memo\n     * @param {OperationFact} fact - [ CreateAccountsFact | KeyUpdaterFact | TransfersFact ]\n     */\n    constructor(netID, type, memo, fact) {\n        this.netID = netID;\n        this.hint = Xutil._hint(type);\n        this.memo = memo;\n        this.fact = fact;\n        this.fact_signs = [];\n        this.hash = undefined;\n    }\n\n    /**\n     * @method\n     * Generate new fact signature.\n     * @param {string} sk - Hinted signing key\n     * @return {Xsign.FactSign} - Generated fact signature\n     */\n    _generateFactSign(sk) {\n        return Xsign.newFactSign(\n            Buffer.concat([\n                this.fact.hash,\n                Buffer.from(this.netID)\n            ]),\n            sk\n        );\n    }\n\n    /**\n     * @method\n     * Generate operation hash.\n     * @return {Buffer} - Buffered operation hash\n     */\n    _generateHash() {\n        this.hash = Xutil.sum256(this.buffer());\n    }\n\n    /**\n     * @method\n     * Add new fact signature to fact_signs, and re-generate operation hash.\n     * @param {string} sk - Hinted signing key\n     */\n    addSign(sk) {\n        this.fact_signs.push(\n            this._generateFactSign(sk, this.netID)\n        );\n        this._generateHash();\n    }\n\n    /**\n     * @method\n     * Concatenates hash-Buffer, every fact_sign.buffer() in fact_signs, and memo-Buffer then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: hash-Buffer~*fact_sign.buffer()~memo-Buffer\n     */\n    buffer() {\n        if (this.fact_signs.length < 1) {\n            throw '[ERROR] Empty fact sign!'\n        }\n        const bhash = this.fact.hash;\n        const bfact_sg = Xutil.concatObjectsToBuffer(this.fact_signs)\n        const bmemo = Buffer.from(this.memo);\n\n        return Buffer.concat([bhash, bfact_sg, bmemo]);\n    }\n\n    /**\n     * @override\n     * Returns operation dictionary.\n     * @return {object} - Dictionary object: {_hint, memo, fact, hash, fact_signs}\n     */\n    dict() {\n        const oper = {};\n        oper.memo = this.memo;\n        oper._hint = this.hint;\n        oper.fact = this.fact.dict();\n        oper.hash = bs58.encode(this.hash);\n\n        const fact_signs = [];\n        for (var i = 0; i < this.fact_signs.length; i++) {\n            fact_signs.push(\n                this.fact_signs[i].dict()\n            );\n        }\n        oper.fact_signs = fact_signs;\n\n        return oper;\n    }\n};\n\nmodule.exports = {\n    Amount,\n    Address,\n    CreateAccountsItem,\n    TransfersItem,\n    CreateAccountsFact,\n    KeyUpdaterFact,\n    TransfersFact,\n    Operation,\n};\n","module.exports = {\n    Generator: require('./lib/seal').Generator,\n    JSONParser: require('./lib/seal').JSONParser,\n    getKeypair: require('./lib/key').getKeypair,\n    toKeypair: require('./lib/key').toKeypair,\n    Signer: require('./lib/seal').Signer\n};","class Account {\n    constructor(addr, priv, data) {\n        this.address = addr;\n        this.privateKey = priv;\n        this.resKey = undefined;\n\n        this.publicKeys = data._embedded.keys.keys.map(x => { return { key: x.key, weight: x.weight } });\n        this.balances = data._embedded.balance.map(x => { return { currency: x.currency, amount: x.amount } });\n        this.accountType = this.publicKeys.length > 1 ? 'multi' : 'single';\n    }\n}\n\nexport default Account;","import { operation } from './hint.json';\n\nexport const OPER_CREATE_ACCOUNT = 'OPER-CREATE-ACCOUNT';\nexport const OPER_UPDATE_KEY = 'OPER-UPDATE-KEY';\nexport const OPER_TRANSFER = 'OPER-TRANSFER';\nexport const OPER_DEFAULT = 'OPER-DEFAULT';\n\nexport const PAGE_HOME = 'PAGE-HOMEs'\nexport const PAGE_LOGIN = 'PAGE-LOGIN';\nexport const PAGE_WALLET = 'PAGE-WALLET';\nexport const PAGE_OPER = 'PAGE-OPER';\nexport const PAGE_SIGN = 'PAGE-SIGN';\nexport const PAGE_LOD = 'PAGE-LOD';\nexport const PAGE_RES = 'PAGE-RES';\nexport const PAGE_GEN = 'PAGE-GEN';\n\nexport const SHOW_PRIVATE = 'show-private';\nexport const SHOW_RESTORE = 'show-restore';\n\nexport const TYPE_CREATE_ACCOUNT = operation.create_account + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_UPDATE_KEY = operation.update_key + '-' + process.env.REACT_APP_VERSION;\nexport const TYPE_TRANSFER = operation.transfer + '-' + process.env.REACT_APP_VERSION;","import { TYPE_CREATE_ACCOUNT, TYPE_TRANSFER } from \"../text/mode\";\nimport { address } from '../text/hint.json';\n\nconst hintedAccount = (account) => {\n    return  account + ':' + address + '-' + process.env.REACT_APP_VERSION\n};\n\nclass History {\n    constructor(history, me) {\n        this.me = me;\n        this.inState = history.in_state;\n        this.confirmedAt = history.confirmed_at;\n        \n        this.operation = history.operation;\n        this.type = history.operation._hint;\n        this.factHash = history.operation.fact.hash;\n\n        this.setItems();\n    }\n\n    setItems(){\n        if(!(this.type === TYPE_CREATE_ACCOUNT || this.type === TYPE_TRANSFER)) {\n            this.items = undefined;\n            return;\n        }\n\n        const items = this.operation.fact.items.map(\n            x => ({\n                receiver: this.type === TYPE_CREATE_ACCOUNT ? hintedAccount(x.keys.hash) : x.receiver,\n                amounts: x.amounts.map(\n                    y => ({\n                        currency: y.currency,\n                        amount: y.amount\n                    })\n                )\n            })\n        );\n\n        this.sender = this.operation.fact.sender;\n        if(this.sender === this.me){\n            this.items = items;\n        }\n        else{\n            this.items = [];\n            for( let i = 0; i < items.length; i++ ){\n                if(items[i].receiver === this.me) {\n                    this.items.push(items[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport default History;","import Account from '../../lib/Account';\nimport History from '../../lib/History';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_HISTORY = 'SET_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n\nexport const SET_OPERATION = 'SET_OPERATION';\nexport const SET_RESPONSE = 'SET_RESPONSE';\n\nexport const ENQUEUE_OPERATION = 'ENQUEUE_OPERATION';\nexport const DEQUEUE_OPERATION = 'DEQUEUE_OPERATION';\nexport const CLEAR_QUEUE = 'CLEAR_QUEUE';\n\nexport function login(address, privateKey, data) {\n    const account = new Account(address, privateKey, data);\n    return {\n        type: LOGIN,\n        account: {\n            address: account.address,\n            accountType: account.accountType,\n            publicKeys: account.publicKeys,\n            balances: account.balances,\n            privateKey: account.privateKey,\n            restoreKey: undefined,\n        }\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}\n\nexport function setHistory(data, me) {\n    if(!data) {\n        return {\n            type: SET_HISTORY,\n            history: [],\n        }\n    }\n\n    const histories = data._embedded.map(x => new History(x._embedded, me));\n    const splitHistories = [];\n\n    for(let i = 0; i < histories.length; i++){\n        const _i = histories[i];\n        if(!_i.items){\n            continue;\n        }\n        for(let j = 0; j < _i.items.length; j++){\n            const _j = _i.items[j];\n            for(let z = 0; z < _j.amounts.length; z++) {\n                const _z = _j.amounts[z];\n                splitHistories.push({\n                    hash: _i.factHash,\n                    confirmation: _i.inState ? 'SUCCESS' : 'FAIL',\n                    direction: me === _i.sender ? 'SEND' : 'RECEIVE',\n                    confirmedAt: _i.confirmedAt,\n                    target: me === _i.sender ? _j.receiver : _i.sender,\n                    currency: _z.currency,\n                    amount: _z.amount\n                })\n            }\n        }\n    }\n\n    return {\n        type: SET_HISTORY,\n        history: splitHistories,\n    }\n}\n\nexport function clearHistory() {\n    return {\n        type: CLEAR_HISTORY\n    }\n}\n\nexport function setOperation(operation, json) {\n    return {\n        type: SET_OPERATION,\n        operation,\n        json,\n    }\n}\n\nexport function setResponse(isBroadcast, isStateIn, res, status, data) {\n    return {\n        type: SET_RESPONSE,\n        isBroadcast,\n        isStateIn,\n        res,\n        status,\n        data,\n    }\n}\n\nexport function enqueueOperation(item) {\n    return {\n        type: ENQUEUE_OPERATION,\n        item,\n    }\n}\n\nexport function dequeueOperation() {\n    return {\n        type: DEQUEUE_OPERATION\n    }\n}\n\nexport function clearQueue() {\n    return {\n        type: CLEAR_QUEUE\n    }\n}","import * as actions from '../actions';\n\nconst initialState = {\n    isLogin: false,\n    account: undefined,\n    history: undefined,\n    isLoadHistory: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.LOGIN:\n            return {\n                ...state,\n                isLogin: true,\n                account: action.account\n            }\n        case actions.LOGOUT:\n            return {\n                ...state,\n                isLogin: false,\n                account: undefined\n            }\n        case actions.SET_HISTORY:\n            return {\n                ...state,\n                history: action.history,\n                isLoadHistory: true\n            }\n        case actions.CLEAR_HISTORY:\n            return {\n                ...state,\n                history: undefined,\n                isLoadHistory: false\n            }\n        default:\n            return state;\n    }\n}","function download(json) {\n    if (!json || !Object.prototype.hasOwnProperty.call(json, 'hash')) {\n        return undefined;\n    }\n\n    let file;\n    try {\n        file = new File([JSON.stringify(json, null, 4)], `${json.hash}`, { type: 'application/json' });\n    } catch (e) {\n        alert('JSON 파일 다운로드 url을 얻을 수 없습니다. :(');\n        return undefined;\n    }\n\n    return URL.createObjectURL(file);\n}\n\nexport default download;","import * as actions from '../actions';\nimport * as mode from '../../text/mode'; \nimport download from '../../lib/Url';\n\nconst initialState = {\n    operation: mode.OPER_DEFAULT,\n    json: {},\n    data: [],\n    download: undefined,\n    filename: \"\",\n    isBroadcast: false,\n    isStateIn: false,\n    res: undefined,\n    status: 400\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.SET_OPERATION:\n            if(action.operation === mode.OPER_DEFAULT){\n                return initialState;\n            }\n            return {\n                ...state,\n                operation: action.operation,\n                json: action.json,\n                download: download(action.json),\n                filename: action.json.hash\n            }\n        case actions.SET_RESPONSE:\n            return {\n                ...state,\n                isBroadcast: action.isBroadcast,\n                isStateIn: action.isStateIn,\n                res: action.res,\n                status: action.status,\n                data: action.data,\n            }\n        default:\n            return state;\n    }\n}","import * as actions from '../actions';\nimport Queue from '../../lib/Queue';\n\nconst initialState = {\n    queue: new Queue()\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.ENQUEUE_OPERATION:\n            state.queue.enque(action.item);\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.DEQUEUE_OPERATION:\n            state.queue.deque();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        case actions.CLEAR_QUEUE:\n            state.queue.clear();\n            return {\n                ...state,\n                queue: state.queue\n            }\n        default:\n            return state;\n    }\n}","class Queue {\n    constructor() {\n        this.queue = [];\n    }\n\n    enque(item) {\n        this.queue.push(item);\n    }\n\n    deque() {\n        this.queue.shift();\n    }\n\n    isEmpty() {\n        if(this.queue) {\n            return false;\n        }\n        return true;\n    }\n\n    clear() {\n        this.queue = [];\n    }\n\n    get length() {\n        return this.queue.length;\n    }\n\n    get target() {\n        if(this.isEmpty()) {\n            return null\n        }\n        return this.queue[0];\n    }\n}\n\nexport default Queue;","import { combineReducers } from 'redux';\nimport { reducer as loginReducer } from './LoginReducer';\nimport { reducer as operationReducer } from './OperationReducer';\nimport { reducer as queueReducer} from './QueueReducer';\n\n\nconst rootReducer = combineReducers({\n    login: loginReducer,\n    operation: operationReducer,\n    queue: queueReducer,\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\n\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    {}\n);\nexport default store;","export default __webpack_public_path__ + \"static/media/logo_trans.39b47b2b.png\";","import React from 'react';\nimport './Home.scss';\n\nimport logo_trans from '../image/logo_trans.png';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false\n        };\n    }\n\n    onClick() {\n        this.setState({\n            isRedirect: true\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                { this.state.isRedirect ? <Redirect to=\"/login\" /> : false }\n                <div className=\"home-wrapper\"\n                    onClick={() => this.onClick()}>\n                    <div className=\"home-title-wrapper\">\n                        <img src={logo_trans} alt=\"logo\" />\n                        <div className=\"home-title\">\n                            <h1>MITUM WEB WALLET</h1>\n                        </div>\n                    </div>\n                    <div className=\"home-open\">OPEN WALLET</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SmallButton.scss';\n\nfunction SmallButton(props) {\n    return (\n        <button className=\"small-button draw-border\"\n            style={{ display: props.visible ? \"inherit\" : \"none\" }}\n            disabled={props.disabled ? true : false}\n            onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\n\nSmallButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    visible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\nexport default SmallButton;","import React from 'react';\nimport copy from 'copy-to-clipboard';\n\nimport PropTypes from 'prop-types';\nimport './InputBox.scss';\n\nimport SmallButton from './buttons/SmallButton';\n\nclass InputBox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: \"\"\n        };\n    }\n\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"box \" + this.props.size}>\n                <input className='input-box'\n                    type=\"text\"\n                    name=\"input-box\"\n                    autoComplete=\"off\"\n                    value={this.state.value ? this.state.value : this.props.value}\n                    disabled={this.props.disabled}\n                    onChange={this.props.onChange ? this.props.onChange : () => this.onChange()}\n                    placeholder={this.props.placeholder ? this.props.placeholder : \"\"} />\n                <SmallButton\n                    visible={this.props.useCopy}\n                    onClick={() => {\n                        copy(this.props.value);\n                        alert('copied!');\n                    }} >COPY</SmallButton>\n            </div>\n        )\n    }\n}\n\nInputBox.propTypes = {\n    size: PropTypes.string.isRequired,\n    useCopy: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    placeholder: PropTypes.string\n}\n\nexport default InputBox;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ConfirmButton.scss';\n\nclass ConfirmButton extends React.Component {\n    render() {\n        return (\n            <button className=\"confirm-button\"\n                style={{ opacity: this.props.disabled ? 0.4 : 1.0 }}\n                onClick={this.props.onClick}\n                disabled={this.props.disabled ? true : false}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nConfirmButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n}\n\nexport default ConfirmButton;","import React from 'react';\n\nimport './PrivateKeyLoginBox.scss';\n\nimport InputBox from './InputBox';\nimport ConfirmButton from './buttons/ConfirmButton';\n\nclass PrivateKeyLoginBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            privateKey: \"\",\n            account: \"\",\n            data: undefined,\n        }\n    }\n\n    onChangePrivate(e) {\n        this.setState({\n            privateKey: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            account: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"private-login-container\">\n                <div className=\"private-input-container\">\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => { this.onChangeAddress(e) }}\n                        value={this.state.account}\n                        placeholder=\"account address\" \n                        label=\"Account Address\"/>\n                    <InputBox disabled={false} useCopy={false} size=\"big\"\n                        onChange={(e) => this.onChangePrivate(e)}\n                        value={this.state.privateKey}\n                        placeholder=\"private key\"\n                        label=\"Private Key\"/>\n                </div>\n                <ConfirmButton\n                    disabled={!(this.state.privateKey && this.state.account) ? true : false}\n                    onClick={() => {\n                        this.props.onLogin(this.state.account.trim(), this.state.privateKey.trim());\n                    }}>Open</ConfirmButton>\n            </div>\n        )\n    }\n}\nexport default PrivateKeyLoginBox;","import React from 'react';\n\nclass RestoreKeyLoginBox extends React.Component {\n    render() {\n        return (\n            <div>RestoreKeyLoginBox</div>\n        )\n    }\n}\nexport default RestoreKeyLoginBox;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.scss';\n\nimport PrivateKeyLoginBox from '../components/PrivateKeyLoginBox';\nimport RestoreKeyLoginBox from '../components/RestoreKeyLoginBox';\n\nimport { clearHistory, login, setHistory } from '../store/actions';\nimport { connect } from 'react-redux';\n\nimport { toKeypair } from 'mitumc';\nimport { SHOW_PRIVATE, SHOW_RESTORE } from '../text/mode';\n\nconst getAccountInformation = async (account) => {\n    return await axios.get(process.env.REACT_APP_API_ACCOUNT + account);\n}\n\nconst getAccountHistory = async (account) => {\n    return await axios.get(`${process.env.REACT_APP_API_ACCOUNT}${account}/operations?reverse=1`);\n}\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mode: SHOW_PRIVATE,\n            isPriv: true,\n            isActive: false\n        }\n    }\n\n    onLogin(addr, priv) {\n        let pubKey;\n\n        try {\n            pubKey = toKeypair(priv, '').getPublicKey();\n        } catch (e) {\n            alert('지갑 열기 실패! :(\\n유효하지 않은 비밀키입니다.');\n            return;\n        }\n\n        getAccountHistory(addr)\n            .then(\n                res => {\n                    this.props.setHistory(res.data, addr);\n                }\n            )\n            .catch(\n                e => {\n                    this.props.setHistory(null, addr);\n                }\n            )\n\n        getAccountInformation(addr)\n            .then(\n                res => {\n                    const pubKeys = res.data._embedded.keys.keys.map(x => x.key);\n                    for (let i = 0; i < pubKeys.length; i++) {\n                        if (pubKeys[i] === pubKey) {\n                            this.props.signIn(addr, priv, res.data);\n                            return;\n                        }\n                    }\n                    alert(`지갑 열기 실패! :(\\n계정 [${addr}]의 멤버에 해당 키가 존재하지 않습니다.`);\n                }\n            )\n            .catch(\n                e => {\n                    console.log(e);\n                    alert(`지갑 열기 실패! :(\\n계정 조회에 실패하였습니다. 잠시 후 다시 시도해보세요.`);\n                }\n            );\n    }\n\n    onChange() {\n        const radio = document.querySelector(\"input[type=radio]:checked\").value;\n\n        if (this.state.isActive) {\n            this.setState({\n                mode: radio\n            });\n        }\n        else return;\n    }\n\n    renderForm() {\n        const { mode } = this.state;\n        switch (mode) {\n            case SHOW_PRIVATE:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onLogin(addr, priv)} />;\n            case SHOW_RESTORE:\n                return <RestoreKeyLoginBox />;\n            default:\n                return <PrivateKeyLoginBox\n                    onLogin={(addr, priv) => this.onLogin(addr, priv)} />;\n        }\n    }\n\n    onClick() {\n        if (this.state.isActive) {\n            this.setState({\n                isPriv: !this.state.isPriv\n            });\n        }\n        else return;\n    }\n\n    render() {\n        if (this.props.isLogin) {\n            this.onLogin(this.props.account.address, this.props.account.privateKey);\n        }\n\n        return (\n            <div className=\"login-container\">\n                <h1>OPEN WALLET</h1>\n                {this.props.isLoadHistory && this.props.isLogin ? <Redirect to={`/wallet/${this.props.account.address}`} /> : false}\n                <div className=\"login-radio\" style={this.state.isActive ? {} : { display: \"none\" }}>\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={SHOW_PRIVATE} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Private Key</div>\n                    </label>\n\n                    <label className=\"rad-label\">\n                        <input type=\"radio\" className=\"rad-input\" value={SHOW_RESTORE} name=\"rad\"\n                            onChange={() => this.onChange()} onClick={() => this.onClick()} checked={!this.state.isPriv} />\n                        <div className=\"rad-design\"></div>\n                        <div className=\"rad-text\">Restore Key</div>\n                    </label>\n                </div>\n                {this.renderForm()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    isLoadHistory: state.login.isLoadHistory\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    setHistory: (data, me) => dispatch(setHistory(data, me)),\n    clearHistory: () => dispatch(clearHistory())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Login));","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SelectButton.scss';\n\nclass SelectButton extends React.Component {\n    render() {\n        return (\n            <button className=\"select-button\"\n                onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nSelectButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport default SelectButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PublicKeyModal.scss\";\n\nconst key = (k) => {\n    return (\n        <li key={k}\n            onClick={() => {\n                copy(k);\n                alert('copied');\n            }}>{k}</li>\n    );\n}\n\nclass PublicKeyModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, account } = this.props;\n        return (\n            <div className={isOpen ? 'pub-openModal pub-modal' : 'pub-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Public Key List\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {account.publicKeys.map(x => key(x.key))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    account: state.login.account\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PublicKeyModal));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\n\nimport \"./PendingModal.scss\";\nimport { OPER_CREATE_ACCOUNT, OPER_TRANSFER } from '../../text/mode';\n\nconst job = (x) => {\n    return (\n        <li key={x.hash}\n            onClick={() => { copy(x.hash); alert('copied'); }}>\n            <p>{x.broadcastedAt}</p>\n            <p>{x.operation === OPER_CREATE_ACCOUNT\n                ? 'CREATE-ACCOUNT'\n                : (\n                    x.operation === OPER_TRANSFER\n                        ? 'TRANSFER'\n                        : 'UPDATE-KEY'\n                )\n            }</p>\n            <p>{x.hash}</p>\n        </li>\n    );\n}\n\nclass PendingModal extends React.Component {\n\n    render() {\n        const { isOpen, onClose, queue } = this.props;\n        return (\n            <div className={isOpen ? 'pend-openModal pend-modal' : 'pend-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Operation Facts in Pending...\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <ul>\n                                {queue.queue.map(x => job(x))}\n                            </ul>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    queue: state.queue.queue\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    null\n)(PendingModal));","export const isOperation = (json) => {\n\n    if (!json) { return false; }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'hash') || !json.hash) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'memo')) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact') || !json.fact) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(json, 'fact_signs') || !json.fact_signs) {\n        return false;\n    }\n\n    const signatures = json.fact_signs.map(x => x.signatures);\n    if (signatures.length < 1) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isStateValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'location') || !state.location) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state.location, 'state') || !state.location.state) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isResponseValid = (state) => {\n\n    if (!state) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'res') || !state.res) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'status') || !state.status) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'operation') || !state.operation) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(state, 'data')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport const isAccountValid = (account) => {\n\n    if (!account) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'address') || !account.address) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'accountType') || !account.accountType) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'publicKeys') || !account.publicKeys) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'balances') || !account.balances) {\n        return false;\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(account, 'privateKey') || !account.privateKey) {\n        return false;\n    }\n\n    // if (!Object.prototype.hasOwnProperty.call(account, 'restoreKey') || !account.restoreKey) {\n    //     return false;\n    // }\n\n    return true;\n}","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { dequeueOperation, login } from '../store/actions';\nimport './Wallet.scss';\n\nimport copy from 'copy-to-clipboard';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport PublicKeyModal from '../components/modals/PublicKeyModal';\nimport PendingModal from '../components/modals/PendingModal';\nimport axios from 'axios';\n\nimport * as mode from '../text/mode';\nimport { isAccountValid } from '../lib/Validation';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst balance = (bal) => {\n    return (\n        <li key={bal.currency}>\n            <p className=\"currency\">{bal.currency}</p>\n            <p className=\"amount\">{bal.amount}</p>\n        </li>\n    );\n}\n\nconst history = (hist) => {\n    return (\n        <li key={hist.hash + hist.target} onClick={() => {\n            copy(hist.hash);\n            alert('fact hash copied');\n        }}>\n            <p id={hist.confirmation}>{hist.confirmation}</p>\n            <p id={hist.direction}>{hist.direction}</p>\n            <p id='confirmed-at'>{hist.confirmedAt}</p>\n            <p id='target'>{hist.target}</p>\n            <p id='currency'>{hist.currency}</p>\n            <p id='amount'>{hist.amount}</p>\n        </li>\n    );\n}\n\nconst titleStyle = {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '0',\n    padding: '0'\n}\nconst lineStyle = {\n    width: '100%',\n    border: '2px solid white',\n    verticalAlign: 'middle',\n}\n\nconst title = (content) => {\n    return (\n        <div style={titleStyle}>\n            <div style={lineStyle}></div>\n            <p style={{\n                width: '100%',\n                textAlign: 'center',\n                verticalAlign: 'middle',\n                fontWeight: '400',\n                fontSize: '1.5em'\n            }}>{content}</p>\n            <div style={lineStyle}></div>\n        </div>\n    )\n}\n\nconst getFactInState = async (hash) => {\n    return await axios.get(process.env.REACT_APP_API_SEARCH_FACT + hash);\n}\n\nclass Wallet extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.walletRef = createRef();\n\n        this.state = {\n            restoreKey: undefined,\n\n            isPubModalOpen: false,\n            isPendModalOpen: false,\n            isQueueUpdate: 1,\n\n            isRedirect: this.props.isLogin ? false : true,\n            redirect: this.props.isLogin ? undefined : mode.PAGE_LOGIN,\n            operation: undefined\n        }\n    }\n\n    async checkInState() {\n        while (!this.props.queue.isEmpty()) {\n            const target = this.props.queue.target;\n\n            if (!target) {\n                break;\n            }\n\n            var isResult = false;\n            getFactInState(target.hash)\n                .then(\n                    res => {\n                        if (res.request.status === 200) {\n                            this.props.deleteJob();\n                            this.setState({ isQueueUpdate: this.state.isQueueUpdate + 1 });\n                        }\n                    }\n                )\n                .catch(\n                    e => {\n                        console.log(e);\n                    }\n                )\n                .finally(() => {\n                    isResult = true;\n                });\n\n            while (!isResult) {\n                await sleep(500);\n            }\n        }\n    }\n\n    onMoreClick() {\n        this.setState({\n            isDetailVisible: !this.state.isDetailVisible\n        });\n    }\n\n    onShowClick(target) {\n        if (target === mode.SHOW_PRIVATE) {\n            this.setState({\n                isPrivVisible: !this.state.isPrivVisible\n            })\n        }\n        else if (target === mode.SHOW_RESTORE) {\n            this.setState({\n                isResVisible: !this.state.isResVisible\n            })\n        }\n        else {\n            return;\n        }\n    }\n\n    onSelect(oper) {\n        if (oper === mode.OPER_CREATE_ACCOUNT\n            || oper === mode.OPER_UPDATE_KEY\n            || oper === mode.OPER_TRANSFER) {\n            this.setState({\n                isRedirect: true,\n                redirect: mode.PAGE_OPER,\n                operation: oper\n            });\n        }\n    }\n\n    renderRedirect() {\n        if (!this.props.account || !isAccountValid(this.props.account)) {\n            return <Redirect to=\"/login\" />;\n        }\n\n        if (!this.state.isRedirect) {\n            return false;\n        }\n\n        switch (this.state.redirect) {\n            case mode.PAGE_OPER:\n                return <Redirect to={{\n                    pathname: '/operation',\n                    state: {\n                        operation: this.state.operation,\n                    }\n                }} />;\n            case mode.PAGE_LOGIN:\n                return <Redirect to='/login' />\n            default: return false;\n        }\n    }\n\n    componentDidMount() {\n        this.scrollToAccount();\n        this.checkInState();\n\n        setTimeout(() => {\n            this.refresh();\n        }, 5000);\n    }\n\n    componentDidUpdate() {\n        this.scrollToAccount();\n    }\n\n    scrollToAccount = () => {\n        if (this.walletRef.current) {\n            this.walletRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    closePubModal() {\n        this.setState({ isPubModalOpen: false });\n    }\n\n    openPubModal() {\n        this.setState({ isPubModalOpen: true });\n    }\n\n    closePendModal() {\n        this.setState({ isPendModalOpen: false });\n    }\n\n    openPendModal() {\n        this.setState({ isPendModalOpen: true });\n    }\n\n    refresh() {\n        this.setState({\n            isRedirect: true,\n            redirect: mode.PAGE_LOGIN\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"wallet-container\">\n                {this.renderRedirect()}\n                <div className=\"wallet-ref\" ref={this.walletRef}></div>\n                <div id='wallet-refresh'><p onClick={() => this.refresh()}>↻</p></div>\n                <div className=\"wallet-info\">\n                    {title(\"ADDRESS\" + (this.props.account.accountType === \"multi\" ? \" - MULTI\" : \" - SINGLE\"))}\n                    <p id='address' onClick={() => this.openPubModal()}>{this.props.account.address}</p>\n                    <section className=\"wallet-amount\">\n                        {title('BALANCE')}\n                        <ul>\n                            {this.props.account.balances ? this.props.account.balances.map(x => balance(x)) : false}\n                        </ul>\n                    </section>\n                </div>\n                <div className=\"wallet-operation\">\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(mode.OPER_CREATE_ACCOUNT)}>CREATE ACCOUNT</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(mode.OPER_UPDATE_KEY)}>UPDATE KEY</SelectButton>\n                    <SelectButton size=\"wide\" onClick={() => this.onSelect(mode.OPER_TRANSFER)}>TRANSFER</SelectButton>\n                </div>\n                <div className=\"wallet-history\">\n                    {title('HISTORY')}\n                    <ul>\n                        {this.props.history.length > 0 ? this.props.history.map(x => history(x)) : false}\n                    </ul>\n                    <p id='pend' onClick={() => this.openPendModal()}>\n                        {this.state.isQueueUpdate ? `${this.props.queue.length} 개의 작업을 처리 중입니다.` : false}\n                    </p>\n                </div>\n                <PublicKeyModal onClose={() => this.closePubModal()} isOpen={this.state.isPubModalOpen} />\n                <PendingModal onClose={() => this.closePendModal()} isOpen={this.state.isPendModalOpen} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n    history: state.login.history,\n    queue: state.queue.queue\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signIn: (address, privateKey, data) => dispatch(login(address, privateKey, data)),\n    deleteJob: () => dispatch(dequeueOperation())\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Wallet));","import React from 'react';\nimport './KeyGen.scss';\n\nimport SelectButton from '../components/buttons/SelectButton';\nimport InputBox from '../components/InputBox';\n\nimport { version, key } from \"../text/hint.json\";\n\nimport { getKeypair } from 'mitumc';\n\n\nconst KEY_BTC = \"btc\";\nconst KEY_ETHER = \"ether\";\nconst KEY_STELLAR = \"stellar\";\n\nclass KeyGen extends React.Component {\n    state = {\n        privKey: \"\",\n        pubKey: \"\",\n    }\n\n    getKey(_type) {\n        const keypair = getKeypair(_type);\n\n        let privateKey = keypair.privKey.key + ':';\n        let publicKey = keypair.pubKey + ':';\n\n        switch (_type) {\n            case KEY_BTC:\n                privateKey += key.btc.priv;\n                publicKey += key.btc.pub;\n                break;\n            case KEY_ETHER:\n                privateKey += key.ether.priv;\n                publicKey += key.ether.pub;\n                break;\n            case KEY_STELLAR:\n                privateKey += key.stellar.priv;\n                publicKey += key.stellar.pub;\n                break;\n            default: throw new Error(\"Invalid key type\");\n        }\n\n        privateKey += '-' + version;\n        publicKey += '-' + version;\n\n        this.setState({\n            privKey: privateKey,\n            pubKey: publicKey\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"key-gen-container\">\n                <div className=\"key-selector\">\n                    <SelectButton onClick={() => this.getKey(KEY_BTC)}>BTC</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_ETHER)}>ETHER</SelectButton>\n                    <SelectButton onClick={() => this.getKey(KEY_STELLAR)}>STELLAR</SelectButton>\n                </div>\n                <div className=\"key-boxer\">\n                    <InputBox label=\"Private Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.privKey} />\n                    <InputBox label=\"Public Key\" disabled={true} useCopy={true} size=\"big\" value={this.state.pubKey} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default KeyGen;","import React from 'react';\nimport './ResKeyGen.scss';\n\nfunction ResKeyGen() {\n    return (\n        <div className=\"res-container\">\n            <h1>ResKeyGen</h1>\n        </div>\n    );\n}\n\nexport default ResKeyGen;","import React from 'react';\nimport './Help.scss';\n\nclass Help extends React.Component {\n    render() {\n        return (\n            <div className=\"help-container\">\n                <h1>Help</h1>\n            </div>\n        );\n    }\n}\n\nexport default Help;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../../store/actions';\nimport axios from 'axios';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport \"./OperationConfirm.scss\";\nimport { isOperation } from '../../lib/Validation';\n\nimport { OPER_CREATE_ACCOUNT, OPER_UPDATE_KEY, OPER_TRANSFER } from '../../text/mode';\nimport hint from '../../text/hint.json';\n\nconst broadcast = async (operation) => {\n    if (!isOperation(operation)) {\n        return undefined;\n    }\n\n    return await axios.post(process.env.REACT_APP_API_BROADCAST, operation);\n}\n\nclass OperationConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false,\n        }\n    }\n\n    onSend(json) {\n        broadcast(json).then(\n            res => {\n                if (res.request.status === 200) {\n                    let data = undefined;\n                    switch (this.props.operation) {\n                        case OPER_CREATE_ACCOUNT:\n                            data = json.fact.items.map(x => x.keys.hash + ':' + hint.address + '-' + process.env.REACT_APP_VERSION);\n                            break;\n                        case OPER_UPDATE_KEY:\n                            data = json.fact.hash;\n                            break;\n                        case OPER_TRANSFER:\n                        default:\n                            data = undefined;\n                    }\n                    this.props.setResult(true, false, res.data, 200, data);\n                }\n                else {\n                    this.props.setResult(false, false, res.data, res.request.status, undefined);\n                }\n                this.setState({ isRedirect: true });\n            }\n        ).catch(\n            e => {\n                this.props.setResult(false, false, e.response.data, e.response.data.status, undefined);\n                this.setState({ isRedirect: true });\n                alert('작업을 전송할 수 없습니다.\\n네트워크를 확인해주세요.');\n            }\n        );\n    }\n\n    renderRedirect() {\n        const { operation } = this.props;\n        switch (operation) {\n            case OPER_CREATE_ACCOUNT:\n            case OPER_TRANSFER:\n                return <Redirect to='/response'/>;\n            case OPER_UPDATE_KEY:\n                return <Redirect to='/loading'/>;\n            default:\n                alert('잘못된 작업입니다!\\n지갑 페이지로 이동합니다.');\n                return <Redirect to='/login' />;\n        }\n    }\n\n    render() {\n        const { isOpen, onClose, json, filename, download } = this.props;\n        return (\n            <div className={isOpen ? 'oper-openModal oper-modal' : 'oper-modal'}>\n                {this.state.isRedirect ? this.renderRedirect() : false}\n                {isOpen ? (\n                    <section>\n                        <header>\n                            이 작업을 전송하겠습니까?\n                            <button className=\"close\" onClick={onClose}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='oper-exp'>전송 버튼을 누른 후에는 작업을 되돌릴 수 없습니다.</p>\n                            <p id='oper-exp'>작업 내용이 정확한가요?</p>\n                            <span>\n                                <p className=\"oper-modal-button\" id=\"no\" onClick={onClose}>{\"취소!:(\"}</p>\n                                <a className=\"oper-modal-button\" id=\"no\" target=\"_blank\" download={`${filename}.json`}\n                                    href={download} rel=\"noreferrer\">\n                                    {\"JSON 파일 다운로드!:[\"}\n                                </a>\n                                <p className=\"oper-modal-button\" id=\"yes\" onClick={() => this.onSend(json)}>{\"전송!:)\"}</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    download: state.operation.download,\n    filename: state.operation.filename,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OperationConfirm));","import React from 'react';\nimport { key } from './SubInfo';\nimport './Keys.scss';\n\nfunction Keys({ keys, title }) {\n    return (\n        <section className='key-container'>\n            <p id='head'>{title}</p>\n            <div className='label'>\n                <p id='key'>KEY</p>\n                <p id='weight'>WEIGHT</p>\n            </div>\n            <ul>\n                {keys ? keys.map(x => key(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Keys;","export const balance = x => {\n    return (\n        <li key={x.currency}>\n            <p id='currency'>{x.currency}</p>\n            <p id='amount'>{x.amount}</p>\n        </li>\n    );\n}\n\nexport const key = x => {\n    return (\n        <li key={x.key}>\n            <p id='key'>{x.key}</p>\n            <p id='weight'>{x.weight}</p>\n        </li>\n    );\n}","import React from 'react';\nimport { balance } from './SubInfo';\nimport './Balances.scss';\n\nfunction Balances({ balances, title, labeled }) {\n    return (\n        <section className='balance-container'>\n            <p id='head'>{title}</p>\n            {labeled ? (\n                <div className='label'>\n                    <p id='currency'>CURRENCY ID</p>\n                    <p id='amount'>AMOUNT</p>\n                </div>\n            ) : false}\n            <ul className={labeled ? 'wide' : 'slim'}>\n                {balances ? balances.map(x => balance(x)) : false}\n            </ul>\n        </section>\n    );\n}\n\nexport default Balances;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './KeyAdder.scss';\n\nfunction KeyAdder(props) {\n\n    const { onKeyChange, onWeightChange, onAdd, isAddDisabled, pub, weight, useThres } = props;\n\n    return (\n        <section className='key-adder-container'>\n            <div className=\"key-adder\">\n                <InputBox size=\"medium\" useCopy={false} disabled={false} placeholder=\"public key\"\n                    value={pub}\n                    onChange={onKeyChange} />\n                <InputBox size=\"small\" useCopy={false} disabled={false} placeholder=\"weight\"\n                    value={weight}\n                    onChange={onWeightChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n            {useThres\n                ? (\n                    <div className=\"thres-adder\">\n                        <p>THRESHOLD:</p>\n                        <InputBox\n                            size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                            value={props.thres}\n                            onChange={props.onThresChange} />\n                    </div>\n                )\n                : false\n            }\n        </section>\n    );\n}\n\nexport default KeyAdder;","import React from 'react';\nimport SmallButton from '../buttons/SmallButton';\nimport InputBox from '../InputBox';\nimport './AmountAdder.scss';\n\nfunction AmountAdder(props) {\n\n    const { onCurrencyChange, onAmountChange, currency, amount, isAddDisabled, onAdd } = props;\n\n    return (\n        <section className='amount-adder-container'>\n            <div className=\"amount-adder\">\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder=\"currency\"\n                    onChange={onCurrencyChange}\n                    value={currency} />\n                <InputBox\n                    size=\"medium\" useCopy={false} disabled={false} placeholder=\"amount\"\n                    value={amount}\n                    onChange={onAmountChange} />\n                <SmallButton\n                    visible={true}\n                    disabled={isAddDisabled}\n                    onClick={onAdd}>ADD</SmallButton>\n            </div>\n        </section>\n    );\n}\n\nexport default AmountAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../../store/actions';\n\nimport './CreateAccount.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport Keys from '../infos/Keys';\nimport Balances from '../infos/Balances';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport AmountAdder from '../adders/AmountAdder';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_CREATE_ACCOUNT } from '../../text/mode';\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            amounts: [],\n            threshold: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n            currency: \"\",\n            amount: \"\",\n\n            isModalOpen: false,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n            const account = this.props.account;\n\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const createAccountsFact = generator.createCreateAccountsFact(\n                account.address,\n                [generator.createCreateAccountsItem(\n                    keys, amounts\n                )]\n            );\n\n            const createAccounts = generator.createOperation(createAccountsFact, \"\");\n            createAccounts.addSign(account.privateKey);\n\n            const created = createAccounts.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            alert('작업을 생성할 수 없습니다. :(\\n입력하신 작업 내용을 확인해주세요~');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && (this.state.keys.length > 0 || this.state.amounts.length > 0)) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"ca-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>CREATE ACCOUNT</h1>\n                <div className=\"ca-balance-wrap\">\n                    <Balances title=\"CURRENT BALANCE LIST\" labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"ca-input-wrap\">\n                    <div ref={this.createdRef}></div>\n                    <div className=\"ca-keys\">\n                        <Keys title='KEY LIST' keys={this.state.keys} labeled={true} />\n                        <KeyAdder\n                            onKeyChange={(e) => this.onChangePub(e)}\n                            onWeightChange={(e) => this.onChangeWeight(e)}\n                            onThresChange={(e) => this.onChangeThres(e)}\n                            onAdd={() => this.addKey()}\n                            isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                            pub={this.state.publicKey} weight={this.state.weight} thres={this.state.threshold}\n                            useThres={true} />\n                    </div>\n\n                    <div className=\"ca-amounts\">\n                        <Balances title=\"AMOUNT LIST\" balances={this.state.amounts} labeled={true} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.keys.length < 1 || this.state.threshold === \"\" ? true : false}\n                    onClick={() => this.onClick()}>CREATE</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_CREATE_ACCOUNT, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(CreateAccount));","import React from 'react';\nimport InputBox from '../InputBox';\nimport './ExtraAdder.scss';\n\nfunction ExtraAdder({ thres, currency, onCurrencyChange, onThresChange }) {\n\n    return (\n        <section className='extra-adder-container'>\n            <div className=\"thres-adder\">\n                <p>THRESHOLD :</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='threshold'\n                    value={thres}\n                    onChange={onThresChange} />\n            </div>\n            <div className=\"currency-adder\">\n                <p>CURRENCY ID:</p>\n                <InputBox\n                    size=\"small\" useCopy={false} disabled={false} placeholder='currency'\n                    value={currency}\n                    onChange={onCurrencyChange} />\n            </div>\n        </section>\n    );\n}\n\nexport default ExtraAdder;","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './UpdateKey.scss';\n\nimport ConfirmButton from '../buttons/ConfirmButton';\nimport Keys from '../infos/Keys';\n\nimport KeyAdder from '../adders/KeyAdder';\nimport ExtraAdder from '../adders/ExtraAdder';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { setOperation } from '../../store/actions';\n\nimport { OPER_UPDATE_KEY } from '../../text/mode';\n\nclass UpdateKey extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            keys: [],\n            threshold: \"\",\n            currency: \"\",\n\n            publicKey: \"\",\n            weight: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n            const account = this.props.account;\n            const keys = generator.createKeys(\n                this.state.keys.map(x =>\n                    generator.formatKey(x.key, parseInt(x.weight))),\n                parseInt(this.state.threshold)\n            );\n\n            const keyUpdaterFact = generator.createKeyUpdaterFact(\n                account.address, this.state.currency, keys\n            );\n\n            const keyUpdater = generator.createOperation(keyUpdaterFact, \"\");\n            keyUpdater.addSign(account.privateKey);\n\n            const created = keyUpdater.dict();\n            \n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            alert('작업을 생성할 수 없습니다. :(\\n입력하신 작업 내용을 확인해주세요~');\n        }\n    }\n\n    onChangePub(e) {\n        this.setState({\n            publicKey: e.target.value\n        });\n    }\n\n    onChangeWeight(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    }\n\n    onChangeThres(e) {\n        this.setState({\n            threshold: e.target.value\n        });\n    }\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    addKey() {\n        this.setState({\n            keys: [...this.state.keys, {\n                key: this.state.publicKey,\n                weight: this.state.weight\n            }],\n            publicKey: \"\",\n            weight: \"\",\n        });\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n        if (this.createdRef.current && this.state.keys.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"uk-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>UPDATE KEY</h1>\n                <div className=\"uk-info-wrap\">\n                    <Keys title='CURRENT KEY LIST' keys={account.publicKeys} />\n                </div>\n                <div className=\"uk-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"uk-keys\">\n                        <Keys title='NEW KEY LIST' keys={this.state.keys} />\n                        <section className='uk-keys-adder'>\n                            <KeyAdder\n                                onKeyChange={(e) => this.onChangePub(e)}\n                                onWeightChange={(e) => this.onChangeWeight(e)}\n                                onAdd={() => this.addKey()}\n                                isAddDisabled={!(this.state.publicKey && this.state.weight)}\n                                pub={this.state.publicKey} weight={this.state.weight}\n                                useThres={false} />\n                            <ExtraAdder\n                                onThresChange={(e) => this.onChangeThres(e)}\n                                onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                                thres={this.state.threshold} currency={this.state.currency} />\n                        </section>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.keys.length < 1 || this.state.threshold === \"\" || this.state.currency === \"\" ? true : false}\n                    onClick={() => this.onClick()}>UPDATE</ConfirmButton>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_UPDATE_KEY, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(UpdateKey));","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './Transfer.scss';\n\nimport InputBox from '../InputBox';\nimport AmountAdder from '../adders/AmountAdder';\nimport Balances from '../infos/Balances';\nimport ConfirmButton from '../buttons/ConfirmButton';\n\nimport OperationConfirm from '../modals/OperationConfirm';\n\nimport { Generator } from 'mitumc';\n\nimport { OPER_TRANSFER } from '../../text/mode';\nimport { setOperation } from '../../store/actions';\n\n\nclass Transfer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.titleRef = createRef();\n\n        if (!Object.prototype.hasOwnProperty.call(this.props, 'account') || !this.props.account) {\n            this.state = { isRedirect: true }\n            return;\n        }\n\n        this.state = {\n            isRedirect: false,\n\n            amounts: [],\n\n            currency: \"\",\n            amount: \"\",\n            address: \"\",\n\n            created: undefined,\n            isModalOpen: false,\n\n            download: undefined,\n            filename: \"\"\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    onClick() {\n        try {\n            const generator = new Generator(process.env.REACT_APP_NETWORK_ID);\n\n            const account = this.props.account;\n            const amounts = generator.createAmounts(\n                this.state.amounts.map(x =>\n                    generator.formatAmount(parseInt(x.amount), x.currency))\n            );\n\n            const transfersFact = generator.createTransfersFact(\n                account.address,\n                [generator.createTransfersItem(\n                    this.state.address, amounts\n                )]\n            );\n\n            const transfers = generator.createOperation(transfersFact, \"\");\n            transfers.addSign(account.privateKey);\n\n            const created = transfers.dict();\n\n            this.props.setJson(created);\n            this.setState({ isModalOpen: true });\n        }\n        catch (e) {\n            console.log(e);\n            alert('작업을 생성할 수 없습니다. :(\\n입력하신 작업 내용을 확인해주세요~');\n        }\n    }\n\n\n    onChangeCurrency(e) {\n        this.setState({\n            currency: e.target.value\n        });\n    }\n\n    onChangeAmount(e) {\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n    addAmount() {\n        this.setState({\n            amounts: [...this.state.amounts, {\n                currency: this.state.currency,\n                amount: this.state.amount\n            }],\n            currency: \"\",\n            amount: \"\"\n        })\n    }\n\n    componentDidMount() {\n        this.scrollToInput();\n    }\n\n    componentDidUpdate() {\n        this.scrollToInput();\n    }\n\n    scrollToInput = () => {\n\n        if (this.createdRef.current && this.state.amounts.length > 0) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.titleRef.current) {\n            this.titleRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    render() {\n        const account = this.props.account;\n        return (\n            <div className=\"tf-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.titleRef}></div>\n                <h1>TRANSFER</h1>\n                <div className=\"tf-balance-wrap\">\n                    <Balances title='CURRENT BALANCE LIST' labeled={false} balances={account.balances} />\n                </div>\n                <div className=\"tf-input-wrap\">\n                    <div ref={this.createdRef} />\n                    <div className=\"tf-amounts\">\n                        <Balances title='AMOUNT LIST' labeled={true} balances={this.state.amounts} />\n                        <AmountAdder\n                            onCurrencyChange={(e) => this.onChangeCurrency(e)}\n                            onAmountChange={(e) => this.onChangeAmount(e)}\n                            currency={this.state.currency}\n                            amount={this.state.amount}\n                            isAddDisabled={!(this.state.currency && this.state.amount)}\n                            onAdd={() => this.addAmount()} />\n                        <div className='tf-address-adder'>\n                            <p>RECEIVER'S ADDRESS:</p>\n                            <InputBox\n                                size=\"medium\" useCopy={false} disabled={false} placeholder='target address'\n                                value={this.state.threshold}\n                                onChange={(e) => this.onChangeAddress(e)} />\n                        </div>\n                    </div>\n                </div>\n                <ConfirmButton\n                    disabled={this.state.amounts.length < 1 || this.state.address === \"\" ? true : false}\n                    onClick={() => this.onClick()}>TRANSFER</ConfirmButton>\n\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (json) => dispatch(setOperation(OPER_TRANSFER, json)),\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(Transfer));","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Operation.scss';\n\nimport CreateAccount from '../components/operations/CreateAccount';\nimport UpdateKey from '../components/operations/UpdateKey';\nimport Transfer from '../components/operations/Transfer';\nimport { connect } from 'react-redux';\n\nimport * as mode from '../text/mode';\nimport { isStateValid } from '../lib/Validation';\n\nclass Operation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (!isStateValid(this.props)\n            || !Object.prototype.hasOwnProperty.call(this.props.location.state, 'operation') || !this.props.location.state.operation\n            || !this.props.isLogin) {\n\n            this.state = {\n                isRedirect: true,\n                account: undefined,\n                operation: undefined\n            };\n            return;\n        }\n\n        this.state = {\n            isRedirect: this.props.isLogin ? false : true,\n            account: this.props.account,\n            operation: this.props.location.state.operation\n        }\n    }\n\n    render() {\n        let redirect;\n        if (this.props.isLogin) {\n            redirect = `/wallet/${this.props.account.address}`;\n        }\n        else {\n            redirect = '/login';\n        }\n\n        return (\n            <div className=\"oper-container\">\n                {this.state.isRedirect ? <Redirect to={redirect} /> : false}\n                {this.state.operation === mode.OPER_CREATE_ACCOUNT ?\n                    <CreateAccount account={this.state.account} /> : (\n                        this.state.operation === mode.OPER_UPDATE_KEY ?\n                            <UpdateKey account={this.state.account} /> : (\n                                this.state.operation === mode.OPER_TRANSFER ?\n                                    <Transfer account={this.state.account} /> : <Redirect to={redirect} />\n                            ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Operation);","import React, { createRef } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setOperation } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Sign.scss';\n\nimport ConfirmButton from '../components/buttons/ConfirmButton';\n\nimport { Signer } from 'mitumc';\n\nimport OperationConfirm from '../components/modals/OperationConfirm';\n\nimport { TYPE_CREATE_ACCOUNT, TYPE_UPDATE_KEY, TYPE_TRANSFER } from '../text/mode';\nimport { isOperation, isStateValid } from '../lib/Validation';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert('copied!');\n}\n\nconst preStyle = {\n    display: 'block',\n    padding: '10px 30px',\n    margin: '0',\n    overflow: 'visible',\n    whiteSpace: \"pre-wrap\"\n}\n\nconst sig = (x) => {\n    return (\n        <li key={x}>{x}</li>\n    );\n}\n\nconst getOperationFromType = (type) => {\n    switch (type) {\n        case TYPE_CREATE_ACCOUNT:\n            return OPER_CREATE_ACCOUNT;\n        case TYPE_UPDATE_KEY:\n            return OPER_UPDATE_KEY;\n        case TYPE_TRANSFER:\n            return OPER_TRANSFER;\n        default:\n            return OPER_DEFAULT;\n    }\n}\n\nclass Sign extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.createdRef = createRef();\n        this.infoRef = createRef();\n        this.jsonRef = createRef();\n\n        if (!isStateValid(this.props) || !this.props.isLogin) {\n            this.state = {\n                isRedirect: true\n            }\n            return;\n        }\n\n        this.props.setJson(OPER_DEFAULT, {});\n\n        this.state = {\n            isRedirect: false,\n            type: \"\",\n            sigs: [],\n\n            isModalOpen: false,\n            isJsonOpen: false\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    componentDidMount() {\n        this.scrollToJSON();\n    }\n\n    componentDidUpdate() {\n        this.scrollToJSON();\n    }\n\n    scrollToJSON = () => {\n        if (this.jsonRef.current && this.state.isJsonOpen) {\n            this.jsonRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.infoRef.current && this.state.json && !this.state.isJsonOpen) {\n            this.infoRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n        else if (this.createdRef.current) {\n            this.createdRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n\n    jsonView() {\n        return (\n            <div className=\"sign-json\">\n                {!(this.props.operation === OPER_DEFAULT)\n                    ? (\n                        <pre style={preStyle}\n                            onClick={() => onCopy(JSON.stringify(this.props.json, null, 4))}>\n                            {JSON.stringify(this.props.json, null, 4)}\n                        </pre>\n                    ) : false}\n            </div>\n        );\n    }\n\n    importJSON(e) {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        const json = this.props.json;\n\n        try {\n            reader.onload = () => {\n                const parsed = JSON.parse(reader.result);\n                if (!isOperation(parsed)) {\n                    alert('유효하지 않은 작업 파일입니다.');\n                }\n                else {\n                    const operation = getOperationFromType(parsed._hint);\n                    this.props.setJson(operation, parsed);\n                    this.setState({\n                        type: parsed._hint,\n                        sigs: parsed.fact_signs.map(x => x.signature),\n                    })\n                }\n            };\n            reader.readAsText(file, \"utf-8\");\n        } catch (e) {\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.setState({\n                type: json ? json._hint : \"\",\n                sigs: json && Object.prototype.hasOwnProperty.call(json, 'fact_signs') ? json.fact_signs.map(x => x.signature) : []\n            });\n            alert('유효하지 않은 작업파일 입니다.');\n        }\n    }\n\n    onClickSend() {\n        this.setState({\n            isModalOpen: true\n        })\n    }\n\n    onClickSign() {\n        let target = this.props.json;\n\n        if (!isOperation(target)) {\n            return;\n        }\n\n        const signer = new Signer(process.env.REACT_APP_NETWORK_ID, this.props.account.privateKey);\n\n        try {\n            const json = signer.signOperation(target);\n            const operation = getOperationFromType(json._hint);\n\n            this.props.setJson(operation, json);\n            this.setState({\n                type: json._hint,\n                sigs: json.fact_signs.map(x => x.signature)\n            });\n            alert('성공! :D');\n        }\n        catch (e) {\n            const operation = getOperationFromType(target._hint);\n            this.props.setJson(operation, target);\n\n            this.setState({\n                type: Object.prototype.hasOwnProperty.call(target, '_hint') ? target._hint : \"\",\n                sigs: target.fact_signs.map(x => x.signature)\n            })\n            alert('작업에 서명을 추가할 수 없습니다. :(');\n        }\n    }\n\n    openJSON() {\n        this.setState({\n            isJsonOpen: !this.state.isJsonOpen\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"sign-container\">\n                {this.state.isRedirect ? <Redirect to='/login' /> : false}\n                <div ref={this.createdRef} />\n                <h1>SIGN / SEND OPERATION</h1>\n                <div ref={this.infoRef} />\n                <div className=\"sign-operation\">\n                    <div className=\"sign-info\">\n                        <span id=\"other\">\n                            <p id=\"head\">FACT HASH</p>\n                            <p id=\"body\">\n                                {\n                                    this.props.json && Object.prototype.hasOwnProperty.call(this.props.json, 'fact')\n                                        ? this.props.json.fact.hash\n                                        : \"NONE\"\n                                }\n                            </p>\n                        </span>\n                        <span id=\"other\">\n                            <p id=\"head\">TYPE</p>\n                            <p id=\"body\">{this.state.type ? this.state.type : \"NONE\"}</p>\n                        </span>\n                        <span id=\"sig\">\n                            <p id=\"head\">SIGNATURES</p>\n                            <ul>\n                                {this.state.sigs.length > 0\n                                    ? this.state.sigs.map(x => sig(x))\n                                    : (\n                                        <li style={{ textAlign: \"center\" }}>-</li>\n                                    )\n                                }\n                            </ul>\n                        </span>\n                    </div>\n                    <div ref={this.jsonRef} />\n                    {this.props.json\n                        ? (\n                            <div className='sign-view-json'\n                                onClick={() => this.openJSON()}>\n                                <p>{this.state.isJsonOpen ? \"CLOSE\" : \"VIEW JSON\"}</p>\n                            </div>\n                        ) : false}\n                    {this.state.isJsonOpen ? this.jsonView() : false}\n                    <div className=\"sign-files\">\n                        <input type=\"file\" onChange={(e) => this.importJSON(e)} />\n                    </div>\n                </div>\n                <div className=\"sign-buttons\">\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSend()}>SEND</ConfirmButton>\n                    <ConfirmButton disabled={this.props.operation === OPER_DEFAULT} onClick={() => this.onClickSign()}>SIGN</ConfirmButton>\n                </div>\n                <OperationConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account,\n\n    operation: state.operation.operation,\n    json: state.operation.json,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setJson: (operation, json) => dispatch(setOperation(operation, json)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sign));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Navigation.scss';\n\nvar isClose = false;\n\nclass Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            rand: 0\n        }\n    }\n\n    close() {\n        isClose = true;\n        this.setState({ rand: this.state.rand + 1 })\n    }\n\n    check() {\n        if (isClose) {\n            isClose = false;\n            return <Redirect to=\"/logout\" />\n        }\n        else {\n            return false;\n        }\n    }\n\n    render() {\n        const { isLogin, account } = this.props;\n        const addr = account ? account.address.substring(0, 10) + \"... (close wallet)\" : undefined;\n\n        return (\n            <div className=\"nav\">\n                {this.state.rand ? this.check() : false}\n                <Link className=\"nav-title\" to=\"/\">\n                    <p>MITUM WEB WALLET</p>\n                </Link>\n                <Link className={\"nav-login \" + (isLogin ? \"on\" : \"off\")} to=\"/login\">\n                    <p>OPEN WALLET</p>\n                </Link>\n                {isLogin ? <p onClick={() => this.close()} id=\"nav-addr\">{addr}</p> : false}\n                {isLogin\n                    ? (\n                        <Link className=\"nav-sign\" \n                            to={{\n                                pathname: '/sign',\n                                state: {\n                                    json: undefined\n                                }\n                            }}>\n                            <p>SIGN OPERATION</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main\" to=\"/key-generate\">\n                    <p>GENERATE KEYPAIR</p>\n                </Link>\n                {account && account.restoreKey\n                    ? (\n                        <Link className=\"main\" to=\"/res-key-generate\">\n                            <p>GENERATE RESTORE KEY</p>\n                        </Link>\n                    ) : false}\n                <Link className=\"main nav-help\" to=\"/help\">\n                    <p>HELP</p>\n                </Link>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin,\n    account: state.login.account\n});\n\nexport default connect(\n    mapStateToProps,\n)(Navigation);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout, clearHistory, clearQueue } from '../store/actions';\n\nimport './Logout.scss';\n\nclass Logout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.signOut();\n        this.props.clearHistory();\n        this.props.clearQueue();\n    }\n    \n    render() {\n        return !this.props.isLogin\n            ? <Redirect to=\"/login\" />\n            : <span>WAIT...</span>;\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    isLogin: state.login.isLogin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n    clearHistory: () => dispatch(clearHistory()),\n    clearQueue: () => dispatch(clearQueue())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Logout);","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            <a href=\"https://github.com/ProtoconNet/mitum-web-wallet\">https://github.com/ProtoconNet/mitum-web-wallet</a>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './LogoutConfirm.scss';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions';\n\nclass LogoutConfirm extends React.Component {\n\n    onLogout() {\n        this.props.signOut();\n        this.props.onClose();\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            <div className={isOpen ? 'logout-openModal logout-modal' : 'logout-modal'}>\n                {isOpen ? (\n                    <section>\n                        <header>\n                            Wallet Closed\n                            <button className=\"close\" onClick={() => this.onLogout()}> &times; </button>\n                        </header>\n                        <main>\n                            <p id='logout-exp'>지갑이 닫힙니다. 변경된 비밀키로 지갑을 다시 열어주세요.</p>\n                            <p id='logout-exp'>* 작업 실패 시에는 기존 비밀키를 사용해야 합니다.</p>\n                            <span>\n                                <p className=\"logout-modal-button\" id=\"confirm\" onClick={() => this.onLogout()}>확인</p>\n                            </span>\n                        </main>\n                    </section>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signOut: () => dispatch(logout()),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps,\n)(LogoutConfirm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { enqueueOperation, setOperation, setResponse } from '../store/actions';\nimport copy from 'copy-to-clipboard';\n\nimport './Response.scss';\nimport LogoutConfirm from '../components/modals/LogoutConfirm';\nimport { OPER_CREATE_ACCOUNT, OPER_DEFAULT, OPER_TRANSFER, OPER_UPDATE_KEY } from '../text/mode';\n\nconst onCopy = (msg) => {\n    copy(msg);\n    alert(\"copied!\");\n}\n\nconst address = (keyHash) => {\n    return (\n        <li key={keyHash}>\n            <p onClick={() => onCopy(keyHash)}>{keyHash}</p>\n        </li>\n    )\n}\n\nclass Response extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const isSignOut = this.props.operation === OPER_UPDATE_KEY;\n\n        if (!isSignOut && this.props.isBroadcast) {\n            this.props.addJob({\n                operation: this.props.operation,\n                hash: this.props.json.fact.hash,\n                broadcastedAt: new Date().toISOString(),\n            });\n        }\n\n        this.state = {\n            isRedirect: false,\n            isModalOpen: isSignOut,\n            isSignOut,\n        }\n    }\n\n    closeModal() {\n        this.setState({ isModalOpen: false })\n    }\n\n    renderResponse() {\n        const { res, status, operation, data } = this.props;\n\n        switch (status) {\n            case 200:\n                return (\n                    <section className={\"res-detail success\"}>\n                        {\n                            operation === OPER_UPDATE_KEY\n                                ? <h1>KEY UPDATE SUCCESS~ :D</h1>\n                                : <h1>BROADCAST SUCCESS~ :D</h1>\n                        }\n                        <div>\n                            {operation === OPER_CREATE_ACCOUNT\n                                ? (\n                                    <section>\n                                        <h2>CREATED ADDRESS LIST</h2>\n                                        <ul>\n                                            {data.map(x => address(x))}\n                                        </ul>\n                                        <p>지갑 생성 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                ) : false\n                            }\n                            {operation === OPER_TRANSFER\n                                ? (\n                                    <section>\n                                        <p>송금 성공 여부는 지갑 페이지에서 확인해주세요.</p>\n                                    </section>\n                                )\n                                : false\n                            }\n                        </div>\n                    </section>\n                )\n            case 400:\n            case 404:\n            default:\n                return (\n                    <section className={\"res-detail fail\"}>\n                        <h1>{\"FAIL... :(\"}</h1>\n                        <p>{Object.prototype.hasOwnProperty.call(res, 'title') ? res.title : \"응답을 받지 못했습니다.\"}</p>\n                    </section>\n                );\n        }\n    }\n\n    renderRedirect() {\n        if (this.state.isRedirect) {\n            this.props.clearJson();\n            return <Redirect to='/login' />;\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"res-container\">\n                {this.renderRedirect()}\n                {this.renderResponse()}\n                <LogoutConfirm isOpen={this.state.isModalOpen} onClose={() => this.closeModal()} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    operation: state.operation.operation,\n    json: state.operation.json,\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n    isStateIn: state.operation.isStateIn,\n    isBroadcast: state.operation.isBroadcast\n});\n\nconst mapDispatchToProps = dispatch => ({\n    clearJson: () => dispatch(setOperation(OPER_DEFAULT, {})),\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n    addJob: (hash) => dispatch(enqueueOperation(hash))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Response));","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport './UpdateKeyLoad.scss';\nimport { connect } from 'react-redux';\nimport { setResponse } from '../store/actions';\n\nclass UpdateKeyLoad extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRedirect: false,\n            counter: 0,\n        }\n    }\n\n    renderRedirect() {\n        if (this.state.isRedirect) {\n            return (\n                <Redirect to='/response' />\n            )\n        }\n    }\n\n    getResponse() {\n        if (this.state.counter < 50) {\n            const { data, res, isBroadcast } = this.props;\n\n            const getResult = async (_hash, _res, isBroadcast) => {\n                if(!isBroadcast) {\n                    this.setState({\n                        isRedirect: true\n                    })\n\n                    return;\n                }\n\n                return await axios.get(process.env.REACT_APP_API_SEARCH_FACT + _hash)\n                    .then(\n                        response => {\n                            if (response.data._embedded.in_state) {\n                                this.props.setResult(true, true, _res, 200, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                            else {\n                                this.props.setResult(true, false, {\n                                    title: response.data._embedded.reason.msg\n                                }, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                })\n                            }\n                        }\n                    )\n                    .catch(\n                        e => {\n                            if (e.response.data.status === 404 || e.response.data.status === 400) {\n                                this.setState({\n                                    counter: this.state.counter + 1\n                                })\n                            }\n                            else {\n                                this.props.setResult(true, false, e.response.data, 400, _hash);\n                                this.setState({\n                                    isRedirect: true,\n                                });\n                            }\n                        }\n                    )\n            }\n\n            setTimeout((hs, rs, broad) => {\n                getResult(hs, rs, broad);\n            }, 2000, data, res, isBroadcast);\n\n            return () => this.getResponse();\n        }\n        else {\n            this.props.setResult(true, false, {\n                title: \"Too long time to stay response. Maybe mitum failed to process your operation. :(\"\n            }, 400, this.props.data);\n            this.setState({\n                isRedirect: true,\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.getResponse();\n    }\n\n    render() {\n        return (\n            <div className=\"load-container\">\n                {this.renderRedirect()}\n                <section className=\"load-detail\">\n                    <h1>Loading...</h1>\n                    <p>{\"키 업데이트 성공 여부를 조회 중입니다. 잠시만 기다려주세요.\"}</p>\n                    <p>{`REQUEST COUNT: ${this.state.counter}`}</p>\n                </section>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.operation.data,\n    res: state.operation.res,\n    status: state.operation.status,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setResult: (isBroadcast, isStateIn, res, status, data) => dispatch(setResponse(isBroadcast, isStateIn, res, status, data)),\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateKeyLoad));","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './views/Home';\nimport Login from './views/Login';\nimport Wallet from './views/Wallet';\nimport KeyGen from './views/KeyGen';\nimport ResKeyGen from './views/ResKeyGen';\nimport Help from './views/Help';\nimport Operation from './views/Operation';\nimport Sign from './views/Sign';\n\nimport Navigation from './components/Navigation';\nimport Logout from './views/Logout';\nimport Footer from './components/Footer';\nimport Response from './views/Response';\nimport UpdateKeyLoad from './views/UpdateKeyLoad';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"app-container\">\n        <HashRouter >\n          <Navigation />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/wallet/:account\" component={Wallet} />\n          <Route path=\"/key-generate\" component={KeyGen} />\n          <Route path=\"/res-key-generate\" component={ResKeyGen} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/operation\" component={Operation} />\n          <Route path=\"/sign\" component={Sign} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/response\" component={Response} />\n          <Route path='/loading' component={UpdateKeyLoad} />\n          <Footer />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","/* SDK module */\nconst Xutil = require('./util');\nconst Xhint = require('./hint');\nconst VERSION = require('./constant').VERSION;\n\n/* base58 package */\nconst bs58 = require('bs58');\nconst bs58check = require('bs58check');\n\n/* crypto package */\nconst stellar = require('stellar-sdk');\nconst eccrypto = require('eccrypto-js');\nconst elliptic = require('elliptic');\nconst ec = new elliptic.ec('secp256k1');\n\nconst crypto = require('crypto');\n\n/**\n * @function\n * Compares two Key object by Key._buffer().\n * Used to sorting Key objects in Keys.buffer().\n * @param {Key} x - First Key object to compare\n * @param {Key} y - Second Key object to compare\n * @return {number} - Result of comparison: [ (x < y)neg num | (x == y)0 | (x > y)pos num ]\n */\nconst compare = (x, y) => {\n    return Buffer.compare(x.key._buffer(), y.key._buffer());\n}\n\n/**\n * @class\n * Typed key.\n * @property {string} hint - '[type]-[version]'\n * @property {string} key - Hintless key\n */\nclass BaseKey {\n    /** \n     * @constructor \n     * @param {string} key - [ (type='unknown')hinted key | (type!='unknown')hintless key ]\n     * @param {string} type - [ BTC_PBLCKEY | BTC_PRIVKEY | ETHER_PBLCKEY | ETHER_PRIVKEY | STELLAR_PBLCKEY | STELLAR_PRIVKEY | 'unknown' ]\n     */\n    constructor(key, type) {\n        if (type == 'unknown') {\n            const parsed = Xutil.parseHinted(key);\n            this.hint = parsed.hint;\n            this.key = parsed.hintless;\n        }\n        else {\n            this.hint = Xutil._hint(type);\n            this.key = key;\n        }\n    }\n\n    /**\n     * @method\n     * Returns hinted key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    hinted() {\n        return this.key + ':' + this.hint;\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hinted key.\n     * @return {Buffer} - Buffered hinted key \n     */\n    buffer() {\n        return Buffer.from(this.hinted())\n    }\n\n    /**\n     * @method\n     * Returns Buffer of hintless key.\n     * @return {Buffer} - Buffered hintless key. \n     */\n    _buffer() {\n        return Buffer.from(this.key);\n    }\n};\n\n\n/**\n * @class\n * Key containing key and its weight.\n * @property {string} hint - 'MC_KEY:[version]'\n * @property {BaseKey} key - BaseKey object for key\n * @property {Xutil.BigInteger} weight - weight of key \n */\nclass Key {\n    /** \n     * @constructor \n     * @param {string} key - Hinted key\n     * @param {number} w - weight\n     * */\n    constructor(key, w) {\n        this.hint = Xutil._hint(Xhint.MC_KEY);\n        this.key = new BaseKey(key, 'unknown');\n        this.weight = new Xutil.BigInteger(w);\n    }\n\n    /**\n     * @method\n     * Concatenates key.buffer() and weight.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: key.buffer()~weight.buffer()\n     */\n    buffer() {\n        return Buffer.concat(\n            [this.key.buffer(), this.weight.buffer()]\n        );\n    }\n\n    /**\n     * @method\n     * Returns key dictionary.\n     * @return {object} - Dictionary object: {_hint, weight, key}\n     */\n    dict() {\n        const key = {};\n        key._hint = this.hint;\n        key.weight = this.weight.value;\n        key.key = this.key.hinted();\n        return key;\n    }\n};\n\n\n\n/**\n * @class\n * Keys containing Key list, threshold and hash.\n * @property {string} hint - 'MC_KEYS:[version]'\n * @property {object} keys - Array that each element is Key object\n * @property {Xutil.BigInteger} thereshold - threshold of Keys\n * @property {Buffer} hash - hash of keys\n\n */\nclass Keys {\n    /**\n     * @constructor\n     * @param {object} keys - Array that each element is Key object\n     * @param {number} threshold - threshold\n     */\n    constructor(keys, threshold) {\n        this.hint = Xutil._hint(Xhint.MC_KEYS);\n        this.keys = keys;\n        this.threshold = new Xutil.BigInteger(threshold);\n        this.hash = this._generateHash();\n    }\n\n    get address() {\n        return this.hash.hash + ':' + Xhint.MC_ADDRESS + '-' + VERSION;\n    }\n\n    /**\n     * @method\n     * Sorts keys by key.buffer().\n     * Concatenates every key.buffer() in keys and threshold.buffer() then\n     * Returns concatenated Buffer.\n     * @return {Buffer} - Concatenated Buffer: *key.buffer()~threshold.buffer()\n     */\n    buffer() {\n        const karr = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            karr.push(this.keys[i]);\n        }\n        const sortedkeys = karr.sort(compare);\n        const bkeys = Xutil.concatObjectsToBuffer(sortedkeys)\n\n        const bthreshold = this.threshold.buffer();\n\n        return Buffer.concat([bkeys, bthreshold]);\n    }\n\n    /**\n     * @method\n     * Returns keys dictionary.\n     * @return {object} - Dictionary object: {_hint, hash, threshold}\n     */\n    dict() {\n        const keys = {};\n        keys._hint = this.hint;\n        keys.hash = bs58.encode(this.hash);\n\n        const _keys = [];\n        for (var i = 0; i < this.keys.length; i++) {\n            _keys.push(\n                this.keys[i].dict()\n            );\n        }\n        keys.keys = _keys;\n        keys.threshold = this.threshold.value;\n\n        return keys;\n    }\n\n    /**\n     * @method\n     * Returns hash of Keys.buffer().\n     * @return {Buffer} - hash in Buffer\n     */\n    _generateHash() {\n        return Xutil.sum256(this.buffer());\n    }\n};\n\n\n/**\n * @class\n * Keypair containing key type, private key and public key.\n * BTCKeypair, ETHERKeypair, and  StellarKeypair extend this class.\n * @property {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n * @property {BaseKey} privKey - Private key\n * @property {string} pubKey - Public Key\n * @property {object} keypair - keypair up to key type (up to sdk)\n */\nclass Keypair {\n    /**\n     * @constructor\n     * @param {string} privKey - Hintless private key\n     * @param {string} type - [ BTC_PBLCKEY | ETHER_PBLCKEY | STELLAR_PBLCKEY ]\n     */\n    constructor(privKey, type) {\n        switch (type) {\n            case Xhint.BTC_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.BTC_PRIVKEY);\n                break;\n            case Xhint.ETHER_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.ETHER_PRIVKEY);\n                break;\n            case Xhint.STELLAR_PBLCKEY:\n                this.privKey = new BaseKey(privKey, Xhint.STELLAR_PRIVKEY);\n                break;\n            default:\n                throw '[ERROR] Invalid keypair type';\n        }\n        this.pubKey = undefined;\n        this.keypair = undefined;\n        this.type = type;\n    }\n\n    /**\n     * @method\n     * Returns hinted public key.\n     * @return {string} - '[key]:[type]-[version]'\n     */\n    getPublicKey() {\n        return this.pubKey + ':' + Xutil._hint(this.type);\n    }\n\n    /**\n     * @abstract\n     * Generates signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated signature\n     */\n    sign(msg) {\n        throw '[ERROR] Unimplemented function sign(msg)';\n    }\n\n    /**\n     * @abstract\n     * Generates public key by provided private key.\n     */\n    _generatePublicKey() {\n        throw '[ERROR] Unimplemented function _generatePublicKey()';\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * BTC Keypair.\n * @property {string} type - BTC_PBLCKEY\n * @property {BaseKey} privKey - BTC Private key\n * @property {string} pubKey - BTC Public key\n * @property {elliptic.ec.KeyPair} keypair - BTC keypair\n */\nclass BTCKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless BTC private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.BTC_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates BTC signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated BTC signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(Xutil.sha256(msg));\n        const sk = this.keypair.getPrivate('hex');\n\n        return Buffer.from(ec.sign(_msg, sk, 'hex', { canonical: true }).toDER());\n    }\n\n    /**\n     * @override\n     * Generates BTC public key by provided private key.\n     */\n    _generatePublicKey() {\n        const _sk = bs58check.decode(this.privKey.key);\n        const _decode = Buffer.from(_sk.slice(1, _sk.length - 1));\n\n        this.keypair = ec.keyFromPrivate(_decode);\n        this.pubKey = bs58.encode(eccrypto.getPublicCompressed(_decode));\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * ETHER Keypair.\n * @property {string} type - ETHER_PBLCKEY\n * @property {BaseKey} privKey - ETHER Private key\n * @property {string} pubKey - ETHER Public key\n * @property {elliptic.ec.KeyPair} keypair - ETHER keypair\n */\nclass ETHKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless ETHER private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.ETHER_PBLCKEY);\n        this._generatePublicKey();\n    }\n    /**\n     * @override\n     * Generates ETHER signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated ETHER signature\n     */\n    sign(msg) {\n        const _msg = Xutil.sha256(msg);\n        const sk = this.keypair.getPrivate('hex');\n\n        const sig = ec.sign(_msg, sk, 'hex', { canonical: true }).toDER();\n\n        const rlen = sig[3];\n        const r = sig.slice(4, 4 + rlen);\n        const slen = sig[5 + rlen];\n        const s = sig.slice(6 + rlen);\n\n        const _rlen = new Xutil.BigInteger(rlen);\n        const brlen = _rlen.little();\n\n        const buf = Buffer.alloc(rlen + slen + 4);\n        brlen.copy(buf, 0, 0, 4);\n        Buffer.from(r).copy(buf, 4, 0, rlen);\n        Buffer.from(s).copy(buf, rlen, 0, slen);\n\n        return buf;\n    }\n\n    /**\n     * @override\n     * Generates ETHER public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = ec.keyFromPrivate(this.privKey.key);\n        this.pubKey = this.keypair.getPublic().encode('hex');\n    }\n};\n\n\n/**\n * @class\n * @extends Keypair\n * Stellar Keypair.\n * @property {string} type - STELLAR_PBLCKEY\n * @property {BaseKey} privKey - Stellar Private key\n * @property {string} pubKey - Stellar Public key\n * @property {stellar.Keypair} keypair - Stellar keypair\n */\nclass StellarKeypair extends Keypair {\n    /**\n     * @construtor\n     * @param {string} privKey - Hintless Stellar private key\n     */\n    constructor(privKey) {\n        super(privKey, Xhint.STELLAR_PBLCKEY);\n        this._generatePublicKey();\n    }\n\n    /**\n     * @override\n     * Generates Stellar signature for message.\n     * @param {Buffer} msg - Message to sign\n     * @return {Buffer} - Generated Stellar signature\n     */\n    sign(msg) {\n        return this.keypair.sign(msg);\n    }\n\n    /**\n     * @override\n     * Generates Stellar public key by provided private key.\n     */\n    _generatePublicKey() {\n        this.keypair = stellar.Keypair.fromSecret(this.privKey.key);\n        this.pubKey = this.keypair.publicKey();\n    }\n};\n\nconst _btckp = () => {\n    const _pk = Buffer.from(\n        '80' + ec.genKeyPair().getPrivate('hex') + '01', 'hex');\n\n    let _hs = Xutil.sha256(_pk);\n    _hs = Xutil.sha256(_hs);\n\n    const checksum = Buffer.from(_hs.subarray(0, 4));\n    return new BTCKeypair(bs58.encode(\n        Buffer.concat([_pk, checksum])\n    ));\n};\n\nconst _ethkp = () => {\n    return new ETHKeypair(ec.genKeyPair().getPrivate('hex'));\n}\n\nconst _stlkp = () => {\n    return new StellarKeypair(stellar.Keypair.random().secret());\n}\n\nconst getKeypair = (_type) => {\n    if (_type == 'btc') {\n        return _btckp();\n    }\n    else if (_type == 'ether') {\n        return _ethkp();\n    }\n    else if (_type == 'stellar') {\n        return _stlkp();\n    }\n    else {\n        throw \"[ERROR] Wrong Input! (Usage: <getKeypair(#type)> type: 'btc', 'ether', 'stellar')\";\n    }\n};\n\nconst toKeypair = (_key, _type) => {\n    let type = _type;\n    let key = _key;\n    if (_type == '') {\n        if (_key.indexOf(':') === -1) {\n            throw \"[ERROR] Wrong Input!\\n(Usage: <toKeypair(key, type)> (#key, #type) must be (hinted-key, '') or (hintless-key, 'btc' | 'ether' | 'stellar'))\"\n        }\n        else {\n            const parsed = Xutil.parseHinted(_key);\n            key = parsed.hintless;\n            type = Xutil.getTypeFromHint(parsed.hint);\n        }\n    }\n    switch (type) {\n        case 'btc':\n        case Xhint.BTC_PRIVKEY:\n            return new BTCKeypair(key);\n        case 'ether':\n        case Xhint.ETHER_PRIVKEY:\n            return new ETHKeypair(key);\n        case 'stellar':\n        case Xhint.STELLAR_PRIVKEY:\n            return new StellarKeypair(key);\n        default:\n            throw '[ERROR] Wrong key type'\n    }\n    return null;\n}\n\nmodule.exports = {\n    Key,\n    Keys,\n    BTCKeypair,\n    ETHKeypair,\n    StellarKeypair,\n    getKeypair,\n    toKeypair\n};"],"sourceRoot":""}